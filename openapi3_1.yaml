openapi: 3.1.0
info:
  title: Partoo Rest API
  version: v2
  license:
    name: Â© Copyright Partoo
    url: https://www.partoo.co/en/gtu-api/
servers:
  - url: https://api.partoo.co/v2
    description: Production server
  - url: https://api.sandbox.partoo.co/v2
    description: Sandbox server (dev environment for clients & partners)
paths:
  /business/search:
    get:
      operationId: searchBusinesses
      tags:
        - Businesses
      summary: Search for businesses
      description: >
        This lets you search among the businesses you have `READ` access to. You
        can use several filters. The response is paginated (30 results per
        page).
      parameters:
        - $ref: '#/components/parameters/query_filter_by_fuzzy_query_on_business'
        - $ref: '#/components/parameters/query_business__in'
        - $ref: '#/components/parameters/query_filter_by_org_id'
        - $ref: '#/components/parameters/query_filter_by_group_id'
        - $ref: '#/components/parameters/query_filter_by_groups'
        - $ref: '#/components/parameters/query_filter_by_country'
        - $ref: '#/components/parameters/query_filter_by_business_name'
        - $ref: '#/components/parameters/query_filter_by_business_status'
        - $ref: '#/components/parameters/query_filter_by_zipcode'
        - $ref: '#/components/parameters/query_filter_by_city'
        - $ref: '#/components/parameters/query_filter_by_business_code'
        - $ref: >-
            #/components/parameters/query_filter_by_business_modification_timestamp
        - $ref: '#/components/parameters/query_filter_by_business_features__in'
        - $ref: '#/components/parameters/query_filter_by_business_features__notin'
        - $ref: >-
            #/components/parameters/query_filter_by_business_subscription_to_review_management
        - $ref: >-
            #/components/parameters/query_filter_by_business_subscription_to_presence_management
        - $ref: >-
            #/components/parameters/query_filter_by_business_subscription_to_review_booster
        - $ref: >-
            #/components/parameters/query_filter_by_business_subscription_to_messages
        - $ref: >-
            #/components/parameters/query_filter_by_business_completion_rate__gte
        - $ref: >-
            #/components/parameters/query_filter_by_business_completion_rate__lte
        - $ref: '#/components/parameters/query_filter_by_business_completion_rate'
        - $ref: '#/components/parameters/query_filter_by_business_promo'
        - in: query
          name: connected_to_gmb_location
          schema:
            type: string
            enum:
              - 'True'
              - 'False'
          required: false
          description: Filter by current link to a Google location
        - in: query
          name: connected_to_facebook_location
          schema:
            type: string
            enum:
              - 'True'
              - 'False'
          required: false
          description: Filter by current link to a Facebook location
        - $ref: '#/components/parameters/query_page_up_to_100'
        - $ref: '#/components/parameters/query_per_page_1_100'
        - in: query
          name: order_by
          schema:
            type: string
            enum:
              - id
              - name
              - code
              - created
              - modified
              - country
              - city
              - zipcode
              - completion_rate
              - '-id'
              - '-name'
              - '-code'
              - '-created'
              - '-modified'
              - '-country'
              - '-city'
              - '-zipcode'
              - '-completion_rate'
            default: id
          required: false
          description: >
            Order result by given attribute.

            Reverse order can as well be obtained by using a `-` (minus sign)
            before the attribute name, e.g. `order_by=-name`
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      businesses:
                        type: array
                        description: List of Businesses
                        items:
                          $ref: '#/components/schemas/BusinessWithCustomFields'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  /business/search/stats:
    get:
      operationId: searchBusinessesStats
      tags:
        - Businesses
      summary: Get completion rate stats from your businesses
      description: >
        This endpoint works in the same way as the
        [operation/searchBusinesses](https://developers.partoo.co/rest_api/v2/#operation/searchBusinesses)
        endpoint, but instead of returning data on all returned businesses, this
        endpoint returns completion rate statistics aggregated across all
        businesses.


        The statistics returned are the average completion rate for all
        businesses that fit the given filters, as well as the count of
        businesses with a low, medium, and high respectively. The thresholds for
        low, medium, and high can be found below in the response details.


        Note that this endpoint works in the exact same way as
        [operation/searchBusinesses](https://developers.partoo.co/rest_api/v2/#operation/searchBusinesses)
        (with the exception of parameters that format the output, such as
        <code>order_by</code> and pagination), but the return value is
        different.
      parameters:
        - $ref: '#/components/parameters/query_filter_by_fuzzy_query_on_business'
        - $ref: '#/components/parameters/query_business__in'
        - $ref: '#/components/parameters/query_filter_by_org_id'
        - $ref: '#/components/parameters/query_filter_by_group_id'
        - $ref: '#/components/parameters/query_filter_by_groups'
        - $ref: '#/components/parameters/query_filter_by_country'
        - $ref: '#/components/parameters/query_filter_by_business_name'
        - $ref: '#/components/parameters/query_filter_by_business_status'
        - $ref: '#/components/parameters/query_filter_by_zipcode'
        - $ref: '#/components/parameters/query_filter_by_city'
        - $ref: '#/components/parameters/query_filter_by_business_code'
        - $ref: >-
            #/components/parameters/query_filter_by_business_modification_timestamp
        - $ref: '#/components/parameters/query_filter_by_business_features__in'
        - $ref: '#/components/parameters/query_filter_by_business_features__notin'
        - $ref: >-
            #/components/parameters/query_filter_by_business_subscription_to_review_management
        - $ref: >-
            #/components/parameters/query_filter_by_business_subscription_to_presence_management
        - $ref: >-
            #/components/parameters/query_filter_by_business_subscription_to_review_booster
        - $ref: >-
            #/components/parameters/query_filter_by_business_subscription_to_messages
        - $ref: >-
            #/components/parameters/query_filter_by_business_completion_rate__gte
        - $ref: >-
            #/components/parameters/query_filter_by_business_completion_rate__lte
        - $ref: '#/components/parameters/query_filter_by_business_completion_rate'
        - $ref: '#/components/parameters/query_filter_by_business_promo'
        - in: query
          name: connected_to_gmb_location
          schema:
            type: string
            enum:
              - 'True'
              - 'False'
          required: false
          description: Filter by current link to a Google location
        - in: query
          name: connected_to_facebook_location
          schema:
            type: string
            enum:
              - 'True'
              - 'False'
          required: false
          description: Filter by current link to a Facebook location
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  average_completion_rate:
                    description: >-
                      The average completion rate of all businesses that fit the
                      filters given in paramers.
                    type: integer
                    example: 72
                  counts:
                    type: object
                    properties:
                      low:
                        type: integer
                        example: 2
                        description: >-
                          The number of businesses that fit the filters given in
                          paramers with a completion score of <=33.
                      mid:
                        type: integer
                        example: 10
                        description: >-
                          The number of businesses that fit the filters given in
                          paramers with a completion score of >33 and <=66.
                      high:
                        type: integer
                        example: 22
                        description: >-
                          The number of businesses that fit the filters given in
                          paramers with a completion score of >66.
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  /business/connections_stats:
    get:
      tags:
        - Businesses
      operationId: getBusinessConnectionsStats
      summary: Statistics for your connected businesses
      description: >
        This endpoint lets you access the number of businesses connected to
        different platforms.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: |
                      Total number of businesses.
                  linked_to_gmb_count:
                    type: integer
                    description: |
                      Number of businesses linked to Google.
                  linked_to_facebook_count:
                    type: integer
                    description: |
                      Number of businesses linked to Facebook.
                  linked_to_tripadvisor_count:
                    type: integer
                    description: |
                      Number of businesses linked to Tripadvisor.
                  linked_to_instagram_count:
                    type: integer
                    description: |
                      Number of businesses linked to Instagram.
        '401':
          $ref: '#/components/responses/401'
  /business:
    post:
      tags:
        - Businesses
      summary: Create business
      description: >
        This API allows the creation of a new business in the context of your
        organization.
      operationId: createBusiness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              required:
                - name
                - country
                - categories
                - contacts
              properties:
                name:
                  $ref: '#/components/schemas/BusinessName'
                org_id:
                  $ref: '#/components/schemas/BusinessOrgId'
                groups:
                  $ref: '#/components/schemas/groups'
                reach:
                  $ref: '#/components/schemas/BusinessReach'
                country:
                  $ref: '#/components/schemas/BusinessCountry'
                zipcode:
                  $ref: '#/components/schemas/BusinessZipcode'
                city:
                  $ref: '#/components/schemas/RequiredBusinessCity'
                region:
                  $ref: '#/components/schemas/BusinessRegion'
                categories:
                  $ref: '#/components/schemas/BusinessCategories'
                code:
                  $ref: '#/components/schemas/BusinessCode'
                status:
                  $ref: '#/components/schemas/BusinessStatus'
                opening_date:
                  $ref: '#/components/schemas/BusinessOpeningDate'
                address_full:
                  $ref: '#/components/schemas/AddressFull'
                address2:
                  $ref: '#/components/schemas/Address2'
                lat:
                  $ref: '#/components/schemas/BusinessLatitude'
                long:
                  $ref: '#/components/schemas/BusinessLongitude'
                website_url:
                  $ref: '#/components/schemas/BusinessWebsite'
                facebook_url:
                  $ref: '#/components/schemas/BusinessFacebookPage'
                twitter_url:
                  $ref: '#/components/schemas/BusinessTwitter'
                description_short:
                  $ref: '#/components/schemas/BusinessShortDescription'
                description_long:
                  $ref: '#/components/schemas/BusinessLongDescription'
                open_hours:
                  $ref: '#/components/schemas/OpenHours'
                specific_hours:
                  $ref: '#/components/schemas/SpecificHours'
                contacts:
                  $ref: '#/components/schemas/BusinessContactsCreate'
                photos:
                  $ref: '#/components/schemas/Photos'
                national_identification_number:
                  $ref: '#/components/schemas/BusinessNationalIdentificationNumber'
                custom_fields:
                  $ref: '#/components/schemas/CustomFields.Update'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/RequestStatus'
                  id:
                    $ref: '#/components/schemas/BusinessId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /business/{business_id}:
    get:
      tags:
        - Businesses
      operationId: getBusiness
      summary: Business information
      description: >
        This endpoint lets you access to the information of a business. You need
        to have `READ`access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessWithCustomFields'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - Businesses
      operationId: updateBusiness
      summary: Update business
      description: >
        This endpoint lets you access to the information of a business. You need
        to have `WRITE` access on this business. Only indicated values are taken
        into account (it works like a `PATCH`). You cannot push fields disabled
        for your org.
      parameters:
        - $ref: '#/components/parameters/business_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/BusinessName'
                org_id:
                  $ref: '#/components/schemas/BusinessOrgId'
                groups:
                  $ref: '#/components/schemas/groups'
                country:
                  $ref: '#/components/schemas/BusinessCountry'
                zipcode:
                  $ref: '#/components/schemas/BusinessZipcode'
                city:
                  $ref: '#/components/schemas/BusinessCity'
                region:
                  $ref: '#/components/schemas/BusinessRegion'
                categories:
                  $ref: '#/components/schemas/BusinessCategories'
                code:
                  $ref: '#/components/schemas/BusinessCode'
                status:
                  $ref: '#/components/schemas/BusinessStatus'
                opening_date:
                  $ref: '#/components/schemas/BusinessOpeningDate'
                address2:
                  description: Row address string
                  type: string
                address_full:
                  $ref: '#/components/schemas/AddressFull'
                lat:
                  $ref: '#/components/schemas/BusinessLatitude'
                long:
                  $ref: '#/components/schemas/BusinessLongitude'
                website_url:
                  $ref: '#/components/schemas/BusinessWebsite'
                facebook_url:
                  $ref: '#/components/schemas/BusinessFacebookPage'
                twitter_url:
                  $ref: '#/components/schemas/BusinessTwitter'
                description_short:
                  $ref: '#/components/schemas/BusinessShortDescription'
                description_long:
                  $ref: '#/components/schemas/BusinessLongDescription'
                open_hours:
                  $ref: '#/components/schemas/OpenHours'
                specific_hours:
                  $ref: '#/components/schemas/SpecificHours'
                contacts:
                  $ref: '#/components/schemas/BusinessContacts'
                photos:
                  $ref: '#/components/schemas/Photos'
                national_identification_number:
                  $ref: '#/components/schemas/BusinessNationalIdentificationNumber'
                custom_fields:
                  $ref: '#/components/schemas/CustomFields.Update'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/RequestStatus'
                  id:
                    $ref: '#/components/schemas/BusinessId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          description: |
            You are not allowed to perform this action
          content:
            application/json:
              schema:
                description: >
                  Error that occurs when you are authenticated but you are
                  trying to perform an action you are not allowed to perform
                type: object
                properties:
                  errors:
                    type: object
                    description: The detail of the error encountered
                    properties:
                      authorization:
                        additionalProperties:
                          type: string
                          default: Operation not allowed
              example:
                errors:
                  authorization:
                    name: edit_not_allowed
                    open_hours: edit_not_allowed
                    photos.primary: edit_not_allowed
                    photos.secondary: edit_not_allowed
        '404':
          $ref: '#/components/responses/404'
    delete:
      tags:
        - Businesses
      operationId: deleteBusiness
      summary: Delete business
      description: >
        This endpoint lets you delete a business. You need to have `WRITE`access
        on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Response object
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/BusinessId'
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /attributes/list:
    get:
      summary: List Google Attributes
      description: >
        <p>Get all Google Attributes available for a Category in a given
        language. </p> <p>â ï¸ <b>What are Google Attributes ?</b> <p>Google
        Attributes are highly visible statements about your business that appear
        on your Google listing. <p>They indicate things like Payment Options,
        Amenities, Accessibility and Highlights. <p>Does a business provide
        parking? Does it have a fireplace? Can customers pay with a debit card?
        <p>To recover attributes values set for a business, <a
        href="#operation/getBusinessAttributes">see get attributes business
        endpoints</a>. <p>To handle attributes values for businesses, <a
        href="#operation/postBusinessAttributes">see set attributes business
        endpoints</a>. <p>This endpoint allows you to view the **Google**
        attributes available for a given Category.
      operationId: getAttributes
      tags:
        - Google
      parameters:
        - $ref: '#/components/parameters/category_name'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributesGroupResponse'
        '400':
          description: Wrong or missing parameters
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AttributesMissingParametersError'
                  - $ref: '#/components/schemas/AttributesWrongCategoryError'
                  - $ref: '#/components/schemas/AttributesWrongLangError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /holidays/{country}:
    get:
      tags:
        - Holidays
      operationId: getHolidays
      summary: Get holidays
      description: >
        This endpoint allows you to retrieve a list of upcoming bank holidays
        for a specified country within the next 365 days.  The holidays are
        ordered based on their occurrence dates.
      parameters:
        - name: country
          in: path
          required: true
          schema:
            type: string
          example: FR
          description: >-
            Country code from ISO 3166 international standard -
            https://www.iban.com/country-codes
        - name: lang
          in: query
          schema:
            description: >-
              Preferred language for holiday names. If no language is provided,
              the user's default language will be used. If the user's default
              language is unavailable, the country's primary language will be
              used.
            type: string
            enum:
              - fr
              - en
              - es
              - it
              - pt-br
              - de
              - ar
            example: fr
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  holidays:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of bank holiday
                        date:
                          type: string
                          format: date
                          description: Date of bank holiday
                example:
                  holidays:
                    - name: Armistice
                      date: '2023-11-11'
                    - name: NoÃ«l
                      date: '2023-12-25'
                    - name: Jour de l'an
                      date: '2024-01-01'
                    - name: Lundi de PÃ¢ques
                      date: '2024-04-01'
                    - name: FÃªte du Travail
                      date: '2024-05-01'
                    - name: FÃªte de la Victoire
                      date: '2024-05-08'
                    - name: Ascension
                      date: '2024-05-09'
                    - name: Lundi de PentecÃ´te
                      date: '2024-05-20'
                    - name: FÃªte nationale
                      date: '2024-07-14'
                    - name: Assomption
                      date: '2024-08-15'
                    - name: Toussaint
                      date: '2024-11-01'
                    - name: Christmas
                      date: '2024-12-25'
                    - name: New Year's Day
                      date: '2025-01-01'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  /place_action_links:
    get:
      tags:
        - Place Action Links
      summary: Get Place Action Links
      description: |
        Retrieve a list of available place action links. 
      operationId: getAvailablePlaceActionLinks
      parameters:
        - $ref: '#/components/parameters/query_place_action_link_lang'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlaceActionLinksResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /reviews:
    get:
      summary: Search for reviews
      description: >
        This endpoint lets you search for the reviews of your businesses.


        To access the reviews of a business you need to have `READ` access on
        it.

        The response is paginated (30 results per page).
      operationId: searchReviews
      tags:
        - Reviews
      parameters:
        - $ref: '#/components/parameters/query_business__in'
        - $ref: '#/components/parameters/query_business__notin'
        - $ref: '#/components/parameters/query_content__isnull'
        - $ref: '#/components/parameters/query_partner__in'
        - $ref: '#/components/parameters/query_gmb_rating__in'
        - $ref: '#/components/parameters/query_tripadvisor_rating__in'
        - $ref: '#/components/parameters/query_recommended__in'
        - $ref: '#/components/parameters/query_review_update_date__gte'
        - $ref: '#/components/parameters/query_review_update_date__lte'
        - $ref: '#/components/parameters/query_review_state'
        - $ref: '#/components/parameters/query_tag_label_in'
        - $ref: '#/components/parameters/query_review_without_tag'
        - $ref: '#/components/parameters/query_keywords'
        - $ref: '#/components/parameters/query_page_up_to_100'
        - $ref: '#/components/parameters/query_per_page_1_100'
        - $ref: '#/components/parameters/query_order_by'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      reviews:
                        description: Filtered reviews
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /reviews/{review_id}:
    put:
      summary: Update a review
      description: |
        Update the state of a review to treated/not_treated
      operationId: updateReview
      tags:
        - Reviews
      parameters:
        - in: path
          name: review_id
          required: true
          schema:
            $ref: '#/components/schemas/ReviewId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to post a reply
              type: object
              required:
                - review_id
                - state
              properties:
                state:
                  description: Reply state
                  type: string
                  enum:
                    - treated
                    - not_treated
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Review'
                  - properties:
                      state:
                        example: treated
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /comments:
    post:
      tags:
        - Reviews
      summary: Post a reply to a review
      description: This endpoint lets you reply to a given review.
      operationId: ReplyToReview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to post a reply
              type: object
              required:
                - review_id
                - content
              properties:
                review_id:
                  description: ID of the review you want to reply
                  type: number
                  example: 34
                parent_id:
                  description: >
                    The id of the parent comment you want to reply


                    Works only for Facebook comments, since it's possible to
                    reply to a comment (depth max is 2).

                    Google and TripAdvisor don't accept this behaviour.
                  type: number
                  example: 1234
                content:
                  description: Content of your reply
                  type: string
                  format: text
                  example: Merci â¤ï¸
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /comments/{comment_id}:
    put:
      tags:
        - Reviews
      summary: Modify a reply to a review
      description: This endpoint lets you modify a given reply to a review.
      operationId: ModifyReplyOfReview
      parameters:
        - in: path
          name: comment_id
          required: true
          schema:
            $ref: '#/components/schemas/CommentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to modify a reply
              type: object
              required:
                - content
              properties:
                content:
                  description: Content of your Reply
                  type: string
                  format: text
                  example: Merci â¤ï¸
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      tags:
        - Reviews
      summary: Delete the given reply to a review
      operationId: deleteReply
      description: |
        This endpoint lets you delete the reply to a review
      parameters:
        - in: path
          name: comment_id
          required: true
          schema:
            $ref: '#/components/schemas/CommentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /presence_analytics/metrics:
    get:
      summary: Profile metrics for your business
      description: >
        This endpoint lets you view the **Google Business Profile** analytics
        for all your businesses subscribed to

        **Presence Management**.

        The API allows you to select what data you're interested in, and how you
        want it aggregated (daily, monthly,

        by business, etc). You can also filter the results to limit it to a
        certain date range, and to certain business.


        Google Business Profile doesn't provide reliable data for the most
        recent 5 days.


        You can choose the analytics you want to get among:

        - impressions: desktop maps impressions, mobile maps impressions,
        desktop search impressions, and mobile search impressions

        - actions: website link clicks, phone calls, and driving directions


        You can use the following filters:

        - by businesses (businesses id in list or not in list)

        - by date (analytics before and/or after a date)

        - by business query. Will return matches for the business name, zipcode
        or city

        - by business city.


        The response can be aggregated by:

        - business id

        - by date: either by day, week, month or year

        - by both business id and date


        The response can be ordered in ascending or descending order by any of
        the selected dimensions or metrics.

        See examples for more details.
      operationId: getPresenceAnalyticsMetrics
      tags:
        - Presence analytics
      deprecated: false
      parameters:
        - $ref: '#/components/parameters/query_metrics'
        - $ref: '#/components/parameters/query_dimensions'
        - $ref: '#/components/parameters/parameters_query_order_by'
        - $ref: '#/components/parameters/parameters_query_business__in'
        - $ref: '#/components/parameters/parameters_query_business__notin'
        - $ref: '#/components/parameters/query_city'
        - $ref: '#/components/parameters/query_query'
        - $ref: '#/components/parameters/query_filter_date__gte'
        - $ref: '#/components/parameters/query_filter_date__lte'
        - $ref: '#/components/parameters/parameters_query_page'
        - $ref: '#/components/parameters/query_per_page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresenceAnalyticsMetricsResponse'
              examples:
                metrics=business_impressions_desktop_maps,business_impressions_desktop_search,business_impressions_mobile_maps,business_impressions_mobile_search,business_direction_requests,call_clicks,website_clicks:
                  value:
                    page: 1
                    count: 1
                    max_page: 1
                    metrics:
                      - business_impressions_desktop_maps: 123
                        business_impressions_desktop_search: 123
                        business_impressions_mobile_maps: 123
                        business_impressions_mobile_search: 123
                        business_direction_requests: 123
                        call_clicks: 123
                        website_clicks: 123
                dimensions=business & metrics=call_clicks:
                  value:
                    page: 1
                    count: 3
                    max_page: 1
                    metrics:
                      - call_clicks: 103
                        business_id: 59b2645db12ff60643ef832c
                      - call_clicks: 165
                        business_id: 60b2645fb12ff60643ef8344
                      - call_clicks: 28
                        business_id: 70b2645eb12ff60643ef833c
                dimensions=month & metrics=website_clicks & order_by=website_clicks:
                  value:
                    page: 1
                    count: 2
                    max_page: 1
                    metrics:
                      - website_clicks: 57
                        date: '2019-08-01'
                        bucket: month
                      - website_clicks: 79
                        date: '2019-09-01'
                        bucket: month
                dimensions=day,business & metrics=call_clicks & order_by=-day:
                  value:
                    page: 1
                    count: 6
                    max_page: 1
                    metrics:
                      - call_clicks: 48
                        business_id: 59b2645db12ff60643ef832c
                        date: '2019-09-30'
                        bucket: day
                      - call_clicks: 6
                        business_id: 59b2645fb12ff60643ef8344
                        date: '2019-09-30'
                        bucket: day
                      - call_clicks: 11
                        business_id: 59b2645db12ff60643ef832c
                        date: '2019-09-29'
                        bucket: day
                      - call_clicks: 0
                        business_id: 59b2645fb12ff60643ef8344
                        date: '2019-09-29'
                        bucket: day
                      - call_clicks: 2
                        business_id: 59b2645db12ff60643ef832c
                        date: '2019-09-28'
                        bucket: day
                      - call_clicks: 66
                        business_id: 59b2645fb12ff60643ef8344
                        date: '2019-09-28'
                        bucket: day
                dimensions=week & metrics=website_clicks & filter_date__gte=2019-09-15 & filter_date__lte=2019-09-16:
                  value:
                    page: 1
                    count: 2
                    max_page: 1
                    metrics:
                      - website_clicks: 32
                        date: '2019-09-09'
                        bucket: week
                      - website_clicks: 164
                        date: '2019-09-16'
                        bucket: week
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /presence_analytics/keywords:
    get:
      summary: Profile keywords for your business
      description: >
        This endpoint lets you view the monthly **Google Business Profile**
        search keywords for all your businesses subscribed to Presence
        Management.


        To access the analytics of a business, you need to:

        - have `READ` access on it

        - have subscribed to **Presence Management** for this business.

        - You can access the search keywords from **Google Business Profile**.


        The analytics on search keywords are made available by Google Business
        Profile on a monthly basis.


        You will receive the following metrics:


        - count: The sum of the number of unique users that used the keyword in
        a month

        - threshold: A threshold value indicating that the actual value is less
        than the threshold. Google Business Profile typically displays for
        search keywords that were used less than 15 times in a month.


        You can use the following filters:


        - by businesses (businesses id in list, and restricted to one business
        when using the keyword dimension.)

        - by date (analytics before and/or after a date)


        The response can be aggregated by:

        - business id

        - by date: month or year

        - both business id and date


        The response can be ordered by:


        - business id

        - by date: month, or year


        The response can be ordered in ascending or descending order by any of
        the selected dimensions or metrics.
      operationId: getPresenceAnalyticsKeywords
      tags:
        - Presence analytics
      deprecated: false
      parameters:
        - $ref: '#/components/parameters/parameters_query_metrics'
        - $ref: '#/components/parameters/parameters_query_dimensions'
        - $ref: '#/components/parameters/parameters_query_order_by-2'
        - $ref: '#/components/parameters/parameters_query_business__in'
        - $ref: '#/components/parameters/parameters_query_filter_date__gte'
        - $ref: '#/components/parameters/parameters_query_filter_date__lte'
        - $ref: '#/components/parameters/parameters_query_page'
        - $ref: '#/components/parameters/query_per_page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresenceAnalyticsKeywordsResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /review_analytics/metrics:
    get:
      tags:
        - Review analytics
      summary: Get Review metrics
      operationId: getReviewAnalyticsMetrics
      description: >
        This endpoint lets you view the statistics related to reviews made to
        your businesses subscribed to
         **Review Management**.

         A request is composed of:
         - One or more `metrics` which is the data you want to return
         - An optional `dimensions` which defines how the data is grouped by
           - If it is omitted, the request will return the metrics over all the data, based on your filters
         - An optional `order_by` to define how the data is sorted
         - Filters, the data can be filtered by:
           - Businesses
           - Groups
           - Tags
           - Review update date

         Here is the list of all **metrics** available:
         - `average_rating`: Average rating
         - `rating_distribution`: Breakdown of the ratings (Number of 1-star reviews, 2-star reviews, 3-star reviews, etc...)
         - `reviews_count`: Number of reviews received
         - `reply_time`: Breakdown of the reviews based on how fast (less or more than 48 hours) they have been replied to (or not replied)
         - `reply_means`: Breakdown of the review replies based on the reply method used (manual reply, reply template, auto reply or AI suggestion)
         - `average_rating_distribution`: Breakdown of your businesses based on their average rating
         - `rank`: Allows you to rank the users, businesses or groups based on their performance on a metric (an order_by is required)

         Here is the list of all **dimensions** available, and for each of them, the list of metrics and sort order available:
         - No dimension
           - This allows you to get global stats across all your businesses
           - Available metrics: `average_rating`, `rating_distribution`, `reviews_count`, `reply_time`, `reply_means`, `average_rating_distribution`
         - Date dimensions: `day`, `week`, `month`, `year`
           - This allows you to get the evolution of your metrics over time
           - Available metrics: `average_rating`, `rating_distribution`, `reviews_count`, `reply_time`, `reply_means`
         - Business and business group dimensions: `business`, `group`
           - This allows you to see the metrics business by business or group by group (Requires group filter)
           - Available metrics: `average_rating`, `rating_distribution`, `reviews_count`, `reply_time`, `reply_means`, `rank`
         - `user`
           - This allows you to see the metrics user by user
           - Available metrics: `reply_time`, `reply_means`, `rank`
         - `tag`
           - This allows you to see the metrics tag by tag
           - Available metrics: `average_rating`, `rating_distribution`, `reviews_count`

         Here is the list of all **order_by** available (Add a minus `-` sign before to order by decreasing order):
         - `average_rating`: Sort by average rating
         - `reviews_count`: Sort by review_count
         - `reply_time__total`: Sort by number of reviews received
         - `reply_means__total`: Sort by number of reviews that have been replied
         - `ratio__rating_distribution__5`: Sort by the ratio of 5 star reviews
         - `ratio__rating_distribution__negative`: Sort by the ratio of negative reviews
         - `ratio__reply_time__fast`: Sort by the ratio of reviews replied in less than 2 days
         - `ratio__reply_time__slow`: Sort by the ratio of reviews replied in more than 2 days
         - `ratio__reply_time__not_replied`: Sort by the ratio of reviews not replied
         - `ratio__reply_means__manual`: Sort by the ratio reviews replied manually
         - `ratio__reply_means__ai_suggestion`: Sort by the ratio reviews replied using AI suggestion
         - `ratio__reply_means__reply_template`: Sort by the ratio reviews replied using reply template
         - `ratio__reply_means__auto_reply`: Sort by the ratio reviews replied using auto reply

         To use an **order_by** parameter, its corresponding metric must be included in the request.
         (i.e.
         to order by `average_rating`, you must include the `average_rating` metric in the `metrics` parameter,
         to order by `ratio__rating_distribution__5`, you must include the `rating_distribution` metric in the `metrics` parameter,
         and so on...)
      parameters:
        - $ref: '#/components/parameters/parameters_query_metrics-2'
        - $ref: '#/components/parameters/parameters_query_dimensions-2'
        - $ref: '#/components/parameters/parameters_query_order_by-3'
        - $ref: '#/components/parameters/parameters_query_business__in'
        - $ref: '#/components/parameters/parameters_query_business__notin'
        - $ref: '#/components/parameters/query_groups'
        - $ref: '#/components/parameters/query_tags'
        - $ref: '#/components/parameters/query_update_date__gte'
        - $ref: '#/components/parameters/query_update_date__lte'
        - $ref: '#/components/parameters/parameters_query_page-2'
        - $ref: '#/components/parameters/parameters_query_per_page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ReviewMetricsResponse'
              examples:
                '?metrics=average_rating&dimensions=business':
                  value:
                    page: 1
                    count: 2
                    max_page: 1
                    data:
                      - dimension: 59b2645db12ff60643ef832c
                        dimension_name: Business 1
                        dimension_info:
                          address_full: 190 rue Championnet
                          city: Paris
                          zipcode: '75018'
                          code: PTOCODE1
                        metrics:
                          average_rating: 2.31
                      - dimension: 60b2645fb12ff60643ef8344
                        dimension_name: Business 2
                        dimension_info:
                          address_full: 190 rue Championnet
                          city: Paris
                          zipcode: '75018'
                          code: PTOCODE2
                        metrics:
                          average_rating: 4.31
                '?metrics=average_rating_distribution':
                  value:
                    page: 1
                    count: 1
                    max_page: 1
                    data:
                      - dimension: null
                        metrics:
                          average_rating_distribution:
                            4.3-5: 274
                            3.8-4.3: 124
                            3-3.8: 62
                            0-3: 5
                            'NULL': 4
                '?metrics=average_rating,reviews_count&dimensions=day&filter_date__lte=2024-02-13&filter_date__gte=2024-02-11':
                  value:
                    page: 1
                    count: 3
                    max_page: 1
                    data:
                      - dimension: '2024-02-11'
                        metrics:
                          average_rating: 3.31
                          reviews_count: 123
                      - dimension: '2024-02-12'
                        metrics:
                          average_rating: 3.34
                          reviews_count: 123
                      - dimension: '2024-02-13'
                        metrics:
                          average_rating: 3.77
                          reviews_count: 123
                '?metrics=reply_time,reply_means&dimensions=user':
                  value:
                    page: 1
                    count: 1
                    max_page: 1
                    data:
                      - dimension: 64477ae0264810a01c0a4edf
                        dimension_name: User 1
                        metrics:
                          reply_time:
                            fast: 11
                            slow: 32
                            not_replied: 0
                            total: 43
                          reply_means:
                            ai_suggestion: 20
                            manual: 3
                            auto_reply: 0
                            reply_template: 20
                            total: 43
                '?metrics=rank,rating_distribution&dimensions=group&order_by=-ratio__rating_distribution__5&groups=1244,1245,1246':
                  value:
                    page: 1
                    count: 3
                    max_page: 1
                    data:
                      - dimension: 1244
                        dimension_name: Group 1244
                        metrics:
                          rank: 1
                          rating_distribution:
                            '1': 0
                            '2': 0
                            '3': 0
                            '4': 0
                            '5': 65
                      - dimension: 1245
                        dimension_name: Group 1245
                        metrics:
                          rank: 1
                          rating_distribution:
                            '1': 0
                            '2': 0
                            '3': 11
                            '4': 32
                            '5': 65
                      - dimension: 60b2645fb12ff60643ef8344
                        dimension_name: Group 1246
                        metrics:
                          rank: 3
                          rating_distribution:
                            '1': 19
                            '2': 0
                            '3': 0
                            '4': 0
                            '5': 0
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /reviews/stats:
    get:
      tags:
        - Review analytics
      summary: Global reviews statistics
      operationId: getReviewAnalytics
      deprecated: true
      description: >
        This endpoint let you view the global reviews statistics for all your
        businesses subscribed to

        **Review Management**.


        You can use the following filters:
          - by date (statistics before and/or after a date)
          - by businesses (businesses id in list or not in list)
          - by keywords

        The response is aggregated according to the previously selected filters.


        In order to get analytics evolution overtime returned by specific time
        range, please refer to

        **Qualitative Evolution** and **Quantitative Evolution** endpoints.
      parameters:
        - $ref: '#/components/parameters/query_review_business__in'
        - $ref: '#/components/parameters/query_keywords'
        - $ref: '#/components/parameters/query_review_update_date__gte'
        - $ref: '#/components/parameters/query_review_update_date__lte'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewsStatisticsResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /reviews/qualitative-evolution:
    get:
      tags:
        - Review analytics
      summary: Qualitative evolution
      operationId: getQualitativeEvolution
      deprecated: true
      description: >
        This endpoint lets you view the qualitative evolution of the **reviews
        rating** for all of your businesses

        subscribed to **Review Management**. The API returns the reviews average
        rating by bucket (time range).


        You can use the following filters:
          - by date (analytics before and/or after a date)
          - by businesses (businesses id in list or not in list)
          - by keywords
      parameters:
        - $ref: '#/components/parameters/query_review_bucket'
        - $ref: '#/components/parameters/query_review_cumulative'
        - $ref: '#/components/parameters/query_review_business__in'
        - $ref: '#/components/parameters/query_keywords'
        - $ref: '#/components/parameters/query_review_update_date__gte'
        - $ref: '#/components/parameters/query_review_update_date__lte'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                example:
                  - date: '2019-11-29'
                    average: 4.54
                    added: 50
                    cum_sum: 70
                  - date: '2019-12-05'
                    average: 4.34
                    added: 34
                    cum_sum: 104
                  - date: '2019-12-12'
                    average: 4.41
                    added: 4
                    cum_sum: 108
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: datetype
                      description: Start date of the bucket
                    average:
                      type: number
                      format: float
                      description: Average rating.
                    added:
                      type: integer
                      description: Number of reviews added during the current bucket.
                    cum_sum:
                      type: number
                      format: float
                      description: Cumulative sum of the number of reviews.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /reviews/quantitative-evolution:
    get:
      tags:
        - Review analytics
      summary: Quantitative evolution
      operationId: getQuantitativeEvolution
      deprecated: true
      description: >
        This endpoint lets you view the quantitative evolution of the **number
        of reviews** for all of your businesses

        subscribed to **Review Management**. The API returns the cumulative sum
        of the number of reviews by bucket

        (time range) selected overtime.


        You can use the following filters:
          - by date (analytics before and/or after a date)
          - by businesses (businesses id in list or not in list)
          - by keywords
      parameters:
        - $ref: '#/components/parameters/query_review_bucket'
        - $ref: '#/components/parameters/query_review_business__in'
        - $ref: '#/components/parameters/query_keywords'
        - $ref: '#/components/parameters/query_review_update_date__gte'
        - $ref: '#/components/parameters/query_review_update_date__lte'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                example:
                  - date: '2019-11-29'
                    added: 50
                    previous_sum: 20
                    cum_sum: 70
                  - date: '2019-12-05'
                    added: 34
                    previous_sum: 70
                    cum_sum: 104
                  - date: '2019-12-12'
                    added: 4
                    previous_sum: 104
                    cum_sum: 108
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: datetype
                      description: Start date of the bucket
                    added:
                      type: integer
                      description: Number of reviews added during the current bucket.
                    previous_sum:
                      type: number
                      description: >-
                        Cumulative sum of the number of reviews for the previous
                        bucket.
                      format: float
                    cum_sum:
                      type: number
                      format: float
                      description: Cumulative sum of the number of reviews.
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
components:
  schemas:
    Status:
      type: string
      example: active
      description: Filter api_keys by status. A key is inactive when expired or disabled.
      enum:
        - active
        - inactive
        - disabled
        - expired
    current_page:
      type: integer
      description: Current page number
      example: 1
    max_page:
      type: integer
      description: Last page number
      example: 10
    count:
      type: integer
      description: Number of resources complying with filters
      example: 287
    ListResult:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/current_page'
        max_page:
          $ref: '#/components/schemas/max_page'
        count:
          $ref: '#/components/schemas/count'
    id:
      type: integer
      example: 3245
    label:
      type: string
      example: API key name
      description: Name given to recognize the Api key
    UserId:
      description: User id
      type: string
      example: 5309c3a237bbc544d8e26737
    UserName:
      description: >-
        User first name and last name concatenated. Can be null if it's your org
        integration api key.
      type: string
      example: Perceval de Galles
    Role:
      description: User role in the application
      type: string
      enum:
        - PROVIDER
        - ORG_ADMIN
        - GROUP_MANAGER
        - BUSINESS_MANAGER
        - PUBLISHER
      example: BUSINESS_MANAGER
    expiration_date:
      type: string
      pattern: yyyy-mm-dd
      example: '2022-06-05'
      description: >-
        Must be at least the day after today. If you want it to expire today you
        must revoke it. You can set it to null.
    ip_whitelist:
      description: >
        List of IP or CIDR network notations to which API Key calls are
        restricted.


        Empty list means no restriction.
      type: array
      items:
        type: string
      example:
        - 172.16.0.0/12
        - 127.0.0.1
    ApiKey:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        label:
          $ref: '#/components/schemas/label'
        user_id:
          $ref: '#/components/schemas/UserId'
        user_name:
          $ref: '#/components/schemas/UserName'
        user_role:
          $ref: '#/components/schemas/Role'
        disabled:
          type: boolean
          example: false
          description: Is true if someone revoked the key.
        expiration_date:
          $ref: '#/components/schemas/expiration_date'
        last_used_at:
          type: string
          pattern: date
          example: '2019-08-22 11:46:38.914467+00'
        created_by:
          $ref: '#/components/schemas/UserId'
        created_by_name:
          description: >-
            First name and last name concatenated of the user that created the
            key
          type: string
          example: John Smith
        created_at:
          type: string
          pattern: date
          example: '2018-03-12 11:49:03.399475+00'
        revoked_by:
          $ref: '#/components/schemas/UserId'
        revoked_by_name:
          description: >-
            First name and last name concatenated of the user that revoked the
            key
          type: string
          example: John Smith
        revoked_at:
          type: string
          pattern: date
          example: '2020-10-20 11:46:38.914467+00'
        ip_whitelist:
          $ref: '#/components/schemas/ip_whitelist'
    BusinessId:
      description: Business id
      type: string
      example: 5409c35a97bbc544d8e26737
    BusinessStatusFilter:
      description: >
        <p>Defines the current status of the business. `Open` indicates the
        business is up and running. `Closed` means that the business has
        definitely closed. `Opening Soon` indicates the business is open with an
        opening date set in the future. `Temporarily closed` means that the
        business is temporarily closed.

        <p>â ï¸ To get all businesses with the status <code>open</code>,
        regardless of whether the <code>opening_date</code> has passed yet or
        not, submit both the <code>open</code> and <code>opening_soon</code>
        options in the filter: <code>status=open,opening_soon</code>
      type: string
      enum:
        - open
        - closed
        - opening_soon
        - temporarily_closed
      default: open
      example: open
    FeatureEnum:
      enum:
        - diffusion
        - feedback_management
        - messages
        - posts
        - review_invite
        - review_management
    BusinessCode:
      description: >-
        The unique store code of the business. If not provided, it will be
        automatically generated
      type: string
      example: CS-75019
    BusinessStatus:
      description: >
        <p>Defines the current status of the business. <code>open</code>
        indicates the business is up and running. <code>closed</code> means that
        the business has definitely closed. <code>temporarily_closed</code>
        means that the business is temporarily closed, it is advised when your
        business is closed for more than one week, otherwise use the
        <code>specific_hours</code></p>
      type: string
      enum:
        - open
        - closed
        - temporarily_closed
      default: open
      example: open
    BusinessOpeningDate:
      description: >-
        The opening_date represents the date when a business was opened. The
        format of the date must be in ISO 8601 format (YYYY-MM-DD). â ï¸ The date
        must be in the past or no more than one year in the future from the
        current date (Google API requirement).
      type: string
      format: YYYY-MM-DD
      example: '2025-01-01'
    BusinessOrgId:
      description: >-
        The organization unique identifier at Partoo. During onboarding, Partoo
        creates an organization where all your businesses will be aggregated
      type: integer
      example: 42
    GroupId:
      description: >-
        The id of the group the business belongs to. An organization can have
        multiple groups that contain one or more businesses. A business can
        belong to only one group.
      type: integer
      example: 23
      deprecated: true
    groups:
      description: >
        List of Group ID of the business.


        Groups the business belongs to.


        See <a href="#tag/Groups-and-Sections-NEW">the Groups and Sections
        description</a>
      type: array
      items:
        type: integer
      example:
        - 1
        - 2
        - 3
    BusinessName:
      description: >-
        The name of the business (POI) as it will appear on the publishing
        platforms
      type: string
      minLength: 1
      example: Corner shop
    AddressFull:
      description: |
        Full address of the business.

        For example : `130 Rue du Mont-Cenis`.
      type:
        - string
        - 'null'
      example: 12 bis rue du coquelicot
    Address2:
      description: >-
        Complement of address. Any additional information that could help better
        find the business location
      type:
        - string
        - 'null'
    BusinessCity:
      description: The city where the business is located
      type:
        - string
        - 'null'
      example: Paris
    BusinessZipcode:
      description: >-
        Zipcode (or postal code) for the business address. Can be empty if the
        business' country does not require one.
      type:
        - string
        - 'null'
      example: '75019'
    BusinessRegion:
      description: >-
        The region where the business is located. Can be empty, it is only
        useful for some countries like Italy or Spain among others.
      type:
        - string
        - 'null'
      example: Ile-de-France
    BusinessCountry:
      description: >-
        Business country - In the ISO 3166 alpha2 code format (i.e. use âFRâ for
        France instead of "fr")
      type: string
      example: FR
    BusinessDefaultLang:
      description: >-
        Business default language - it either corresponds to the country's
        default language or set as English by default
      type: string
      example: fr
    BusinessCategories:
      minItems: 1
      description: >
        A list of category ids mapped to the business. At least one category
        needs to be provided. For more information see [Categories
        section](https://developers.partoo.co/rest_api/v2/#tag/Categories)
      type: array
      items:
        type: string
      example:
        - gcid:restaurant
        - gcid:fast_food_restaurant
        - gcid:hamburger_restaurant
    TimeWindow:
      description: Time window
      type: string
      pattern: ^([0-1][0-9]|2[0-3]):([0-5][0-9])-([0-1][0-9]|2[0-3]):([0-5][0-9])$
      example: 10:00-14:00
    TimeSlotReference:
      description: >-
        Default time period, can be used to set open hours of a day from
        Partoo's interface.
      type: array
      items:
        $ref: '#/components/schemas/TimeWindow'
    Day:
      description: >-
        Open in the morning and in the evening `[10:00-14:00, 18:00-00:00]`.
        Closed the whole day `[]`
      type: array
      items:
        $ref: '#/components/schemas/TimeWindow'
      example:
        - 10:00-14:00
    OpenHours:
      description: >
        <p>The opening hours of the business (in its timezone).

        <p>Opening hours are specified per weekday. This is done by supplying an
        object mapping weekdays ("monday", "tuesday", etc.) to a list of of
        strings. These strings in turn represent time slots during which the
        business is open.

        <p>For example, the following value would set the opening hours to
        between 08:00-15:00 in the afternoon and 18:00-23:00 in the evening on
        Mondays:

        <p><code>{"monday": ["08:00-15:00", "18:00-23:00"]}</code>

        <p>To indicate that a business is open 24 hours for a specific weekday,
        use the value <code>["00:00-23:59"]</code>.

        <p>â This field is not mandatory, but if not provided then the business
        will not be pushed on some platforms (example: Google). If provided,
        then a schedule needs to be sent for each day in particular
      type: object
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        monday:
          $ref: '#/components/schemas/Day'
        tuesday:
          $ref: '#/components/schemas/Day'
        wednesday:
          $ref: '#/components/schemas/Day'
        thursday:
          $ref: '#/components/schemas/Day'
        friday:
          $ref: '#/components/schemas/Day'
        saturday:
          $ref: '#/components/schemas/Day'
        sunday:
          $ref: '#/components/schemas/Day'
    SpecificHours:
      description: >
        <p>Exceptional opening or closing times for the business (in its
        timezone).</p>

        <p>All exceptional days of the year, including temporarily closed, can
        be specified beforehand or on the go. For example:</p>

        <ul>
         <li>Beforehand: bank holidays (like Christmas or Labor Day)</li>
         <li>Unpredicted: COVID-19 exceptional situation</li>
        </ul>

        <p>Specific hours are defined by two values:</p>

        <ul>
          <li><code>open</code>, containing a list of days with exceptional <i>opening</i> hours</li>
          <li><code>close</code>, containing a list of days where the business is exceptionally closed all day.
        </ul>

        <p>These values in turn, contain:</p>

        <ul>
         <li><code>starts_at</code> indicating the first date for which the exceptional hours are valid</li>
         <li><code>ends_at</code> indicating the last date (inclusive) for which the exceptional hours are valid</li>
         <li><code>open_hours</code> (only used for days with exceptional <i>opening</i> hours) indicating the actual time slots for the given period, following the same pattern as the time slots in <code>open_hours</code></li>
        </ul>
      type: object
      required:
        - open
        - close
      properties:
        open:
          type: array
          items:
            type: object
            properties:
              starts_at:
                type: string
                pattern: date
                example: '2020-01-20'
              ends_at:
                type: string
                pattern: date
                example: '2020-01-20'
              open_hours:
                type: array
                items:
                  $ref: '#/components/schemas/TimeWindow'
        close:
          type: array
          items:
            type: object
            properties:
              starts_at:
                type: string
                pattern: date
                example: '2020-01-20'
              ends_at:
                type: string
                pattern: date
                example: '2020-01-22'
    BusinessShortDescription:
      description: >
        <p>A short description of the business. It needs to be in the language
        of the country where the business is located. For example, if the
        business is located in Madrid, then the description needs to be in
        Spanish.

        <p>â ï¸It is limited to 80 characters
      type: string
      example: lorem ipsum
    BusinessLongDescription:
      description: >
        <p>A more detailed description of the business. It needs to be in the
        language of the country where the business is located. For example, if
        the business is located in London, then the description needs to be in
        English.

        <p>â ï¸It is limited to 750 characters
      type: string
      example: lorem ipsum dolor sit amet
    BusinessWebsite:
      description: The business own website url or the main url of the company.
      type: string
      format: uri
      example: https://www.corner-shop.co/
    BusinessFacebookPage:
      description: Business Facebook page url
      type: string
      format: uri
      example: https://www.facebook.com/the-corner-shop
    BusinessTwitter:
      description: Business twitter page url
      type: string
      format: uri
      example: https://www.twitter.com/the-corner-shop
    BusinessNationalIdentificationNumber:
      description: >
        <p>The National Identification Number of the business

        <p> It describes a unique number for which the business is registered in
        a specific country. For example, in France, it's SIRET code or for
        Ireland it's the CRO
      type: string
    Contact:
      description: Business contact
      type: object
      properties:
        name:
          description: Contact full name
          type: string
          example: Hubert Bonisseur de la Bath
        email:
          description: Contact email
          type: string
          format: email
          example: hubert@oss117.fr
        phone_numbers:
          description: >-
            Contact phone numbers - Preferably in the format E.164
            ('+33302060628' instead of '0302060628')
          type: array
          items:
            type: string
          example:
            - '+33302060628'
        fax:
          description: Contact fax
          type: string
          example: '+33302060629'
    BusinessContacts:
      description: >-
        Specify how the clients can reach the persons in charge of the business
        in case they have questions.</br>
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    Photos:
      description: |
        <p>Business photos
        <p>Each business can have one or more photos associated
      type: object
      properties:
        LOGO:
          description: >-
            The logo image of the brand. On Google, for example, for businesses
            that have their basic information (phone number, hours, etc.), the
            Business Profile will highlight the logo.
          type: string
          format: uri
        primary:
          description: >-
            The business's main photo URL. On Google, for example, it represents
            the cover photo on the top of the profile.
          type: string
          format: uri
        secondary:
          description: Additional photos that can highlight the features of the business.
          type: array
          items:
            type: string
            format: uri
    Latitude:
      description: >-
        Latitude pushed on publishers. Decimals are separated by a dot and not
        by a comma.
      type:
        - number
        - 'null'
      format: double
      example: -3.585993
    Longitude:
      description: >-
        Longitude pushed on publishers. Decimals are separated by a dot and not
        by a comma.
      type:
        - number
        - 'null'
      format: double
      example: 47.870341
    SubscriptionActive:
      type: object
      required:
        - active
      properties:
        active:
          type: boolean
          description: Product has been activated
    Subscriptions:
      deprecated: true
      description: Business product subscriptions. Deprecated, use `features` instead.
      type: object
      required:
        - presence_management
        - review_booster
        - review_management
        - messages
      properties:
        presence_management:
          $ref: '#/components/schemas/SubscriptionActive'
          description: Is business subscribed to Presence Management
        review_management:
          $ref: '#/components/schemas/SubscriptionActive'
          description: Is business subscribed to Review Management
        review_booster:
          $ref: '#/components/schemas/SubscriptionActive'
          description: Is business subscribed to Review Booster
        messages:
          $ref: '#/components/schemas/SubscriptionActive'
          description: Is business subscribed to Business Message
      example:
        presence_management:
          active: true
        review_management:
          active: true
        review_booster:
          active: false
        messages:
          active: false
    Feature:
      allOf:
        - $ref: '#/components/schemas/FeatureEnum'
      type: string
      description: Business feature name
    Features:
      description: |
        List of business' features.
      type: array
      items:
        $ref: '#/components/schemas/Feature'
      example:
        - business_edition
        - diffusion
        - review_management
        - review_invite
        - messages
    CustomFields.Field.Base:
      description: A Custom Field
      type: object
      properties:
        name:
          description: Name of the custom field
          type: string
        type:
          description: >-
            Possible values are "BOOLEAN", "INTEGER", "TEXT", "FLOAT",
            "SINGLE_SELECT", "MULTIPLE_SELECT", "MULTIPLE_SELECT_IMAGE",
            "IMAGES_UPLOADER".
          type: string
        id:
          description: Id of the custom field
          type: integer
        order:
          type: integer
    CustomFields.Field.Text:
      allOf:
        - $ref: '#/components/schemas/CustomFields.Field.Base'
        - properties:
            value:
              description: |
                Value for this Custom Field. Can be NULL if not set.
              type:
                - string
                - 'null'
    CustomFields.Field.Integer:
      allOf:
        - $ref: '#/components/schemas/CustomFields.Field.Base'
        - properties:
            value:
              description: |
                Value for this Custom Field. Can be NULL if not set.
              type:
                - integer
                - 'null'
    CustomFields.Field.Number:
      allOf:
        - $ref: '#/components/schemas/CustomFields.Field.Base'
        - properties:
            value:
              description: |
                Value for this Custom Field. Can be NULL if not set.
              type:
                - number
                - 'null'
    CustomFields.Field.Boolean:
      allOf:
        - $ref: '#/components/schemas/CustomFields.Field.Base'
        - properties:
            value:
              description: |
                Value for this Custom Field. Can be NULL if not set.
              type:
                - boolean
                - 'null'
    CustomFields.Field.SingleSelect:
      allOf:
        - $ref: '#/components/schemas/CustomFields.Field.Base'
        - properties:
            value:
              description: |
                Value for this Custom Field. Can be NULL if not set.
              type:
                - string
                - 'null'
    CustomFields.Field.MultiSelect:
      allOf:
        - $ref: '#/components/schemas/CustomFields.Field.Base'
        - properties:
            value:
              description: |
                Value for this Custom Field. Can be NULL if not set.
              type: array
              items:
                type: string
    CustomFields.Field.MultiSelectImage:
      allOf:
        - $ref: '#/components/schemas/CustomFields.Field.Base'
        - properties:
            value:
              description: |
                Value for this Custom Field. Can be NULL if not set.
              type: array
              items:
                type: string
    CustomFieldValuesImagesUploader:
      description: Images uploader custom field value
      type: object
      properties:
        text_field:
          type: string
        max_length:
          type: number
      example:
        - text_field: name 1
          max_length: 20
        - text_field: name 2
          max_length: 30
    CustomFields.Field.ImagesUploader:
      allOf:
        - $ref: '#/components/schemas/CustomFields.Field.Base'
        - properties:
            value:
              description: |
                Value for this Custom Field. Can be NULL if not set.
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldValuesImagesUploader'
    CustomFields.Array:
      description: >
        <p>Custom Fields set for this Business

        <p>They represent configurable fields that can be defined in addition to
        the normal business fields proposed by Partoo.

        They are unique to the organization and can be entirely adapted to the
        company's needs.
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/CustomFields.Field.Integer'
          - $ref: '#/components/schemas/CustomFields.Field.Number'
          - $ref: '#/components/schemas/CustomFields.Field.Text'
          - $ref: '#/components/schemas/CustomFields.Field.Boolean'
          - $ref: '#/components/schemas/CustomFields.Field.MultiSelect'
          - $ref: '#/components/schemas/CustomFields.Field.MultiSelectImage'
          - $ref: '#/components/schemas/CustomFields.Field.SingleSelect'
          - $ref: '#/components/schemas/CustomFields.Field.ImagesUploader'
        discriminator:
          propertyName: type
          mapping:
            TEXT: '#/components/schemas/CustomFields.Field.Text'
            INTEGER: '#/components/schemas/CustomFields.Field.Integer'
            FLOAT: '#/components/schemas/CustomFields.Field.Number'
            BOOLEAN: '#/components/schemas/CustomFields.Field.Boolean'
            SINGLE_SELECT: '#/components/schemas/CustomFields.Field.SingleSelect'
            MULTIPLE_SELECT: '#/components/schemas/CustomFields.Field.MultiSelect'
            MULTIPLE_SELECT_IMAGE: '#/components/schemas/CustomFields.Field.MultiSelectImage'
            IMAGES_UPLOADER: '#/components/schemas/CustomFields.Field.ImagesUploader'
      example:
        - id: 1
          type: BOOLEAN
          name: Parking
          value: true
          order: 1
        - id: 2
          type: TEXT
          name: ManagerName
          value: toto
          order: 2
        - id: 3
          type: TEXT
          name: Supervisor
          value: null
          order: 2
        - id: 4
          type: INTEGER
          name: Surface
          value: 2
          order: 3
        - id: 5
          type: FLOAT
          name: DistanceFromSubway
          value: 2.55
          order: 4
        - id: 6
          type: SINGLE_SELECT
          name: Level
          value: two
          order: 4
        - id: 7
          type: MULTIPLE_SELECT
          name: Services
          value:
            - one
            - two
          order: 5
        - id: 8
          type: MULTIPLE_SELECT_IMAGE
          name: BannerImage
          value:
            - image 1
            - image 2
          order: 6
        - id: 9
          type: IMAGES_UPLOADER
          name: TeamMembers
          value:
            - url: image1
              texts:
                name1: value 1
                name2: value 2
          order: 7
    BusinessCompletionRate:
      description: >
        <p>The completion rate percentage of the business

        <p>The completion rate is calculated based on how many fields are filled
        for the business. If some necessary fields are not filled, it will lower
        the completion rate.

        <p> â ï¸ After the update of the business, it may take up to 24h for this
        field to be updated
      type: integer
      example: 77
    Promo:
      deprecated: true
      description: Business promotions
      type: object
      required:
        - title
        - description
        - begin
        - end
      properties:
        title:
          type: string
          description: Promo title
        description:
          type: string
          description: Promo description
        term_of_use:
          type: string
          description: Promo term of use
        additional_informations:
          type: string
          description: Promo additional informations
        begin:
          type: number
          description: Promo start timestamp
        end:
          type: number
          description: Promo end timestamp
        images:
          type: array
          description: Promo images to be displayed
          items:
            type: string
            format: uri
        client_offer_url:
          description: Promo URL
          type: string
          format: uri
        promo_url:
          description: URL of the website
          type: string
          format: uri
    BusinessPromos:
      deprecated: true
      type: array
      items:
        $ref: '#/components/schemas/Promo'
    BusinessWithCustomFields:
      description: Partoo App Business
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BusinessId'
        created:
          description: Timestamp (in seconds) of the business creation
          type: number
          format: float
          example: 1409925979.5
        modified:
          description: >-
            Timestamp (in seconds) of the business last modification. Doesnât
            take into account changes to the Custom Fields or related objects.
          type: number
          format: float
          example: 1561335111.681374
        code:
          $ref: '#/components/schemas/BusinessCode'
        status:
          $ref: '#/components/schemas/BusinessStatus'
        opening_date:
          $ref: '#/components/schemas/BusinessOpeningDate'
        org_id:
          $ref: '#/components/schemas/BusinessOrgId'
        group_id:
          $ref: '#/components/schemas/GroupId'
        groups:
          $ref: '#/components/schemas/groups'
        name:
          $ref: '#/components/schemas/BusinessName'
        address:
          description: >-
            Business address. This fields returns the same value as the field
            `address_full` for historical reasons. You should prefer the use
            `address_full`.
          type:
            - string
            - 'null'
        address_full:
          $ref: '#/components/schemas/AddressFull'
        address2:
          $ref: '#/components/schemas/Address2'
        city:
          $ref: '#/components/schemas/BusinessCity'
        zipcode:
          $ref: '#/components/schemas/BusinessZipcode'
        region:
          $ref: '#/components/schemas/BusinessRegion'
        country:
          $ref: '#/components/schemas/BusinessCountry'
        default_lang:
          $ref: '#/components/schemas/BusinessDefaultLang'
        categories:
          $ref: '#/components/schemas/BusinessCategories'
        time_slot_reference:
          $ref: '#/components/schemas/TimeSlotReference'
        open_hours:
          $ref: '#/components/schemas/OpenHours'
        specific_hours:
          $ref: '#/components/schemas/SpecificHours'
        description_short:
          $ref: '#/components/schemas/BusinessShortDescription'
        description_long:
          $ref: '#/components/schemas/BusinessLongDescription'
        website_url:
          $ref: '#/components/schemas/BusinessWebsite'
        facebook_url:
          $ref: '#/components/schemas/BusinessFacebookPage'
        twitter_url:
          $ref: '#/components/schemas/BusinessTwitter'
        google_location_id:
          description: Id of Google Location to which the business is linked
          type: string
        facebook_page_id:
          description: Id of Facebook Location to which the business is linked
          type: string
        national_identification_number:
          $ref: '#/components/schemas/BusinessNationalIdentificationNumber'
        logo_url:
          description: Business LOGO URL
          type: string
          format: uri
        contacts:
          $ref: '#/components/schemas/BusinessContacts'
        photos:
          $ref: '#/components/schemas/Photos'
        lat:
          $ref: '#/components/schemas/Latitude'
        long:
          $ref: '#/components/schemas/Longitude'
        subscriptions:
          $ref: '#/components/schemas/Subscriptions'
        features:
          $ref: '#/components/schemas/Features'
        custom_fields:
          $ref: '#/components/schemas/CustomFields.Array'
        completion_rate:
          $ref: '#/components/schemas/BusinessCompletionRate'
        promos:
          $ref: '#/components/schemas/BusinessPromos'
    BusinessReach:
      description: >-
        Defines whether the business is a physical entity with an address
        (LOCAL) or a Brand (GLOBAL).
      type: string
      enum:
        - LOCAL
        - GLOBAL
      default: LOCAL
      example: LOCAL
    RequiredBusinessCity:
      description: |
        The city where the business is located.

        `Required if 'reach' is not specified or set to 'LOCAL'`.
      type: string
      example: Paris
    BusinessLatitude:
      description: Latitude. Decimals are separated by a dot and not by a comma.
      type: number
      format: double
      example: -3.585993
    BusinessLongitude:
      description: Longitude. Decimals are separated by a dot and not by a comma.
      type: number
      format: double
      example: 47.870341
    BusinessContactsCreate:
      description: >-
        Specify how the clients can reach the persons in charge of the business
        in case they have questions.</br>
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    CustomFields.Update:
      description: >
        <p>Custom Fields set for this Business

        <p>They represent configurable fields that can be defined in addition to
        the normal business fields proposed by Partoo.

        They are unique to the organization and should suit your company needs.
      type: object
      additionalProperties:
        description: >
          Replace \<custom_fields_name\> with the name of the custom field to
          update. The value must comply with the custom field type. <p> Set to
          NULL to empty the field.
      example:
        Parking: true
        ManagerName: toto
        Surface: 35
        DistanceFromSubway: 1.5
        Level: one
        Services:
          - DisabledAccess
          - FreeParking
        BannerImage:
          - image 1
          - image 2
        TeamMembers:
          - url: image1
            texts:
              name1: value 1
              name2: value 2
    RequestStatus:
      description: Request status
      type: string
      enum:
        - success
    SubscriptionDetails:
      type: object
      description: The details on the product subscription
      properties:
        status:
          type: string
          enum:
            - inactive
            - active
        canceling_date:
          type: number
          description: timestamp
    Product:
      type: string
      enum:
        - presence_management
        - review_booster
        - review_management
        - messages
      example: presence_management
    ProductSubscribeResponseObject:
      type: object
      properties:
        subscription_date:
          type: integer
          description: Date on which the subscription was activated
          example: 1540628702
        status:
          type: string
          enum:
            - active
    ProductUnsubscribeResponseObject:
      type: object
      properties:
        canceling_date:
          type: integer
          description: Date on which the subscription was canceled
          example: 1540628702
        status:
          type: string
          enum:
            - inactive
    Attributes.Field.Base:
      description: A Google Attribute
      type: object
      properties:
        gmb_id:
          description: Google id of the attribute
          type: string
        type:
          description: >-
            Possible values are "BOOL", "ENUM", "REPEATABLE_ENUM", "URL",
            "REPEATABLE_URL".
          type: string
    Attributes.Field.BOOL:
      allOf:
        - $ref: '#/components/schemas/Attributes.Field.Base'
        - properties:
            value:
              description: |
                Value for this Attribute. Can be null if not set
              type:
                - boolean
                - 'null'
    Attributes.Field.ENUM:
      allOf:
        - $ref: '#/components/schemas/Attributes.Field.Base'
        - properties:
            value:
              description: |
                Value for this Attribute. Can be null if not set
              type:
                - string
                - 'null'
    Attributes.Field.REPEATABLE_ENUM:
      allOf:
        - $ref: '#/components/schemas/Attributes.Field.Base'
        - properties:
            value:
              type:
                - object
                - 'null'
              description: |
                Value for this Attribute. Can be null if not set
              properties:
                set_values:
                  type: array
                  description: |
                    Options which are true for the Attribute. Can be empty.
                  items:
                    type: string
                unset_values:
                  type: array
                  description: |
                    Options which are false for the Attributes. Can be empty
                  items:
                    type: string
    Attributes.Field.URL:
      allOf:
        - $ref: '#/components/schemas/Attributes.Field.Base'
        - properties:
            value:
              description: |
                Value for this Attribute. Can be null if not set
              type:
                - string
                - 'null'
    Attributes.Field.REPEATABLE_URL:
      allOf:
        - $ref: '#/components/schemas/Attributes.Field.Base'
        - properties:
            value:
              description: |
                Value for this Attribute. Can be null if not set
              type:
                - array
                - 'null'
              items:
                type: string
              deprecated: true
    Attributes.Array:
      description: List of Business Attributes
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/Attributes.Field.BOOL'
          - $ref: '#/components/schemas/Attributes.Field.ENUM'
          - $ref: '#/components/schemas/Attributes.Field.REPEATABLE_ENUM'
          - $ref: '#/components/schemas/Attributes.Field.URL'
          - $ref: '#/components/schemas/Attributes.Field.REPEATABLE_URL'
        discriminator:
          propertyName: type
          mapping:
            BOOL: '#/components/schemas/Attributes.Field.BOOL'
            ENUM: '#/components/schemas/Attributes.Field.ENUM'
            REPEATABLE_ENUM: '#/components/schemas/Attributes.Field.REPEATABLE_ENUM'
            URL: '#/components/schemas/Attributes.Field.URL'
            REPEATABLE_URL: '#/components/schemas/Attributes.Field.REPEATABLE_URL'
      example:
        - type: BOOL
          gmb_id: has_curbside_pickup
          value: false
        - type: BOOL
          gmb_id: has_delivery
          value: true
        - type: ENUM
          gmb_id: wi_fi
          value: free_wi_fi
        - type: REPEATABLE_ENUM
          gmb_id: pay_credit_card_types_accepted
          value:
            set_values:
              - american_express
              - discover
            unset_values: []
        - type: URL
          gmb_id: url_menu
          value: https://www.test.fr
        - type: REPEATABLE_URL
          gmb_id: url_order_ahead
          value: null
        - type: REPEATABLE_URL
          gmb_id: url_reservations
          value:
            - https://www.test1.fr
            - https://www.test2.fr
    BusinessAttributesResponse:
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/Attributes.Array'
    PostAttributes.Array:
      description: List of Business Attributes
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/Attributes.Field.BOOL'
          - $ref: '#/components/schemas/Attributes.Field.ENUM'
          - $ref: '#/components/schemas/Attributes.Field.REPEATABLE_ENUM'
          - $ref: '#/components/schemas/Attributes.Field.URL'
          - $ref: '#/components/schemas/Attributes.Field.REPEATABLE_URL'
        discriminator:
          propertyName: type
          mapping:
            BOOL: '#/components/schemas/Attributes.Field.BOOL'
            ENUM: '#/components/schemas/Attributes.Field.ENUM'
            REPEATABLE_ENUM: '#/components/schemas/Attributes.Field.REPEATABLE_ENUM'
            URL: '#/components/schemas/Attributes.Field.URL'
            REPEATABLE_URL: '#/components/schemas/Attributes.Field.REPEATABLE_URL'
      example:
        - type: BOOL
          gmb_id: has_curbside_pickup
          value: false
        - type: ENUM
          gmb_id: wi_fi
          value: free_wi_fi
        - type: REPEATABLE_ENUM
          gmb_id: pay_credit_card_types_accepted
          value:
            set_values:
              - american_express
              - discover
            unset_values: []
        - type: REPEATABLE_URL
          gmb_id: url_reservations
          value:
            - https://www.test1.fr
            - https://www.test2.fr
    BusinessPostAttributesBody:
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/PostAttributes.Array'
    BusinessPostWrongAttributesValuesError:
      description: At least one of the attributes values in the request body is incorrect
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
      example:
        errors:
          json:
            wi_fi: must be a string
            has_curbside_pickup: must be a bool
            url_reservations: must be a list
            url_menu: must be a valid url
            pay_credit_card_types_accepted: must contain set_values and unset_values
    BusinessPostUnknownAttributesError:
      description: >-
        At least one of the attributes in the request body does not exist in our
        Database
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
      example:
        errors:
          json:
            unknown_attribute: does not exist in DB
    MoreHoursGet:
      description: >
        <p>The More Hours of the business and category (in its timezone).

        <p>More hours are specified per weekday. Every value in this array is an
        object mapping weekdays (<code>monday</code>, <code>tuesday</code>,
        etc.) to a list of of strings. These strings in turn represent time
        slots during which the business is open.

        <p>For example, the following value sets the hours to 08:00-15:00 in the
        afternoon and 18:00-23:00 in the evening on Mondays:

        <p><code>{"monday": ["08:00-15:00", "18:00-23:00"]}</code>

        <p>If a business is open 24 hours for a specific weekday, the value
        <code>["00:00-23:59"]</code> is used.

        <p>If a business does not have any defined More Hours,
        <code>value</code> will be <code>null</code>.
      type: object
      properties:
        monday:
          $ref: '#/components/schemas/Day'
        tuesday:
          $ref: '#/components/schemas/Day'
        wednesday:
          $ref: '#/components/schemas/Day'
        thursday:
          $ref: '#/components/schemas/Day'
        friday:
          $ref: '#/components/schemas/Day'
        saturday:
          $ref: '#/components/schemas/Day'
        sunday:
          $ref: '#/components/schemas/Day'
    MoreHoursBusinessGetResponse:
      properties:
        more_hours:
          type: array
          items:
            type: object
            properties:
              gmb_id:
                description: More Hour ID.
                type: string
                example: BREAKFAST
              value:
                $ref: '#/components/schemas/MoreHoursGet'
          example:
            - gmb_id: KITCHEN
              value:
                monday:
                  - 08:00-15:00
                  - 18:00-23:00
                tuesday:
                  - 08:00-15:00
                  - 18:00-23:00
                wednesday:
                  - 08:00-15:00
                  - 18:00-23:00
                thursday:
                  - 08:00-15:00
                  - 18:00-23:00
                friday:
                  - 08:00-15:00
                  - 18:00-23:00
                saturday:
                  - 08:00-15:00
                  - 18:00-23:00
                sunday:
                  - 08:00-15:00
                  - 18:00-23:00
            - gmb_id: LUNCH
              value:
                monday:
                  - 11:00-15:00
                tuesday:
                  - 11:00-15:00
                wednesday:
                  - 11:00-15:00
                thursday:
                  - 11:00-15:00
                friday:
                  - 11:00-15:00
                saturday: []
                sunday: []
    MoreHoursListInvalidCategoryError:
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: string
              example: Category with id foo does not exist
    MoreHoursListInvalidCountryError:
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: object
              properties:
                country:
                  type: object
                  properties:
                    explanation:
                      description: country paramter is invalid
                      type: string
                      example: abc is an incorrect value
                    choices:
                      description: available country codes
                      type: array
                      items:
                        type: string
                      example:
                        - AF
                        - AL
                        - DZ
                        - AS
                        - AD
                        - AO
                        - AI
                        - AQ
                        - AG
                        - AR
                        - AM
                        - AW
                        - AU
                        - AT
                        - AZ
                        - BS
                        - BH
                        - BD
                        - BB
                        - BY
                        - BE
                        - BZ
                        - BJ
                        - BM
                        - BT
                        - BO
                        - BQ
                        - BA
                        - BW
                        - BV
                        - BR
                        - IO
                        - BN
                        - BG
                        - BF
                        - BI
                        - CV
                        - KH
                        - CM
                        - CA
                        - KY
                        - CF
                        - TD
                        - CL
                        - CN
                        - CX
                        - CC
                        - CO
                        - KM
                        - CD
                        - CG
                        - CK
                        - CR
                        - HR
                        - CU
                        - CW
                        - CY
                        - CZ
                        - CI
                        - DK
                        - DJ
                        - DM
                        - DO
                        - EC
                        - EG
                        - SV
                        - GQ
                        - ER
                        - EE
                        - SZ
                        - ET
                        - FK
                        - FO
                        - FJ
                        - FI
                        - FR
                        - GF
                        - PF
                        - TF
                        - GA
                        - GM
                        - GE
                        - DE
                        - GH
                        - GI
                        - GR
                        - GL
                        - GD
                        - GP
                        - GU
                        - GT
                        - GG
                        - GN
                        - GW
                        - GY
                        - HT
                        - HM
                        - VA
                        - HN
                        - HK
                        - HU
                        - IS
                        - IN
                        - ID
                        - IR
                        - IQ
                        - IE
                        - IM
                        - IL
                        - IT
                        - JM
                        - JP
                        - JE
                        - JO
                        - KZ
                        - KE
                        - KI
                        - KP
                        - KR
                        - KW
                        - KG
                        - LA
                        - LV
                        - LB
                        - LS
                        - LR
                        - LY
                        - LI
                        - LT
                        - LU
                        - MO
                        - MG
                        - MW
                        - MY
                        - MV
                        - ML
                        - MT
                        - MH
                        - MQ
                        - MR
                        - MU
                        - YT
                        - MX
                        - FM
                        - MD
                        - MC
                        - MN
                        - ME
                        - MS
                        - MA
                        - MZ
                        - MM
                        - NA
                        - NR
                        - NP
                        - NL
                        - NC
                        - NZ
                        - NI
                        - NE
                        - NG
                        - NU
                        - NF
                        - MP
                        - 'NO'
                        - OM
                        - PK
                        - PW
                        - PS
                        - PA
                        - PG
                        - PY
                        - PE
                        - PH
                        - PN
                        - PL
                        - PT
                        - PR
                        - QA
                        - MK
                        - RO
                        - RU
                        - RW
                        - RE
                        - BL
                        - SH
                        - KN
                        - LC
                        - MF
                        - PM
                        - VC
                        - WS
                        - SM
                        - ST
                        - SA
                        - SN
                        - RS
                        - SC
                        - SL
                        - SG
                        - SX
                        - SK
                        - SI
                        - SB
                        - SO
                        - ZA
                        - GS
                        - SS
                        - ES
                        - LK
                        - SD
                        - SR
                        - SJ
                        - SE
                        - CH
                        - SY
                        - TW
                        - TJ
                        - TZ
                        - TH
                        - TL
                        - TG
                        - TK
                        - TO
                        - TT
                        - TN
                        - TR
                        - TM
                        - TC
                        - TV
                        - UG
                        - UA
                        - AE
                        - GB
                        - UM
                        - US
                        - UY
                        - UZ
                        - VU
                        - VE
                        - VN
                        - VG
                        - VI
                        - WF
                        - EH
                        - YE
                        - ZM
                        - ZW
                        - AX
                        - XK
    MoreHoursPost:
      description: >
        <p>The More Hours of the business and category (in its timezone).

        <p>More hours are specified per weekday. This is done by supplying a
        More Hour ID (<code>BREAKFAST</code>, <code>DINNER</code>, etc.), and an
        object mapping weekdays (<code>monday</code>, <code>tuesday</code>,
        etc.) to a list of of strings. These strings in turn represent time
        slots during which the business is open.

        <p>For example, the following value would set the kitchen hours to
        between 08:00-15:00 in the afternoon and 18:00-23:00 in the evening on
        Mondays:

        <p><code>{"gmb_id": "KITCHEN", "value": {"monday": ["08:00-15:00",
        "18:00-23:00"]}}</code>

        <p>To indicate that a business is open 24 hours for a specific weekday,
        use the value <code>["00:00-23:59"]</code>.

        <p>To delete a More Hours value, supply a <code>null</code> value.
      type: object
      properties:
        monday:
          $ref: '#/components/schemas/Day'
        tuesday:
          $ref: '#/components/schemas/Day'
        wednesday:
          $ref: '#/components/schemas/Day'
        thursday:
          $ref: '#/components/schemas/Day'
        friday:
          $ref: '#/components/schemas/Day'
        saturday:
          $ref: '#/components/schemas/Day'
        sunday:
          $ref: '#/components/schemas/Day'
    MoreHoursBusinessPostBody:
      properties:
        more_hours:
          description: >-
            Array containing the more hours values to update. Grouped by More
            Hour ID. Only More Hour IDs included in the body will be updated.
          type: array
          items:
            type: object
            properties:
              gmb_id:
                description: More Hour ID for which to update hours.
                type: string
              value:
                $ref: '#/components/schemas/MoreHoursPost'
          example:
            - gmb_id: KITCHEN
              value:
                monday: []
                tuesday: []
                wednesday: []
                thursday: []
                friday: []
                saturday:
                  - 08:00-15:00
                  - 18:00-23:00
                sunday:
                  - 08:00-15:00
                  - 18:00-23:00
            - gmb_id: BRUNCH
              value: null
    MoreHoursBusinessPostResponse:
      properties:
        status:
          description: >-
            Status of the request. Should say "success" unless something
            unexpected went wrong.
          type: string
          example: success
        id:
          description: ID of the business that was just updated.
          type: string
          example: 545f7bf982efa41a496379d2
    MoreHoursBusinessPostInvalidCategory:
      properties:
        errors:
          description: Object containing all errors encountered.
          type: object
          properties:
            json:
              description: Object containing any errors related to the request JSON body.
              type: object
              properties:
                more_hours:
                  description: >-
                    Array containing any errors related to the `more_hours`
                    property in the request JSON body.
                  type: array
                  items:
                    type: string
                  example:
                    - '''foo'' is not a valid gmb_id'
    MoreHoursBusinessPostOverlappingHours:
      properties:
        errors:
          description: Object containing all errors encountered.
          type: object
          properties:
            json:
              description: Object containing any errors related to the request JSON body.
              type: object
              properties:
                more_hours:
                  description: >-
                    Object containing any errors related to the `more_hours`
                    property in the request JSON body.
                  type: object
                  properties:
                    '0':
                      description: >-
                        Each index contains the errors found at that index in
                        the array of More Hours given in the request JSON body.
                      type: object
                      properties:
                        value:
                          description: >-
                            Object that indicates value errors for each given
                            weekday.
                          type: object
                          properties:
                            saturday:
                              description: >-
                                Each weekday key indicates an error in the More
                                Hours value given for that specific weekday.
                              type: object
                              properties:
                                '0':
                                  description: >-
                                    Each index contains a string describing the
                                    errors found at that index in the array of
                                    More Hours time slots.
                                  type: string
                                  example: start time cannot be superior to end time
    ServiceId:
      description: >-
        Id of the service (For creation you can get this id by calling <a
        href="#operation/getServicesSuggestions">get services suggestions
        endpoint</a>)
      type: integer
      example: 1
    ServiceType:
      description: Type of the service
      type: string
      enum:
        - STRUCTURED_SERVICE_ITEM
        - FREE_FORM_SERVICE_ITEM
    ServiceName:
      description: |
        Name of the service.
      type: string
      example: Salle d'escalade
    ServicePrice:
      description: Price of the service.
      type: number
      example: 12.5
    ServiceDescription:
      description: Description of the service.
      type: string
      maxLength: 300
    ServiceCategoryGmbName:
      type: string
      description: |
        Google name of the category.
      example: gcid:climbing_gym
    Services:
      description: A Google Service.
      type: object
      properties:
        service_id:
          $ref: '#/components/schemas/ServiceId'
        type:
          $ref: '#/components/schemas/ServiceType'
        name:
          $ref: '#/components/schemas/ServiceName'
        price:
          $ref: '#/components/schemas/ServicePrice'
        description:
          $ref: '#/components/schemas/ServiceDescription'
        category_gmb_name:
          $ref: '#/components/schemas/ServiceCategoryGmbName'
    BusinessServicesResponse:
      type: object
      description: List of Business Services.
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/Services'
          example:
            - service_id: 1
              type: STRUCTURED_SERVICE_ITEM
              name: Climbing Gym
              price: 50
              description: Our climbing gym available for all
              category_gmb_name: gcid:climbing_gym
            - service_id: 2
              type: FREE_FORM_SERVICE_ITEM
              name: Random Name
              price: 25.35
              description: This is our custom service
              category_gmb_name: gcid:climbing_gym
    StructuredServicesCreateUpdate:
      description: A Google Service.
      required:
        - service_id
      type: object
      properties:
        service_id:
          $ref: '#/components/schemas/ServiceId'
        price:
          $ref: '#/components/schemas/ServicePrice'
        description:
          $ref: '#/components/schemas/ServiceDescription'
    FreeFormServicesCreate:
      description: A Google Service.
      required:
        - category_gmb_name
        - name
      type: object
      properties:
        category_gmb_name:
          type: string
          description: >
            Google name of the category. The category must belong to your
            business.
          example: gcid:climbing_gym
        name:
          description: Name of the service.
          type: string
          example: Random Name
        price:
          description: Price of the service.
          type: number
          example: 25.35
        description:
          description: Description of the service.
          type: string
          example: This is our custom service
          maxLength: 300
    FreeFormServicesUpdate:
      description: A Google Service.
      required:
        - service_id
      type: object
      properties:
        service_id:
          description: |
            Id of the service.
          type: integer
          example: 2
        category_gmb_name:
          type: string
          description: >
            Google name of the category. The category must belong to your
            business.
          example: gcid:climbing_gym
        name:
          description: Name of the service.
          type: string
          example: Random Name
        price:
          description: Price of the service.
          type: number
          example: 25.35
        description:
          description: Description of the service.
          type: string
          example: This is our custom service
          maxLength: 300
    FoodMenuSectionName:
      description: Name of the food menu section.
      type: string
    FoodMenuSectionOrder:
      description: Display order of the food menu item in the food menu section.
      type: integer
      example: 3
    FoodMenuItemName:
      description: Name of the food menu item.
      type: string
      example: Item name
      maxLength: 140
    FoodMenuItemOrder:
      description: Display order of the food menu item in the food menu section.
      type: integer
      example: 3
    FoodMenuItemDescription:
      description: Description of the food menu item.
      type: string
      maxLength: 1000
    FoodMenuItemPrice:
      description: Price of the food menu item.
      type: number
      example: 12.5
    FoodMenuMediaSourceUrl:
      description: >-
        User source url of the food menu item, mandatory to set/update media
        with food menu item
      type: string
    FoodMenuMediaPublicUrl:
      description: >-
        Public url the food menu item provided by partoo, can be empty in
        set/update.
      type: string
    FoodMenuItemMedia:
      description: Media of the food menu item.
      properties:
        sourceUrl:
          $ref: '#/components/schemas/FoodMenuMediaSourceUrl'
        publicUrl:
          $ref: '#/components/schemas/FoodMenuMediaPublicUrl'
        id:
          type: string
    FoodMenuItem:
      description: A food menu item object.
      properties:
        name:
          $ref: '#/components/schemas/FoodMenuItemName'
        order:
          $ref: '#/components/schemas/FoodMenuItemOrder'
        description:
          $ref: '#/components/schemas/FoodMenuItemDescription'
        price:
          $ref: '#/components/schemas/FoodMenuItemPrice'
        media:
          $ref: '#/components/schemas/FoodMenuItemMedia'
    FoodMenuSection:
      description: A food menu item section.
      properties:
        name:
          $ref: '#/components/schemas/FoodMenuSectionName'
        order:
          $ref: '#/components/schemas/FoodMenuSectionOrder'
        items:
          type: array
          items:
            $ref: '#/components/schemas/FoodMenuItem'
      example:
        name: Starters
        order: 1
        items:
          - name: Starter 1
            order: 1
            description: First starter of the food menu
            price: 1
          - name: Starter 2
            order: 2
            description: Second starter of the food menu
            price: 5
    BusinessFoodMenus:
      description: A Google food menu for business.
      properties:
        menus:
          type: array
          items:
            $ref: '#/components/schemas/FoodMenuSection'
      example:
        menus:
          - name: Starters
            order: 1
            items:
              - name: Starter 1
                order: 1
                description: First starter of the food menu
                price: 1
                media:
                  source_url: https://www.source_url.com/main_dishes
                  public_url: https://www.partoo_url.com/main_dishes
              - name: Starter 2
                order: 2
                description: Second starter of the food menu
                price: 5
          - name: Main dishes
            order: 2
            items:
              - name: Today's special
                order: 1
                description: Today's special description
                price: 25
                media:
                  source_url: https://www.source_url.com/main_dishes
                  public_url: https://www.partoo_url.com/main_dishes
    PlaceActionLinks.Array:
      description: List of Business Place Action Links
      type: array
      items:
        type: object
        properties:
          gmb_id:
            type: string
            description: The Google My Business ID for the place action type.
            enum:
              - APPOINTMENT
              - ONLINE_APPOINTMENT
              - DINING_RESERVATION
              - FOOD_ORDERING
              - FOOD_DELIVERY
              - FOOD_TAKEOUT
              - SHOP_ONLINE
          urls:
            type: array
            description: List of place action links associated with a given gmb_id.
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: Id for link
                value:
                  type: string
                  description: >-
                    Must be a valid url value and be unique within the list of
                    URLs for this gmb_id.
                is_preferred:
                  type: boolean
                  description: >-
                    Indicates if this URL is the preferred link. There can only
                    be one preferred URL per gmb_id.
                is_editable:
                  type: boolean
                  description: Indicates if this URL is editable.
      example:
        - gmb_id: SHOP_ONLINE
          urls:
            - id: 1
              value: https://www.example.com/shop_online
              is_preferred: true
              is_editable: true
            - id: 2
              value: https://www.example.com/shop_online2
              is_preferred: false
              is_editable: true
        - gmb_id: FOOD_TAKEOUT
          urls:
            - id: 3
              value: https://www.example.com/food_takeout1
              is_preferred: false
              is_editable: false
            - id: 4
              value: https://www.example.com/food_takeout2
              is_preferred: false
              is_editable: true
            - id: 5
              value: https://www.example.com/food_takeout3
              is_preferred: false
              is_editable: true
        - gmb_id: ONLINE_APPOINTMENT
          urls:
            - id: 6
              value: https://www.example.com/online_appointment
              is_preferred: true
              is_editable: true
            - id: 7
              value: https://www.example.com/online_appointment2
              is_preferred: false
              is_editable: true
        - gmb_id: DINING_RESERVATION
          urls:
            - id: 8
              value: https://www.example.com/dining_reservation1
              is_preferred: true
              is_editable: false
            - id: 9
              value: https://www.example.com/dining_reservation2
              is_preferred: false
              is_editable: true
        - gmb_id: APPOINTMENT
          urls:
            - id: 10
              value: https://www.example.com/appointment1
              is_preferred: true
              is_editable: true
            - id: 11
              value: https://www.example.com/appointment2
              is_preferred: false
              is_editable: true
        - gmb_id: FOOD_ORDERING
          urls:
            - id: 12
              value: https://www.example.com/food_ordering1
              is_preferred: true
              is_editable: true
            - id: 13
              value: https://www.example.com/food_ordering2
              is_preferred: false
              is_editable: true
        - gmb_id: FOOD_DELIVERY
          urls: []
    PlaceActionLinksResponse:
      type: object
      properties:
        place_action_links:
          $ref: '#/components/schemas/PlaceActionLinks.Array'
    PostPlaceActionLinks.Array:
      description: List of Business Place Action Links
      type: array
      items:
        type: object
        required:
          - gmb_id
          - urls
        properties:
          gmb_id:
            type: string
            description: The Google My Business ID for the place action type.
            enum:
              - APPOINTMENT
              - ONLINE_APPOINTMENT
              - DINING_RESERVATION
              - FOOD_ORDERING
              - FOOD_DELIVERY
              - FOOD_TAKEOUT
              - SHOP_ONLINE
          urls:
            type: array
            description: List of place action links associated with a given gmb_id.
            items:
              type: object
              required:
                - value
                - is_preferred
              properties:
                id:
                  type: integer
                  description: 'Optional: Include for existing links to update'
                value:
                  type: string
                  description: >-
                    Must be a valid url value and be unique within the list of
                    URLs for this gmb_id.
                is_preferred:
                  type: boolean
                  description: >-
                    Indicates if this URL is the preferred link. There can only
                    be one preferred URL per gmb_id.
      example:
        - gmb_id: SHOP_ONLINE
          urls:
            - value: https://www.example.com/shop_online
              is_preferred: true
            - id: 2
              value: https://www.example.com/shop_online2
              is_preferred: false
        - gmb_id: FOOD_TAKEOUT
          urls:
            - id: 3
              value: https://www.example.com/food_takeout1
              is_preferred: false
            - id: 4
              value: https://www.example.com/food_takeout2
              is_preferred: false
            - value: https://www.example.com/food_takeout3
              is_preferred: false
        - gmb_id: ONLINE_APPOINTMENT
          urls:
            - value: https://www.example.com/online_appointment
              is_preferred: true
            - id: 7
              value: https://www.example.com/online_appointment2
              is_preferred: false
        - gmb_id: DINING_RESERVATION
          urls:
            - id: 8
              value: https://www.example.com/dining_reservation1
              is_preferred: true
            - id: 9
              value: https://www.example.com/dining_reservation2
              is_preferred: false
        - gmb_id: APPOINTMENT
          urls:
            - value: https://www.example.com/appointment1
              is_preferred: true
            - id: 11
              value: https://www.example.com/appointment2
              is_preferred: false
        - gmb_id: FOOD_ORDERING
          urls:
            - value: https://www.example.com/food_ordering1
              is_preferred: true
            - id: 13
              value: https://www.example.com/food_ordering2
              is_preferred: false
        - gmb_id: FOOD_DELIVERY
          urls:
            - id: 14
              value: https://www.example.com/food_delivery1
              is_preferred: true
            - value: https://www.example.com/food_delivery2
              is_preferred: false
    PlaceActionLinksPostBody:
      type: object
      properties:
        place_action_links:
          $ref: '#/components/schemas/PostPlaceActionLinks.Array'
    PlaceActionLinksNonExistingGmbIdsError:
      description: At least one of the attributes values in the request body is incorrect
      type: object
      properties:
        errors:
          type: object
          properties:
            non_existing_gmb_ids:
              type: array
              items:
                type: string
              description: List of `gmb_id` values that do not exist.
      example:
        errors:
          json:
            message: >-
              following gmb_ids do not exist in place_action_links:
              ['SHOPIFY_ONLINE', 'JUST_TAKEOUT']
    PlaceActionLinksNonUniqueGmbIdsError:
      description: The `gmb_id` values in the request are not unique.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: >-
                    Error message indicating that `gmb_id` values must be
                    unique.
      example:
        errors:
          json:
            message: gmb_ids must be unique
    PlaceActionLinksNonUniqueUrlsError:
      description: URL values are not unique within each `gmb_id`.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: >-
                    Error message indicating that URL values per `gmb_id` must
                    be unique.
      example:
        errors:
          json:
            message: url values per gmb_id must be unique
    PlaceActionLinksMultiplePreferredUrlsError:
      description: More than one URL is marked as preferred for a `gmb_id`.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: >-
                    Error message indicating that only one URL can be marked as
                    preferred per `gmb_id`.
      example:
        errors:
          json:
            message: only one is_preferred url at most per place_action_link
    PlaceActionLinksMissingIdsError:
      description: The `id` values in the request do not exist in the backend.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: >-
                    Error message indicating that some `id` values do not exist
                    for the business place action links.
      example:
        errors:
          json:
            message: 'place_action_link ids do not exist for business: {1, 2}'
    PlaceActionLinksNonUniqueIdsError:
      description: The `id` values in the request are not unique.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating that `id` values must be unique.
      example:
        errors:
          json:
            message: place_action_link ids must be unique
    BusinessFields.Section:
      description: Business Fields sections permissions
      type: object
      properties:
        name:
          description: >
            Name of a the section. The structure of the fields inside it depends
            of the section and is described below.
          type: string
    BusinessFields.Field:
      description: Business Field
      type: object
      properties:
        name:
          description: Name of the field
          type: string
        enabled:
          description: Permission (enabled | disabled) of the field for the current user
          type: boolean
        enabled_for_subroles:
          description: >
            Permission (enabled | disabled) of the field for the users with a
            more restrictive role compared to the current user. <p> E.g. if the
            user is ORG_ADMIN: enabled_for_subroles describes the permissions of
            the field for all the GROUP_MANAGER and BUSINESS_MANAGER of the
            given organization. <p> E.g. if the user is PROVIDER:
            enabled_for_subroles describes the permissions of the field for all
            the ORG_ADMIN, GROUP_MANAGER and BUSINESS_MANAGER of the given
            provider.
          type: boolean
    BusinessFields.SectionNormal:
      allOf:
        - $ref: '#/components/schemas/BusinessFields.Section'
        - description: Business Fields Section
          type: object
          properties:
            fields:
              type: array
              items:
                $ref: '#/components/schemas/BusinessFields.Field'
    CustomFields.Metadata:
      allOf:
        - $ref: '#/components/schemas/BusinessFields.Field'
        - description: Business Fields permissions
          type: object
          properties:
            type:
              description: >
                Type of the custom field. <p> Possible values are "TEXT",
                "INTEGER", "FLOAT", "BOOLEAN", "SINGLE_SELECT",
                "MULTIPLE_SELECT", "MULTIPLE_SELECT_IMAGE", "IMAGES_UPLOADER".
              type: string
              enum:
                - TEXT
                - INTEGER
                - FLOAT
                - BOOLEAN
                - SINGLE_SELECT
                - MULTIPLE_SELECT
                - MULTIPLE_SELECT_IMAGE
                - IMAGES_UPLOADER
            id:
              description: ID of the custom field.
              type: integer
            order:
              type: integer
    BusinessFields.SectionCustomFields:
      allOf:
        - $ref: '#/components/schemas/BusinessFields.Section'
        - description: Business Fields Section of Custom Fields
          type: object
          properties:
            fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFields.Metadata'
    BusinessFields.SectionArray:
      description: Business Fields sections array
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/BusinessFields.SectionNormal'
          - $ref: '#/components/schemas/BusinessFields.SectionCustomFields'
      example:
        - name: address
          fields:
            - name: country
              enabled: true
              enabled_for_subroles: true
            - name: city
              enabled: true
              enabled_for_subroles: false
        - name: description
          fields:
            - name: categories
              enabled: true
              enabled_for_subroles: true
            - name: website_url
              enabled: true
              enabled_for_subroles: true
        - name: hours
          fields:
            - name: open_hours
              enabled: true
              enabled_for_subroles: true
        - name: photos
          fields:
            - name: cover
              enabled: false
              enabled_for_subroles: false
        - name: contact
          fields:
            - name: phone_number
              enabled: true
              enabled_for_subroles: false
        - name: custom_fields
          fields:
            - name: has_parking
              enabled: true
              enabled_for_subroles: true
              type: BOOLEAN
              id: 1
              order: 10
              section_id: 4
            - name: special_description
              enabled: true
              enabled_for_subroles: true
              type: TEXT
              id: 2
              order: 11
              max_len: 250
              section_id: 6
            - name: facilities
              enabled: true
              enabled_for_subroles: true
              type: MULTIPLE_SELECT
              id: 3
              order: 2
              possible_values:
                - handicapped access
                - toilets
                - break room
            - name: banner image
              enabled: true
              enabled_for_subroles: true
              id: 4
              type: MULTIPLE_SELECT_IMAGE
              order: 10
              possible_values:
                - image 1
                - image 2
                - image 3
              possible_images_labels:
                - label image 1
                - label image 2
                - label image 3
              possible_images_urls:
                - url_of_image_1
                - url_of_image_2
                - url_of_image_3
            - name: team members
              enabled: true
              enabled_for_subroles: true
              id: 5
              type: IMAGES_UPLOADER
              order: 11
              text_fields:
                - text_field: text 1
                  max_length: 10
                - text_field: text 2
                  max_length: 20
                - text_field: text 3
                  max_length: 30
    Lang:
      description: Available language in the application
      type: string
      enum:
        - fr
        - en
        - es
        - it
        - pt-br
        - de
        - ar
        - nl
        - pl
        - cs
        - ca
        - sk
        - pt
        - lv
        - ro
        - bg
        - hu
      example: fr
    CategorySqlId:
      type: integer
      description: Category id
      example: 42
    CategorySqlGmbId:
      type: string
      description: >
        Unique category id. This is the id you should pass in
        business.categories array when creating/updating a business<br/>
      example: gcid:climbing_gym
    CategoryName:
      type: string
      description: Category name in given language or user's language
      example: Cabinet d'expertise comptable
    DeprecatedCategorySqlName:
      type: object
      properties:
        name:
          type: string
          description: Translated category name
          example: salle d'escalade
        lang:
          type: string
          description: Available language in the application
          example: FR
        country:
          type: string
          description: Country code, will be removed after 2022-10-15
          example: FR
          deprecated: true
    DeprecatedCategorySqlNames:
      type: array
      description: |
        Category name translated for available languages

        *If `with_names` is true*
      items:
        $ref: '#/components/schemas/DeprecatedCategorySqlName'
    CategorySqlState:
      type: string
      description: State of category ( OK or DEPRECATED )
      example: OK
    CategorySqlBlockPushLong:
      type: boolean
      description: >-
        Boolean indicating if the business long description can be pushed to
        Google when the business belongs to this category
      example: false
    CategoryCountries:
      type: array
      items:
        type: string
      description: >
        Array of strings representing the list of country codes in which the
        category is available


        *If `with_countries` is true*
      example:
        - FR
        - GB
        - IT
        - ES
    CategorySqlLiveId:
      type:
        - string
        - 'null'
      description: >-
        Live category id to which the category is mapped (deprecated categories
        are mapped to the closest category)
      example: gcid:sport_club
    DeprecatedCategorySql:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CategorySqlId'
        gmb_id:
          $ref: '#/components/schemas/CategorySqlGmbId'
        name:
          $ref: '#/components/schemas/CategoryName'
        names:
          $ref: '#/components/schemas/DeprecatedCategorySqlNames'
        state:
          $ref: '#/components/schemas/CategorySqlState'
        block_push_long_description_on_gmb:
          $ref: '#/components/schemas/CategorySqlBlockPushLong'
        countries:
          $ref: '#/components/schemas/CategoryCountries'
        live_id:
          $ref: '#/components/schemas/CategorySqlLiveId'
    CategoryId:
      oneOf:
        - type: integer
          description: Category id
        - type: string
          description: Google's category id
      description: Category id or Google's category id
      example: 5706 or gcid:bank
    CategorySqlName:
      type: object
      properties:
        name:
          type: string
          description: Translated category name
          example: salle d'escalade
        lang:
          type: string
          description: Available language in the application
          example: FR
    CategorySqlNames:
      type: array
      description: |
        Category names translated for available languages

        *If `with_names` is true*
      items:
        $ref: '#/components/schemas/CategorySqlName'
    CategorySql:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CategorySqlId'
        gmb_id:
          $ref: '#/components/schemas/CategorySqlGmbId'
        name:
          $ref: '#/components/schemas/CategoryName'
        names:
          $ref: '#/components/schemas/CategorySqlNames'
        state:
          $ref: '#/components/schemas/CategorySqlState'
        block_push_long_description_on_gmb:
          $ref: '#/components/schemas/CategorySqlBlockPushLong'
        countries:
          $ref: '#/components/schemas/CategoryCountries'
        live_id:
          $ref: '#/components/schemas/CategorySqlLiveId'
    SuggestedAdditionalCategoriesObject:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CategorySqlId'
        gmb_id:
          $ref: '#/components/schemas/CategorySqlGmbId'
        name:
          $ref: '#/components/schemas/CategoryName'
        state:
          $ref: '#/components/schemas/CategorySqlState'
        block_push_long_description_on_gmb:
          $ref: '#/components/schemas/CategorySqlBlockPushLong'
        live_id:
          $ref: '#/components/schemas/CategorySqlLiveId'
    MessageContentType:
      type: string
      enum:
        - Text
        - Image
        - IgStoryReply
        - IgStoryMention
        - Unsupported
      description: >
        The type of the message:

        - "Text" describes a simple text message.

        - "Image" describes a message that only contains an image.

        - "IgStoryReply" (for "Instagram" conversations) describes a
        notification

        of reply to an Instagram story.

        - "IgStoryMention" (for "Instagram" conversations) describes a
        notification

        of a mention in an Instagram story.

        - "Unsupported" describes a message whose content is not supported.


        â ï¸ New values may be added to this enum without prior notice and

        without following the classic depreciation cycle.

        It is up to you to gracefully handle the case where new values

        are added. We recommend showing a "Unhandled content" placeholder to the

        user in place of the message â ï¸
    SenderType:
      type: string
      enum:
        - User
        - Consumer
        - Metadata
      description: >
        Describes the person that sent the Message:

        - "User" indicates that the message was sent as the Business.

        Such messages can be sent by a Partoo user, via API, or directly on the

        messaging platform.

        - "Consumer" indicates that the message was sent by a consumer, a client

        that wants to get in touch with the business.

        - "Metadata" is reserved for special messages that appear in the

        Partoo inbox. They only give contextual information about the
        conversation,

        and are not shown to the consumer.


        â ï¸ New values may be added to this enum without prior notice and

        without following the classic depreciation cycle.

        It is up to you to gracefully handle the case where new values

        are added. We recommend ignoring messages with unhandled sender_type â ï¸
    MessageStatus:
      type: string
      enum:
        - Sending
        - Success
        - Failed
      description: >
        The delivery status of the message.

        Messages send via Partoo are created with the status "Sending", and

        propagated to the messaging channel.

        If the message is sent successfully, the status is changed to "Success".

        If the messaging channel fails to send the message, the status changed
        to

        "Failed". A failed message can be retried using the [/retry
        endpoint](#operation/retrySendMessage).
    TextMessageContent:
      title: Text
      type: string
      description: The text of the message.
    ImageMessageContent:
      title: Image
      type: string
      format: url
      description: The url of the image.
    IgStoryReplyMessageContent:
      type: object
      title: IgStoryReply
      properties:
        url:
          type: string
          format: url
          description: The url of the story that received the reply.
        content:
          type: string
          description: Text of the reply, or url of the image.
        content_type:
          type: string
          enum:
            - Image
            - Text
          description: The type of content of ther reply.
        id:
          type: string
          description: The Instagram ID of the story.
    IgStoryMentionMessageContent:
      type: string
      title: IgStoryMention
      format: url
      description: The url of the story mentionned.
    UnsupportedMessageContent:
      type: object
      title: Unsupported
      properties:
        type:
          type: string
          enum:
            - video
            - audio
            - unknown
    Message:
      type: object
      title: Message
      properties:
        id:
          type: integer
          description: The id of the message.
        conversation_id:
          type: integer
          description: The id of the parent conversation.
        date:
          type: string
          description: |
            The date at which the message was sent or received, in the ISO 8601
            format (ex: "2023-01-31 16:22:17.327878+00:00").
          example: '2023-01-31 16:22:17.327878+00:00'
        content_type:
          $ref: '#/components/schemas/MessageContentType'
        sender_type:
          $ref: '#/components/schemas/SenderType'
        sender_label:
          type:
            - string
            - 'null'
          description: Name of the person sending the message
          example: Jane Doe
        status:
          $ref: '#/components/schemas/MessageStatus'
        is_deleted:
          type: boolean
          description: |
            If the message has been deleted by the consumer on the messaging
            channel (for now, only "Instagram" messages can be deleted).
          example: false
        content:
          oneOf:
            - $ref: '#/components/schemas/TextMessageContent'
            - $ref: '#/components/schemas/ImageMessageContent'
            - $ref: '#/components/schemas/IgStoryReplyMessageContent'
            - $ref: '#/components/schemas/IgStoryMentionMessageContent'
            - $ref: '#/components/schemas/UnsupportedMessageContent'
        user_id:
          type:
            - string
            - 'null'
          description: |
            For "User" messages sent via the Partoo application, the id of the
            user that sent the message.
    ConversationStatus:
      type: string
      enum:
        - Open
        - Closed
    ConversationBusiness:
      type: object
      title: BusinessInfo
      properties:
        id:
          type: string
        name:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        zipcode:
          type:
            - string
            - 'null'
        country:
          type:
            - string
            - 'null'
        formatted_address:
          type:
            - string
            - 'null'
    MessagingPartner:
      description: |
        The channel that the message is being sent to/from.

        â ï¸ New values may be added to this enum without prior notice and
        without following the classic depreciation cycle.
        It is up to you to gracefully handle the case where new values
        are added. â ï¸
      type: string
      enum:
        - Google
        - Facebook
        - Instagram
        - SMS
      example: Google
    ConversationIssue:
      type: string
      enum:
        - facebook_no_page_linked
        - facebook_partner_co_undone
        - facebook_invalid_status
        - facebook_missing_webhook_subs
        - instagram_no_account_linked
        - sms_no_phone_number
    Conversation:
      type: object
      title: Conversation
      properties:
        id:
          type: integer
        consumer_img:
          type:
            - string
            - 'null'
          format: url
          description: The url of the consumer's profile picture
          example: https://www.example.com/profile-picture.jpg
        consumer_name:
          type:
            - string
            - 'null'
          description: >
            The name of the consumer, can be empty. The format may differ
            depending

            on the platform of contact (ex: "John Doe", "John Doe (@johndoe)",

            "@johndoe", "", ...).
          example: John Doe
        consumer_phone_number:
          type:
            - string
            - 'null'
          description: |
            The phone number of the consumer, formatted in E.164 international
            format (ex: "+33612345678").
          example: '+33612345678'
        last_message:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/Message'
              description: The last message exchanged in the conversation.
        is_read:
          type: boolean
          description: >
            If the last message received was read. This property is scoped to
            the

            user who performs the request. Multiple partoo users can have a

            different is_read value for the same conversation.
        status:
          allOf:
            - description: >
                If Open, it is possible to send a message in the conversation,
                else not.

                A conversation can be Closed if it is expired.
            - $ref: '#/components/schemas/ConversationStatus'
        created_at:
          type: string
          description: |
            The date of creation of the conversation, in the ISO 8601 format
            (ex: "2023-01-31 16:22:17.327878+00:00").
          example: '2023-01-31 16:22:17.327878+00:00'
        has_one_user_message:
          type: boolean
          description: |
            If the conversation has at least one message sent by a Partoo user.
        business:
          allOf:
            - description: >
                Some basic information about the business that the conversation
                is

                associated with.
            - $ref: '#/components/schemas/ConversationBusiness'
        messaging_partner:
          $ref: '#/components/schemas/MessagingPartner'
        issues:
          type: array
          items:
            $ref: '#/components/schemas/ConversationIssue'
          description: >
            The list of issues that affect the conversation. The issues
            represent

            setup problem that the business may have with a messaging channel.
            It is

            not possible to send messages on a conversation that has issues.


            â ï¸ New values may be added to this enum without prior notice and

            without following the classic depreciation cycle.

            It is up to you to gracefully handle the case where new values

            are added. â ï¸
          example:
            - facebook_no_page_linked
        first_message_date:
          type: string
          description: >
            The date at which the first message of the conversation was
            received,

            in the ISO 8601 format (ex: "2023-01-31 16:22:17.327878+00:00").
        is_expired:
          type: boolean
          description: >
            If the conversation has expired. A conversation expires if the
            consumer

            has not contacted the business for a certain amount of time.

            You cannot send messages to an expired conversation.
          example: false
        is_solved:
          type: boolean
          description: >
            If the conversation has been solved. Conversations can be solved
            from our

            app or by updating conversation status to "closed".
          example: false
        assigned_user_id:
          type: string
          description: |
            The "user_id" of the user assigned to the conversation.
          example: 62d80fae74e8b11d700302b8
    Count:
      type: integer
      description: >
        Total number of results available for the filters and dimensions
        requested.
      example: 1
    NextCursor:
      type:
        - string
        - 'null'
      description: |
        The cursor to use in order to retrieve the next page of data.
        When all data have been fetched, the value is null.
    PostMessage:
      required:
        - conversation_id
        - content_type
        - date
      properties:
        conversation_id:
          type: integer
          description: The id of the conversation
    PostTextMessage:
      required:
        - content
      title: Text
      allOf:
        - $ref: '#/components/schemas/PostMessage'
        - properties:
            content_type:
              type: string
              enum:
                - Text
            content:
              type: string
              description: The text to send
    PostImageUrlMessage:
      required:
        - url
      title: Image Url
      allOf:
        - $ref: '#/components/schemas/PostMessage'
        - properties:
            content_type:
              type: string
              enum:
                - Image
            url:
              type: string
              description: The url of the image to send
    PostImageMessage:
      required:
        - image
      allOf:
        - $ref: '#/components/schemas/PostMessage'
        - properties:
            content_type:
              type: string
              enum:
                - Image
            image:
              type: string
              description: The image to send
    MessageReplyTemplate:
      type: object
      title: MessageReplyTemplate
      properties:
        id:
          type: string
          example: 642bca3d2830e15c6806cc33
        title:
          type: string
          description: The title of the message template.
          example: Quote request
        content:
          type: string
          enum:
            - client_full_name
            - client_first_name
            - business_name
            - my_first_name
            - rb_link
            - address
            - website_url
            - phone_number
          description: >
            The content of the message template should be a __stringified JSON__
            object. This includes both the message content (`"text"`) and the
            pair `"_version": "0.1"`.


            The `"text"` can contain placeholders (values from the enum above
            within double curly braces `{{}}`) that will be replaced with the
            actual values when the message is sent.
          example: >-
            {"text": "Hello {{client_full_name}}, thank you for your request.
            For a quote, please contact us at 0123456789." "_version": "0.1"}
        icon:
          type:
            - string
            - 'null'
          description: The icon associated with the message template.
          example: ð
        org_id:
          type: integer
          description: The organization ID that the message template belongs to.
          example: 123
        created_at:
          type: string
          format: date-time
          description: >-
            The date and time when the message template was created, in ISO 8601
            format.
          example: '2023-01-31T16:22:17.327878+00:00'
        updated_at:
          type:
            - string
            - 'null'
          format: date-time
          description: >-
            The date and time when the message template was last updated, in ISO
            8601 format.
          example: '2023-02-15T10:00:00.000000+00:00'
        usage_count:
          type: integer
          description: The number of times the message template has been used.
          example: 50
    MessageTemplateCreateRequest:
      required:
        - title
        - content
      properties:
        title:
          type: string
          description: The title of the template
          example: Quote request
        icon:
          type: string
          description: The icon linked to the template
          example: ð
        content:
          type: string
          description: >
            The template content as a __stringified JSON__ object with
            `"_version": "0.1"` inside
          example: >-
            {"text": "Hello, thank you for your request. For a quote, please
            contact us at 0123456789." "_version": "0.1"}
    MessageTemplateUpdateRequest:
      properties:
        title:
          type: string
          description: The new title of the template
          example: Quote request
        icon:
          type: string
          description: The new icon linked to the template
          example: ð
        content:
          type: string
          description: >
            The new template content as a __stringified JSON__ object with
            `"_version": "0.1"` inside
          example: >-
            {"text": "Hello, thank you for your request. For a quote, please
            contact us at 0123456789." "_version": "0.1"}
    MessagingSettingWelcomeMessage:
      type:
        - string
        - 'null'
      description: |
        When a consumer first contacts the business, an automated reply is
        sent. The content of the reply depends on whether the consumer
        contacted the business during it's chat hours. If it is, the
        welcome_message is sent as a reply.

        The welcome_message is mandatory, and can be customized. A default
        will be set if none is specified.
    MessagingSettingOfflineMessage:
      type:
        - string
        - 'null'
      description: |
        When a consumer first contacts the business, an automated reply is
        sent. The content of the reply depends on whether the consumer
        contacted the business during it's chat hours. If it is not, the
        offline_message is sent as a reply.

        The offline_message is mandatory, and can be customized. A default
        will be set if none is specified.
    MessagingSettingUsesBusinessHours:
      type:
        - boolean
        - 'null'
      description: |
        If set to true, the business' "open_hours" will be used as chat
        hours. Otherwise, you need to specify "custom_chat_hours".
    ChatHours:
      type:
        - object
        - 'null'
      description: >
        The chat hours of the business (in its timezone).


        Chat hours are specified per weekday. This is done by supplying an
        object

        mapping weekdays ("monday", "tuesday", etc.) to a list of strings. These

        strings in turn represent time slots during which the business is open.


        For example, the following value would set the chat hours to between

        08:00-15:00 in the afternoon and 18:00-23:00 in the evening on Mondays:


        <code>{"monday": ["08:00-15:00", "18:00-23:00"]}</code>


        To indicate that a business can be contacted for 24 hours, for a
        specific

        weekday, use the value <code>["00:00-23:59"]</code>.


        This field is not mandatory unless "uses_business_hours" is set to
        false.
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        monday:
          $ref: '#/components/schemas/Day'
        tuesday:
          $ref: '#/components/schemas/Day'
        wednesday:
          $ref: '#/components/schemas/Day'
        thursday:
          $ref: '#/components/schemas/Day'
        friday:
          $ref: '#/components/schemas/Day'
        saturday:
          $ref: '#/components/schemas/Day'
        sunday:
          $ref: '#/components/schemas/Day'
    MessagingSettingIsLaunched:
      type:
        - boolean
        - 'null'
      description: |
        Some messaging channels (Google and Facebook) can be temporarily
        deactivated. This allows the business to close for a period of time
        without having to answer consumer messages.

        This is important because consumers will get frustrated if they are able
        to contact a business and do not get an answer. It is also important to
        note that for some messaging channels, not responding to messages may
        lead to decreased visibility of the business, or suspension of the
        messaging service.

        The is_launched property indicates whether the business is reachable
        for those messaging channels.

        The value can be updated, and the changes will be propagated to the
        messaging channels, effectively toggling the On or Off the ability for
        consumers to reach the business. (The change to "is_launched" is made
        asychronously, and the update will be effective when the messaging
        channels have finished propagating the information)
    MessagingSetting:
      type: object
      properties:
        id:
          type: integer
        business_id:
          type: string
          description: |
            The ID of the business that the MessagingSetting is related to.
        business_name:
          type:
            - string
            - 'null'
          description: |
            The Name of the business that the MessagingSetting is related to.
        business_address:
          type:
            - string
            - 'null'
          description: |
            The Formatted address of the business that the MessagingSetting is
            related to.
          example: 1 Rue de la Paix, 75000 Paris
        welcome_message:
          $ref: '#/components/schemas/MessagingSettingWelcomeMessage'
        offline_message:
          $ref: '#/components/schemas/MessagingSettingOfflineMessage'
        uses_business_hours:
          $ref: '#/components/schemas/MessagingSettingUsesBusinessHours'
        custom_chat_hours:
          $ref: '#/components/schemas/ChatHours'
        is_launched:
          $ref: '#/components/schemas/MessagingSettingIsLaunched'
    Page:
      description: The current page number.
      type: integer
      example: 1
    MaxPage:
      description: Total number of pages available for this request.
      type: integer
      example: 1
    CustomFieldName:
      description: The name of the custom field
      type: string
      minLength: 1
      maxLength: 50
      example: Click and collect
    CustomFieldTypeBool:
      description: BOOLEAN
      minLength: 1
      type: string
      example: BOOLEAN
    CustomFieldOrder:
      description: >-
        Describes where the custom field is displayed on the Business Edit view
        of the Partoo App. If the custom field is within a section, <b>order</b>
        specifies its position within the custom field section.
      type: integer
      default: 10
      example: 30
    CustomFieldSectionId:
      description: Id of the custom field section
      type: integer
      example: 6
    CustomFieldBool:
      description: Boolean Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeBool'
        order:
          $ref: '#/components/schemas/CustomFieldOrder'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldTypeText:
      description: TEXT
      minLength: 1
      type: string
      example: TEXT
    CustomFieldMaxLen:
      description: maximum lenght for TEXT field
      type: integer
      example: 10
    CustomFieldText:
      description: Text Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeText'
        max_len:
          $ref: '#/components/schemas/CustomFieldMaxLen'
        order:
          $ref: '#/components/schemas/CustomFieldOrder'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldTypeInteger:
      description: INTEGER
      minLength: 1
      type: string
      example: INTEGER
    CustomFieldMin:
      description: minimum value for INTEGER field
      type: integer
      example: 0
    CustomFieldMax:
      description: maximum value for INTEGER field
      type: integer
      example: 100
    CustomFieldInteger:
      description: Integer Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeInteger'
        min:
          $ref: '#/components/schemas/CustomFieldMin'
        max:
          $ref: '#/components/schemas/CustomFieldMax'
        order:
          $ref: '#/components/schemas/CustomFieldOrder'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldTypeFloat:
      description: FLOAT
      minLength: 1
      type: string
      example: FLOAT
    CustomFieldFloatMin:
      description: minimum value for FLOAT field
      type: number
      example: 0
    CustomFieldFloatMax:
      description: maximum value for FLOAT field
      type: number
      example: 10.5
    CustomFieldFloat:
      description: Float Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeFloat'
        min:
          $ref: '#/components/schemas/CustomFieldFloatMin'
        max:
          $ref: '#/components/schemas/CustomFieldFloatMax'
        order:
          $ref: '#/components/schemas/CustomFieldOrder'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldTypeSingleSelect:
      description: SINGLE_SELECT
      minLength: 1
      type: string
      example: SINGLE_SELECT
    CustomFieldPossibleValues:
      minItems: 1
      description: list of available values
      type: array
      items:
        type: string
      example:
        - free parking
        - disabled access
    CustomFieldSingleSelect:
      description: Single Select Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeSingleSelect'
        possible_values:
          $ref: '#/components/schemas/CustomFieldPossibleValues'
        order:
          $ref: '#/components/schemas/CustomFieldOrder'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldTypeMultipleSelect:
      description: MULTIPLE_SELECT
      minLength: 1
      type: string
      example: MULTIPLE_SELECT
    CustomFieldMultipleSelect:
      description: Multple Select Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeMultipleSelect'
        possible_values:
          $ref: '#/components/schemas/CustomFieldPossibleValues'
        order:
          $ref: '#/components/schemas/CustomFieldOrder'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldTypeMultipleSelectImage:
      description: MULTIPLE_SELECT_IMAGE
      minLength: 1
      type: string
      example: MULTIPLE_SELECT_IMAGE
    CustomFieldPossibleValuesMSI:
      minItems: 1
      description: >
        <p>List of available values. <p>Each element correspond to one of
        possible_images_urls and possible_images_labels. <p>Hence the 3 lists
        shall have the same size.
      type: array
      items:
        type: string
      example:
        - first image
        - second image
    CustomFieldPossibleImagesUrls:
      minItems: 1
      description: List of available urls
      type: array
      items:
        type: string
      example:
        - https://image1
        - https://image2
    CustomFieldPossibleImagesLabels:
      minItems: 1
      description: >
        <p>List of available labels. <p>Can be set to null but shall always have
        the same number of elements than possible_values and
        possible_images_urls.
      type: array
      items:
        type: string
      example:
        - Image 1
        - Image 2
    CustomFieldMultipleSelectImage:
      description: Multiple Select Image Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeMultipleSelectImage'
        possible_values:
          $ref: '#/components/schemas/CustomFieldPossibleValuesMSI'
        possible_images_urls:
          $ref: '#/components/schemas/CustomFieldPossibleImagesUrls'
        possible_images_labels:
          $ref: '#/components/schemas/CustomFieldPossibleImagesLabels'
        order:
          $ref: '#/components/schemas/CustomFieldOrder'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldTypeImagesUploader:
      description: IMAGES_UPLOADER
      minLength: 1
      type: string
      example: IMAGES_UPLOADER
    CustomFieldImagesUploader:
      description: Images uploader Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeImagesUploader'
        text_fields:
          $ref: '#/components/schemas/CustomFieldValuesImagesUploader'
        order:
          $ref: '#/components/schemas/CustomFieldOrder'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldId:
      description: Id of the custom field
      type: integer
      example: 42
    CustomFieldForceUpdate:
      description: >
        <p>The deletion of a custom field or the update of its metadata can have
        impacts on custom fields which are already set for businesses. <ul>
          <li>If <code>force</code> is set to false, updates/deletions will be performed only if they are non destructive.
          If some businesses would be impacted by the update/deletion, an exception will be returned
          <li>If <code>force</code> is set to true, destructive modification will be performed and businesses values will be deleted accordingly.
      type: boolean
      default: false
    CustomFieldForcedUpdate:
      deprecated: true
      description: >
        <p>Deprecated: please use the parameter <code>force</code> above.</p>
        <p>The deletion of a custom field or the update of its metadata can have
        impacts on custom fields which are already set for businesses. <ul>
          <li>If <code>forced_update</code> is set to false, updates/deletions will be performed only if they are non destructive.
          If some businesses would be impacted by the update/deletion, an exception will be returned
          <li>If <code>forced_update</code> is set to true, destructive modification will be performed and businesses values will be deleted accordingly.
      type: boolean
      default: false
    CustomFieldEditTypeBool:
      description: Boolean Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeBool'
        force:
          $ref: '#/components/schemas/CustomFieldForceUpdate'
        forced_update:
          $ref: '#/components/schemas/CustomFieldForcedUpdate'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldEditTypeText:
      description: Text Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeText'
        max_len:
          $ref: '#/components/schemas/CustomFieldMaxLen'
        force:
          $ref: '#/components/schemas/CustomFieldForceUpdate'
        forced_update:
          $ref: '#/components/schemas/CustomFieldForcedUpdate'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldEditTypeInteger:
      description: Integer Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeInteger'
        min:
          $ref: '#/components/schemas/CustomFieldMin'
        max:
          $ref: '#/components/schemas/CustomFieldMax'
        force:
          $ref: '#/components/schemas/CustomFieldForceUpdate'
        forced_update:
          $ref: '#/components/schemas/CustomFieldForcedUpdate'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldEditTypeFloat:
      description: Float Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeFloat'
        min:
          $ref: '#/components/schemas/CustomFieldMin'
        max:
          $ref: '#/components/schemas/CustomFieldMax'
        force:
          $ref: '#/components/schemas/CustomFieldForceUpdate'
        forced_update:
          $ref: '#/components/schemas/CustomFieldForcedUpdate'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldCreatedValues:
      description: list of available values to add
      type: array
      items:
        type: string
      example:
        - Image 3
    CustomFieldDeletedValues:
      description: list of available values to remove
      type: array
      items:
        type: string
      example:
        - Image 1
    CustomFieldRenamedValues:
      description: list of available values to rename
      type: array
      items:
        type: object
        properties:
          old_value:
            type: string
          new_value:
            type: string
      example:
        - old_value: Image 1
          new_value: Draw 1
        - old_value: Image 2
          new_value: Photo 2
    CustomFieldTypeEditSingleSelect:
      description: Single Select Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeSingleSelect'
        created_values:
          $ref: '#/components/schemas/CustomFieldCreatedValues'
        deleted_values:
          $ref: '#/components/schemas/CustomFieldDeletedValues'
        renamed_values:
          $ref: '#/components/schemas/CustomFieldRenamedValues'
        force:
          $ref: '#/components/schemas/CustomFieldForceUpdate'
        forced_update:
          $ref: '#/components/schemas/CustomFieldForcedUpdate'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldTypeEditMultipleSelect:
      description: Multple Select Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeMultipleSelect'
        created_values:
          $ref: '#/components/schemas/CustomFieldCreatedValues'
        deleted_values:
          $ref: '#/components/schemas/CustomFieldDeletedValues'
        renamed_values:
          $ref: '#/components/schemas/CustomFieldRenamedValues'
        force:
          $ref: '#/components/schemas/CustomFieldForceUpdate'
        forced_update:
          $ref: '#/components/schemas/CustomFieldForcedUpdate'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldCreatedValuesMSI:
      description: list of available values to add
      type: array
      items:
        type: string
      example:
        - label: Image 3
          url: https://image3
          value: Image 3
    CustomFieldRenamedValuesMSI:
      description: list of available values to add
      type: array
      items:
        type: object
        properties:
          label:
            type: string
          url:
            type: string
          value:
            type: string
          old_value:
            type: string
      example:
        - label: new label
          url: https://new_url
          value: new value
          old_value: Image 1
    CustomFieldTypeEditMultipleSelectImage:
      description: Multiple Select Image Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeMultipleSelectImage'
        created_values:
          $ref: '#/components/schemas/CustomFieldCreatedValuesMSI'
        deleted_values:
          $ref: '#/components/schemas/CustomFieldDeletedValues'
        renamed_values:
          $ref: '#/components/schemas/CustomFieldRenamedValuesMSI'
        force:
          $ref: '#/components/schemas/CustomFieldForceUpdate'
        forced_update:
          $ref: '#/components/schemas/CustomFieldForcedUpdate'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldCreatedValuesImagesUploader:
      description: List of text fields to add
      type: array
      items:
        $ref: '#/components/schemas/CustomFieldValuesImagesUploader'
      example:
        - text_field: text 1
          max_length: 30
        - text_field: text 2
          max_length: 20
    CustomFieldDeletedValuesImagesUploader:
      description: List of text fields to delete
      type: array
      items:
        type: string
      example:
        - my text field
    CustomFieldEditedValuesImagesUploader:
      description: List of edited text fields
      type: array
      items:
        type: object
        properties:
          new_value:
            $ref: '#/components/schemas/CustomFieldValuesImagesUploader'
          old_value:
            $ref: '#/components/schemas/CustomFieldValuesImagesUploader'
      example:
        - new_value:
            text_field: new name
            max_length: 40
          old_value:
            text_field: old name
            max_length: 20
    CustomFieldTypeEditImagesUploader:
      description: Images uploader Custom Field
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldName'
        type:
          $ref: '#/components/schemas/CustomFieldTypeImagesUploader'
        created_values:
          $ref: '#/components/schemas/CustomFieldCreatedValuesImagesUploader'
        deleted_values:
          $ref: '#/components/schemas/CustomFieldDeletedValuesImagesUploader'
        edited_values:
          $ref: '#/components/schemas/CustomFieldEditedValuesImagesUploader'
        force:
          $ref: '#/components/schemas/CustomFieldForceUpdate'
        forced_update:
          $ref: '#/components/schemas/CustomFieldForcedUpdate'
        section_id:
          $ref: '#/components/schemas/CustomFieldSectionId'
    CustomFieldBusinessesCount:
      description: Number of businesses in error
      type: integer
      example: 2
    CustomFieldSimpleDescription:
      description: Error description
      type: string
      example: >-
        At least one business does not respect the new constraints, please send
        forced_update=true to force update.
    CustomFieldTextConstraint:
      description: constraints in error
      type: array
      items:
        type: string
      example:
        - max_len
    CustomFieldTextError:
      description: New max_len is not respected by some business
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                businesses_count:
                  $ref: '#/components/schemas/CustomFieldBusinessesCount'
                description:
                  $ref: '#/components/schemas/CustomFieldSimpleDescription'
                constraints:
                  $ref: '#/components/schemas/CustomFieldTextConstraint'
    CustomFieldNumberConstraint:
      description: constraints in error
      type: array
      items:
        type: string
      example:
        - min
        - max
    CustomFieldNumberError:
      description: New max or min is not respected by some business
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                businesses_count:
                  $ref: '#/components/schemas/CustomFieldBusinessesCount'
                description:
                  $ref: '#/components/schemas/CustomFieldSimpleDescription'
                constraints:
                  $ref: '#/components/schemas/CustomFieldNumberConstraint'
    CustomFieldSelectDescription:
      description: Error description
      type: string
      example: >-
        At least one business had one of these values, please send
        forced_update=true to force update.
    CustomFieldSelectConstraint:
      description: options in error
      type: array
      items:
        type: string
      example:
        - free parking
    CustomFieldSelectError:
      description: Option deleted is used by a business
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                businesses_count:
                  $ref: '#/components/schemas/CustomFieldBusinessesCount'
                description:
                  $ref: '#/components/schemas/CustomFieldSelectDescription'
                options:
                  $ref: '#/components/schemas/CustomFieldSelectConstraint'
    CustomFieldDeleteDescription:
      description: custom fields in error
      type: array
      items:
        type: string
      example: >-
        At least one business has this custom field, please send
        forced_update=true to force update.
    CustomFieldDeleteError:
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                businesses_count:
                  $ref: '#/components/schemas/CustomFieldBusinessesCount'
                description:
                  $ref: '#/components/schemas/CustomFieldDeleteDescription'
    CustomFieldOrdersObject:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CustomFieldId'
        order:
          $ref: '#/components/schemas/CustomFieldOrder'
    CustomFieldOrders:
      description: >
        On the Business Edit view of the Partoo App, custom fields will be
        displayed depending on their order. </br> The lowest number will be the
        first.
      type: array
      items:
        $ref: '#/components/schemas/CustomFieldOrdersObject'
    CustomFieldSectionOrder:
      description: >-
        Describes where the custom field section is displayed on the Business
        Edit view of the Partoo App.
      type: integer
      example: 18
    CustomFieldSectionOrdersObject:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CustomFieldSectionId'
        order:
          $ref: '#/components/schemas/CustomFieldSectionOrder'
    CustomFieldSectionOrders:
      description: >
        On the Business Edit view of the Partoo App, custom fields section will
        be displayed depending on their order. </br> The lowest number will be
        the first.
      type: array
      items:
        $ref: '#/components/schemas/CustomFieldSectionOrdersObject'
    CustomFieldSectionName:
      description: >-
        The name of the custom field section. Needs to be unique from all other
        section names.
      type: string
      example: Section A
    CustomFieldSection:
      description: Section containing custom fields
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/CustomFieldSectionName'
        order:
          $ref: '#/components/schemas/CustomFieldSectionOrder'
    AttributeType:
      description: Type of the Attribute
      type: string
      enum:
        - URL
        - REPEATABLE_URL
        - BOOL
        - ENUM
        - REPEATABLE_ENUM
    AttributeGmbId:
      description: Google Id of the attribute
      type: string
      example: gcid:restaurant
    AttributeName:
      description: Name of the attribute in the chosen language
      type: string
      example: Delivery
    AttributeOrder:
      type: integer
      example: 1
    Attribute:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AttributeType'
        gmb_id:
          $ref: '#/components/schemas/AttributeGmbId'
        name:
          $ref: '#/components/schemas/AttributeName'
        order:
          $ref: '#/components/schemas/AttributeOrder'
    AttributesGroupName:
      type: string
      description: Name of the attribute group
      example: Services disponibles
    AttributesGroupOrder:
      type: integer
      example: 5
    AttributesGroup:
      type: object
      properties:
        attributes:
          type: array
          description: List of Google Attributes
          items:
            $ref: '#/components/schemas/Attribute'
        name:
          $ref: '#/components/schemas/AttributesGroupName'
        order:
          $ref: '#/components/schemas/AttributesGroupOrder'
    AttributesGroupList:
      type: array
      description: List of Google Groups
      items:
        $ref: '#/components/schemas/AttributesGroup'
    AttributesGroupResponse:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/AttributesGroupList'
    AttributesMissingParametersError:
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                lang:
                  description: lang parameter is required
                  type: string
                  example: is required
                category_name:
                  description: category_name parameter is required
                  type: string
                  example: is required
    AttributesWrongCategoryError:
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: string
              description: Category name not found in DB
              example: Category name not found in DB
    AttributesWrongLangError:
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                lang:
                  type: object
                  properties:
                    explanation:
                      description: incorrect value inputed in lang parameter
                      type: string
                      example: xx is an incorrect value
                    choices:
                      type: array
                      items:
                        type: string
                      description: languages choices available
                      example:
                        - DE
                        - EN
                        - ES
                        - FR
                        - IT
                        - PT
                        - PT_BR
    MoreHoursListResponse:
      properties:
        more_hours:
          description: List of More Hour IDs for a given category and country.
          type: array
          items:
            type: object
            properties:
              gmb_id:
                description: The More Hour ID.
                type: string
                example: BREAKFAST
              name:
                description: >-
                  The name of the More Hour translated to the specified
                  language.
                type: string
                example: Breakfast
          example:
            - gmb_id: BREAKFAST
              name: Breakfast
            - gmb_id: BRUNCH
              name: Brunch
            - gmb_id: DELIVERY
              name: Delivery
            - gmb_id: DINNER
              name: Dinner
            - gmb_id: DRIVE_THROUGH
              name: Drive through
            - gmb_id: HAPPY_HOUR
              name: Happy hours
            - gmb_id: KITCHEN
              name: Kitchen
            - gmb_id: LUNCH
              name: Lunch
            - gmb_id: ONLINE_SERVICE_HOURS
              name: Online service hours
            - gmb_id: PICKUP
              name: Pickup
            - gmb_id: TAKEOUT
              name: Takeout
            - gmb_id: SENIOR_HOURS
              name: Senior hours
            - gmb_id: ACCESS
              name: Access
    MoreHoursListMissingParametersError:
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: object
              properties:
                category:
                  description: category parameter is required
                  type: string
                  example: is required
                country:
                  description: country parameter is required
                  type: string
                  example: is required
    ServicesSuggestion:
      type: object
      properties:
        service_id:
          $ref: '#/components/schemas/ServiceId'
        type:
          $ref: '#/components/schemas/ServiceType'
        name:
          $ref: '#/components/schemas/ServiceName'
        category_id:
          $ref: '#/components/schemas/CategorySqlId'
        category_gmb_name:
          $ref: '#/components/schemas/ServiceCategoryGmbName'
    ServicesSuggestionResponse:
      type: object
      properties:
        services_suggestions:
          type: array
          items:
            $ref: '#/components/schemas/ServicesSuggestion'
    GoogleLocation:
      description: Google location
      type: object
      properties:
        id:
          description: The unique identifier of the Google location on Partoo.
          type: string
          example: 6047dac0604f33da03018004
        location_name:
          description: The name of the location.
          type: string
          example: Annie - HQ
        store_code:
          description: The store code of the google location.
          type: string
          example: annie-hq
        region_code:
          description: The region code where the location is situated.
          type: string
          example: FR
        postal_code:
          description: The postal code of the location.
          type: string
          example: '75018'
        address_details:
          description: The details of the location's address.
          type: string
          example: 130 rue mont cenis
        locality:
          description: The locality of the location.
          type: string
          example: Paris
        place_id:
          description: The unique identifier of the Google Maps place.
          type: string
          example: ChIJ3Qu-HpFt5kcRNHUedqwIzQY
        google_verifications:
          description: >-
            The status and checked date of the Google verification for the
            location.
          type: object
          properties:
            status:
              description: The status of the Google verification.
              type: string
              example: verified
            checked_at:
              description: The date and time when the Google verification was last checked.
              type: string
              format: date-time
              example: '2023-01-30T14:25:11.163950Z'
        phone_numbers:
          description: The phone number associated with the location.
          type: string
          example: '0675181818'
    OrgId:
      description: Organization id
      type: integer
      example: 42
    GroupParentId:
      description: Group parent Id. If not null, it means it's a subgroup.
      type:
        - integer
        - 'null'
      example: null
    CreatedDate:
      type: string
      description: Creation date on Partoo
      format: datetime
      example: '2019-08-01T19:15:54.256000+02:00'
    UpdatedDate:
      type: string
      description: Last update date (either on Partoo or on Partner platform)
      format: datetime
      example: '2019-09-01T15:12:35.256000+02:00'
    GroupName:
      description: Group name
      type: string
      example: ComfyZone Paris
    GroupProvider:
      description: Group provider label
      type: string
      example: partoo
    Group:
      description: Partoo App Group
      type: object
      properties:
        id:
          $ref: '#/components/schemas/GroupId'
        org_id:
          $ref: '#/components/schemas/OrgId'
        parent_id:
          $ref: '#/components/schemas/GroupParentId'
        created:
          $ref: '#/components/schemas/CreatedDate'
        updated:
          $ref: '#/components/schemas/UpdatedDate'
        name:
          $ref: '#/components/schemas/GroupName'
        provider:
          $ref: '#/components/schemas/GroupProvider'
        subgroups:
          description: Subgroups of the group. A subgroup can not have subgroups
          type: array
          items:
            $ref: '#/components/schemas/GroupId'
    Subgroup:
      description: Partoo App Group with subgroup
      type: object
      properties:
        id:
          description: Group id
          type: integer
          example: 46
        org_id:
          $ref: '#/components/schemas/OrgId'
        parent_id:
          description: Group parent Id. If not null, it means it's a subgroup.
          type:
            - integer
            - 'null'
          example: 23
        created:
          $ref: '#/components/schemas/CreatedDate'
        updated:
          $ref: '#/components/schemas/UpdatedDate'
        name:
          description: Group name
          type: string
          example: SubComfyZone Paris
        provider:
          $ref: '#/components/schemas/GroupProvider'
    Group_with_subgroup:
      description: Partoo App Group with subgroup
      type: object
      properties:
        id:
          $ref: '#/components/schemas/GroupId'
        org_id:
          $ref: '#/components/schemas/OrgId'
        parent_id:
          $ref: '#/components/schemas/GroupParentId'
        created:
          $ref: '#/components/schemas/CreatedDate'
        updated:
          $ref: '#/components/schemas/UpdatedDate'
        name:
          $ref: '#/components/schemas/GroupName'
        provider:
          $ref: '#/components/schemas/GroupProvider'
        subgroup:
          description: Subgroups of the group. A subgroup can not have subgroups
          type: array
          items:
            $ref: '#/components/schemas/Subgroup'
    business_ids:
      description: List of business ids
      type: array
      example:
        - 5409c35a97bbc544d8e26737
        - 595badaef348ab6b3530033f
        - 59d53302b12ff6429f262639
      items:
        $ref: '#/components/schemas/BusinessId'
    Query:
      type: string
      description: Search business by name or address
      example: Partoo
    group_business_ids:
      description: List of business ids added to the group after applying all the filter
      type: array
      example:
        - 595badaef348ab6b3530033f
        - 59d53302b12ff6429f262639
      items:
        $ref: '#/components/schemas/BusinessId'
    GroupItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        has_puller:
          description: >-
            If the group is connected to an automated data puller or not. Groups
            linked to pullers cannot be modified or deleted. Should you want to
            make any changes to a group connected to a puller, please contact
            support for assistance.
          type: boolean
    SectionItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: ID of the section
        name:
          type: string
          example: Country
          description: Name of the section, must be unique
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupItem'
        can_edit:
          description: >-
            If the current user has the right to edit or delete the section, or
            one of the groups it contains
          type: boolean
        has_puller:
          description: >-
            If the section is connected to an automated data puller or not.
            Sections linked to pullers cannot be modified or deleted. Should you
            want to make any changes to a section connected to a puller, please
            contact support for assistance.
          type: boolean
    SectionsGetSuccessResponse:
      type: object
      properties:
        page:
          type: integer
          example: 1
        count:
          type: integer
          example: 6
        max_page:
          type: integer
          example: 1
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionItem'
    SectionName:
      description: >-
        Name of the section. Cannot include any of the following characters:
        `,;/`
      type: string
      example: Country
    SectionCreateOrgId:
      description: >-
        ID of the organization in which to create the section (only available to
        `PROVIDER` users)
      type: integer
      example: 1
    SectionCreateSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
            - success
        id:
          description: ID of the created section
          type: integer
          example: 1
    SectionCreateNameConflictResponse:
      type: object
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: object
              properties:
                name:
                  type: string
                  example: name_already_exists
    SectionCreateForbiddenCharactersResponse:
      type: object
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: object
              properties:
                name:
                  type: string
                  example: name_contains_forbidden_characters
    SectionUpdateSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
            - success
        id:
          description: ID of the updated section
          type: integer
          example: 1
    SectionDeleteSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
            - success
        id:
          description: ID of the deleted section
          type: integer
          example: 1
    GroupV2Name:
      description: 'Name of the group. Cannot include any of the following characters: `,;/`'
      type: string
      example: France
    GroupCreateSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
            - success
        id:
          description: ID of the created group
          type: integer
          example: 1
    GetGroupItem:
      type: object
      properties:
        id:
          description: ID of the group
          type: integer
          example: 1
        name:
          description: Name of the group, must be unique
          type: string
          example: France
        has_puller:
          description: >-
            If the group is linked to a puller. If so, it's not possible to
            delete the group. Should you want to make any changes to a group
            connected to a puller, please contact support for assistance.
          type: boolean
        business_ids:
          description: list of business ids in the group
          type: array
          items:
            $ref: '#/components/schemas/BusinessId'
          example:
            - a1f0e2d3b4c5e6f7a8b9c0d1
            - 3f2e1d4c5b6a7f8e9d0c1a2
            - 0e1d2c3b4a5f6e7d8c9a0b1
    GroupDeleteSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
            - success
        id:
          description: ID of the deleted group
          type: integer
          example: 1
    OrgName:
      description: Organization name
      type: string
      example: Fast Retailer
    OrgAlias:
      description: Organization alias (should match regex `[a-z0-9_]`)
      type: string
      example: fast_retailer
    OrgProvider:
      description: Organization provider
      type: string
      example: partoo
    OrgType:
      description: Organization type
      type: string
      enum:
        - small_medium_business
        - enterprise
      default: small_medium_business
    OrgHasGooglePost:
      deprecated: true
      description: >
        Organization has subscribed Google Post.

        Deprecated, please use <code>features</code> or
        <code>org_features</code> instead.
      type: boolean
    OrgDisplayGooglePost:
      deprecated: true
      description: >
        Organization can display Google Post

        Deprecated, please use <code>features</code> or
        <code>org_features</code> instead.
      type: boolean
    OrgFeatures:
      description: >
        List of organization's available features.

        Contains the features the organization can subscribe to as well as the
        ones only some businesses may have subscribed to additionally.
      type: array
      items:
        $ref: '#/components/schemas/Feature'
      example:
        - business_edition
        - diffusion
        - review_management
        - review_invite
        - messages
    OrgAvailableFeatures:
      description: |
        List of organization's features.
        Only contains the features the organization has subscribed to.
      type: array
      items:
        $ref: '#/components/schemas/Feature'
      example:
        - business_edition
        - diffusion
        - review_management
        - review_invite
        - messages
        - review_ai_suggestion
    OrgLastApiCall:
      description: >-
        Date of the last API call made with one of the API keys linked to the
        organization
      type: string
      example: 05-11-2021
    OrgMaxBusinesses:
      description: |
        Maximum number of local businesses the organization can have.
        It does not include the global (brand) businesses.
        If null, there is no limit for the organization.
        This field can only be set by a provider.
      type:
        - integer
        - 'null'
      example: 100
    Org:
      description: Organization
      type: object
      properties:
        org_id:
          $ref: '#/components/schemas/OrgId'
        name:
          $ref: '#/components/schemas/OrgName'
        alias:
          $ref: '#/components/schemas/OrgAlias'
        provider:
          $ref: '#/components/schemas/OrgProvider'
        type:
          $ref: '#/components/schemas/OrgType'
        has_google_post:
          $ref: '#/components/schemas/OrgHasGooglePost'
        display_google_post:
          $ref: '#/components/schemas/OrgDisplayGooglePost'
        features:
          $ref: '#/components/schemas/OrgFeatures'
        org_features:
          $ref: '#/components/schemas/OrgAvailableFeatures'
        last_org_api_call:
          $ref: '#/components/schemas/OrgLastApiCall'
        max_businesses:
          $ref: '#/components/schemas/OrgMaxBusinesses'
    OrganizationForceDeletion:
      description: >-
        Force the deletion of organization even if there are still users and
        business linked to it
      type: boolean
      default: false
    PlanUpdate:
      description: Plan
      type: object
      required:
        - name
      properties:
        name:
          type: string
          enum:
            - presence_management
            - review_management
            - posts
            - messages
            - review_booster
            - bulk_modification
            - feedback_management
            - partoo_smb
            - competitive_benchmark
            - messages_channel_sms
            - review_management_advanced
            - booking_links
            - webhooks
          description: Plan's name.
          example: presence_management
        expiration_date:
          type: string
          pattern: date
          description: Plan's expiration date. If not set, the plan is active indefinitely.
          example: '2026-01-01'
          default: null
    Plan:
      allOf:
        - $ref: '#/components/schemas/PlanUpdate'
      properties:
        subscription_date:
          type: string
          pattern: date
          description: Plan's subscription date.
          example: '2025-01-01'
    OrgPlans:
      properties:
        plans:
          description: The exhaustive list of the organization's plans.
          type: array
          items:
            $ref: '#/components/schemas/Plan'
          example:
            - name: presence_management
              subscription_date: '2025-01-01'
              expiration_date: '2026-01-01'
            - name: review_management
              subscription_date: '2025-01-01'
              expiration_date: null
    OrgPlansUpdate:
      properties:
        plans:
          description: The exhaustive list of the organization's plans.
          type: array
          items:
            $ref: '#/components/schemas/PlanUpdate'
          example:
            - name: presence_management
              expiration_date: '2026-01-01'
            - name: review_management
    postId:
      description: The Post id
      type: integer
      example: 34
    postType:
      type: string
      description: >-
        The type of the post to be created. Event and Offer are not yet
        available for Facebook.
      enum:
        - news
        - event
        - offer
        - covid
    postSummary:
      type: string
      description: Main text content of the post.
      example: Wonderful post summary !
    postImageURL:
      description: |
        URLs of the images displayed with the post.

        **Note:**
          - Add up to 10 images for multi-image post on Facebook and IG

          - Multi-image is not supported by Google, only the first image will be displayed

          - Image ratio must be between 4:5 and 16:9 for IG

          - All images must be same ratio for IG or they will be crop at the first image ratio by IG
      anyOf:
        - type: string
        - type: array
          items:
            type: string
      example:
        - https://example.com/1.png
        - https://example.com/2.png
    postMedias:
      description: The photo that will be on the Post
      type: array
      items:
        type: object
        properties:
          media_url:
            $ref: '#/components/schemas/postImageURL'
    postCreatedOnPartoo:
      description: Indicates whether or not the post was created using Partoo App/API
      type: boolean
      example: false
    postUpdatedOnPartoo:
      description: Indicates whether or not the post was updated using Partoo App/API
      type: boolean
      example: false
    postBusinessInfo:
      description: name and address of the business that the post is related to.
      type: string
      example: Rick - HQ - 157 boulevard Macdonald, Paris
    postPublisherPost:
      type: string
      description: Publisher related to the post
      enum:
        - google_my_business__posts
        - facebook__posts
      example: facebook__posts
    postInsight:
      description: >-
        Statistics related to the posts on the different platforms. </br> â ï¸ Due
        to a Google deprecation, on 20/02/2023, Google views and counts won't be
        available anymore. Old insights will still be sent. Facebook ones will
        still be available.
      type: array
      items:
        type: object
        properties:
          name:
            $ref: '#/components/schemas/postPublisherPost'
          click_count:
            type: integer
            description: number of times a user has clicked on the post.
            example: 1512
          view_count:
            type: integer
            description: number of times the post has been viewed.
            example: 2012
    postState:
      description: >-
        The state of the post, indicating at which lifecycle stage it is
        currently.
      type: string
      enum:
        - live
        - pending
        - to_configure
        - scheduled
        - error
        - expired
      example: live
    postCTALink:
      description: Link displayed in the post to redirect the client clicking on it.
      type: string
      example: www.partoo.co
    postStatus:
      description: Status related to the posts on the different platforms.
      type: array
      items:
        type: object
        properties:
          name:
            $ref: '#/components/schemas/postPublisherPost'
          state:
            $ref: '#/components/schemas/postState'
          link:
            $ref: '#/components/schemas/postCTALink'
    postOfferTerms:
      type: string
      description: Terms and conditions of the offer
      example: These are the conditions
    postCouponCode:
      type: string
      description: Offer code that is usable in store or online
      example: PROMO25
    postCTAType:
      description: The type of the post to be created. Some type mig.
      type: string
      enum:
        - book
        - order
        - shop
        - learn_more
        - sign_up
        - call
        - no_cta
    Post:
      description: Post
      type: object
      properties:
        id:
          $ref: '#/components/schemas/postId'
        business_id:
          $ref: '#/components/schemas/BusinessId'
        post_type:
          $ref: '#/components/schemas/postType'
        summary:
          $ref: '#/components/schemas/postSummary'
        schedule_time:
          description: >-
            Date when the Post will be published. No scheduled start time means
            that the Post will be published immediatly.
          type: string
          example: '2020-01-01T12:00:00+02:00'
          default: null
        post_medias:
          $ref: '#/components/schemas/postMedias'
        created_at:
          $ref: '#/components/schemas/CreatedDate'
        updated_at:
          $ref: '#/components/schemas/UpdatedDate'
        created_on_partoo:
          $ref: '#/components/schemas/postCreatedOnPartoo'
        updated_on_partoo:
          $ref: '#/components/schemas/postUpdatedOnPartoo'
        business_info:
          $ref: '#/components/schemas/postBusinessInfo'
        post_insight:
          $ref: '#/components/schemas/postInsight'
        post_status:
          $ref: '#/components/schemas/postStatus'
        offer_terms:
          $ref: '#/components/schemas/postOfferTerms'
        offer_code:
          $ref: '#/components/schemas/postCouponCode'
        cta_link:
          $ref: '#/components/schemas/postCTALink'
        cta_type:
          $ref: '#/components/schemas/postCTAType'
    PostBusinessSearch:
      description: Business to create post
      type: object
      required:
        - business__in
      properties:
        business__in:
          type: array
          items:
            $ref: '#/components/schemas/business_ids'
    PostPublishers:
      description: List of publisher to diffuse the post
      type: array
      items:
        type: string
        enum:
          - google_my_business
          - facebook
          - instagram
      example:
        - google_my_business
        - facebook
        - instagram
    postTitle:
      type: string
      description: Title of the post.
      example: Great post title !
    postLink:
      description: >-
        Link displayed in the post to redirect the client clicking on it. Use
        can only have one of the following parameters ('use_business_url' or
        'custom_url').
      type: object
      properties:
        use_business_url:
          type: boolean
          description: Use the business google url for link on the post.
        custom_url:
          type: string
          description: An URL to redirect client when they click on the button
    postScheduleTime:
      type: string
      description: >-
        Date and time of when the post will be diffused corresponding platforms.
        It needs to be at least 2 hours after the time of the request. The
        timezone used is UTC.
      example: '2050-01-01T09:00:00'
    postStartAt:
      type: string
      description: >-
        For either event or offer post type. Defined when it start. Timezone is
        defined by the business timezone.
      example: '2050-01-01T09:00:00'
    postEndAt:
      type: string
      description: >-
        For either event or offer post type. Defined when it end. Timezone is
        defined by the business timezone.
      example: '2050-01-01T09:00:00'
    PostData:
      description: Information on post to create
      type: object
      required:
        - post_type
        - summary
      properties:
        post_type:
          $ref: '#/components/schemas/postType'
        summary:
          $ref: '#/components/schemas/postSummary'
        image_url:
          $ref: '#/components/schemas/postImageURL'
        title:
          $ref: '#/components/schemas/postTitle'
        cta_type:
          $ref: '#/components/schemas/postCTAType'
        link:
          $ref: '#/components/schemas/postLink'
        schedule_time:
          $ref: '#/components/schemas/postScheduleTime'
        coupon_code:
          $ref: '#/components/schemas/postCouponCode'
        offer_terms:
          $ref: '#/components/schemas/postOfferTerms'
        start_at:
          $ref: '#/components/schemas/postStartAt'
        end_at:
          $ref: '#/components/schemas/postEndAt'
    requestResponsePost:
      properties:
        status:
          description: Request status
          type: string
          enum:
            - success
        code:
          description: Request code
          type: number
          example: 200
        message:
          description: Number of post(s) created
          type: string
          example: 2 posts have been created.
        ids:
          deprecated: true
          description: Id(s) of post(s) created
          type: string
          example: 45,46
        data:
          description: Post ID and relative business ID pair list
          type: array
          items:
            type: object
            properties:
              post_id:
                type: integer
              business_id:
                type: string
          example:
            - post_id: 101
              business_id: '1234567890'
            - post_id: 102
              business_id: '1234567891'
    PostUpdateData:
      description: Request body to update a Post
      type: object
      properties:
        title:
          $ref: '#/components/schemas/postTitle'
        summary:
          $ref: '#/components/schemas/postSummary'
        image_url:
          $ref: '#/components/schemas/postImageURL'
        cta_type:
          $ref: '#/components/schemas/postCTAType'
        link:
          $ref: '#/components/schemas/postLink'
        schedule_time:
          $ref: '#/components/schemas/postScheduleTime'
        start_at:
          $ref: '#/components/schemas/postStartAt'
        end_at:
          $ref: '#/components/schemas/postEndAt'
        coupon_code:
          $ref: '#/components/schemas/postCouponCode'
        offer_terms:
          $ref: '#/components/schemas/postOfferTerms'
    GetPlaceActionLinks.Array:
      description: List of available Place Action Links
      type: array
      items:
        type: object
        properties:
          gmb_id:
            type: string
            description: The Google My Business ID for the place action type.
          name:
            type: string
            description: The name for the place action type.
      example:
        - gmb_id: APPOINTMENT
          name: Appointment links
        - gmb_id: DINING_RESERVATION
          name: Reservations links
        - gmb_id: FOOD_DELIVERY
          name: Food delivery links
        - gmb_id: FOOD_ORDERING
          name: Food ordering links
        - gmb_id: FOOD_TAKEOUT
          name: Food takeout links
        - gmb_id: ONLINE_APPOINTMENT
          name: Online appointment links
        - gmb_id: SHOP_ONLINE
          name: Shop Online links
    GetPlaceActionLinksResponse:
      type: object
      properties:
        place_action_links:
          $ref: '#/components/schemas/GetPlaceActionLinks.Array'
    state:
      type: string
      enum:
        - success
        - pending
        - to_configure
      example: success
    error_type:
      type:
        - string
        - 'null'
      enum:
        - PUBLISHER_CONNEXION
        - USER_INPUT
        - EXTERNAL
        - null
    publisher_state_state:
      type: object
      properties:
        error_type:
          $ref: '#/components/schemas/error_type'
        state:
          type: string
        url_on_publisher:
          type:
            - string
            - 'null'
    publisher_state_type:
      type: object
      properties:
        business_formatted_address:
          type: string
        business_id:
          type: string
        business_name:
          type: string
        publishers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/publisher_state_state'
    getPublisherStatesResponse:
      type: object
      properties:
        businesses:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/publisher_state_type'
        count:
          type: integer
          description: number of businesses returned in response
          example: 1
    postPublisherErrorsResponse:
      type: object
      description: >
        This response structure identifies and details errors detected by
        publishers in specific sections and fields of business information
        edits. It is organized to clearly indicate which publisher reported an
        error for a particular piece of business information, along with a
        specific error code or message identifier.
      additionalProperties:
        type: object
        description: >
          Denotes a particular section of the business edit process, such as
          'hours' or 'description', where a publisher has identified an error.
          Each section can contain one or more fields.
        additionalProperties:
          type: object
          description: >
            Specifies the exact field within a business section, like
            'open_hours' or 'description_short', where the error was detected.
            This allows for pinpointing specific areas within business
            information that require attention.
          additionalProperties:
            type: string
            description: >
              A mapping of publisher names to their corresponding error
              identifiers for the given field. Each key in this object is a
              publisher's name, and its value is a string representing a unique
              error code or message key, such as 'name_has_more_than_90_char'
              for overly long names or 'description_short_too_long' for
              descriptions exceeding allowable length. This structure supports
              detailing multiple errors across various publishers for a single
              business information field.
    ReviewPublisherLabel:
      type: string
      description: Publisher label
      enum:
        - google_my_business
        - facebook
        - tripadvisor
    ReviewState:
      type: string
      description: Reply state
      enum:
        - treated
        - not_treated
        - deleted
    TagLabel:
      description: >
        The label of the tag

        Must be <= 30 characters and cannot contain a comma (commas will be
        ignored)
      type: string
      example: food
    ReviewId:
      type: integer
      description: Review id
      example: 34
    ReviewPublisherId:
      type: string
      description: Review id on publisher
      example: accounts/114063712393225091258/locations/74805271119400652054
    ReviewAuthorName:
      type: string
      description: |
        The author name of the review.

        **Note:** Replies don't have an author.
      example: Castorche
    ReviewCreateDate:
      type: string
      description: Review creation date
      format: datetime
      example: '2017-07-01T16:10:23.156000+02:00'
    ReviewUpdateDate:
      type: string
      description: Review update date
      format: datetime
      example: '2017-08-01T19:15:54.256000+02:00'
    ReviewDeleteDate:
      type: string
      description: Review deletion date
      format: datetime
    ReviewRating:
      type: integer
      description: Review rating (can be null)
      maximum: 5
      minimum: 0
      example: 3
    ReviewRecommended:
      type: boolean
      description: Review recommended (can be null)
    ReviewTitle:
      type: string
      description: Review title
    ReviewBody:
      type: string
      description: Review body content
      example: >-
        Magasin un peu vieillot , mais personnel trÃ¨s sympathique, nombreuses
        rÃ©fÃ©rences en rayons , un trÃ¨s bon choix cÃ´tÃ© vin...
    ReviewLink:
      type: string
      format: uri
      description: Link to review on publisher platform
    CommentId:
      type: integer
      description: Comment id
      example: 82938
    CommentBody:
      type: string
      description: Reply content
      example: Merci â¤ï¸
    ParentId:
      type: integer
      description: |
        id of the parent comment.
        Is only specified if the comment is a reply to another comment

        **Note:** This applies on Facebook replies only.
    Comment:
      description: Reply to a review
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CommentId'
        partner_id:
          $ref: '#/components/schemas/ReviewPublisherId'
        created:
          $ref: '#/components/schemas/CreatedDate'
        author_name:
          $ref: '#/components/schemas/ReviewAuthorName'
        content:
          $ref: '#/components/schemas/CommentBody'
        date:
          type: string
          description: Comment date
          format: datetime
          example: '2017-08-01T19:15:54.256000+02:00'
        update_date:
          type: string
          format: datetime
          description: |
            Comment update date. Only specified if the comment was updated
          example: '2017-08-01T19:15:54.256000+02:00'
        can_edit:
          type: boolean
          description: |
            If the current user can or cannot edit a reply

            **Note:** This applies on Facebook replies only.
            A reply left by an external user on Facebook cannot be edited.
          example: true
        review_id:
          $ref: '#/components/schemas/ReviewId'
        parent_id:
          $ref: '#/components/schemas/ParentId'
        user_id:
          type: string
          description: |
            User id of the comment author
          example: 123456789abcdef2f60c42ff
        is_reply_suggestion:
          type: boolean
          description: |
            If AI reply suggestion was used to generate this comment
        replies:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          description: |
            List of replies to this comment
    TagId:
      description: Tag id
      type: integer
      example: 25
    TagColor:
      description: The color of the tag, in hexadecimal representation
      type: string
      enum:
        - '#808080'
        - '#9B7CDB'
        - '#F47FBE'
        - '#4D4D4D'
        - '#9E6957'
        - '#2F8DE4'
        - '#37CED0'
        - '#53C944'
        - '#B1DA34'
        - '#F78234'
        - '#F4BD38'
        - '#992842'
      example: '#808080'
    Tag:
      description: Tag
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TagId'
        label:
          description: The label of the tag
          allOf:
            - $ref: '#/components/schemas/TagLabel'
        color:
          $ref: '#/components/schemas/TagColor'
    Review:
      description: Business Review on partner
      type: object
      properties:
        key:
          type: string
        org_id:
          $ref: '#/components/schemas/OrgId'
        id:
          $ref: '#/components/schemas/ReviewId'
        business_id:
          $ref: '#/components/schemas/BusinessId'
        partner:
          $ref: '#/components/schemas/ReviewPublisherLabel'
        partner_id:
          $ref: '#/components/schemas/ReviewPublisherId'
        author_name:
          $ref: '#/components/schemas/ReviewAuthorName'
        date:
          $ref: '#/components/schemas/ReviewCreateDate'
        update_date:
          $ref: '#/components/schemas/ReviewUpdateDate'
        delete_date:
          $ref: '#/components/schemas/ReviewDeleteDate'
        rating:
          $ref: '#/components/schemas/ReviewRating'
        recommended:
          $ref: '#/components/schemas/ReviewRecommended'
        title:
          $ref: '#/components/schemas/ReviewTitle'
        content:
          $ref: '#/components/schemas/ReviewBody'
        state:
          $ref: '#/components/schemas/ReviewState'
        link:
          $ref: '#/components/schemas/ReviewLink'
        comments:
          $ref: '#/components/schemas/Comment'
        tags:
          type: array
          description: Tags associated to the review
          items:
            $ref: '#/components/schemas/Tag'
    TemplateId:
      type: integer
      description: Template id
      example: 34
    TemplateUpdateDate:
      type: string
      description: Template update date
      format: datetime
      example: '2017-08-01T19:15:54.256000+02:00'
    TemplateCreationDate:
      type: string
      description: Template creation date
      format: datetime
      example: '2017-08-01T19:15:54.256000+02:00'
    TemplateTitle:
      type: string
      description: Template title
    TemplateText:
      description: >
        The content of the reply template.


        Placeholders are recognisable within the text by this exact markup
        `@[](name_of_the_placeholder)`.

        Where `name_of_the_placeholder` is the `value` field taken from the `GET
        placeholders` operation.


        Example of usable placeholder values: `client_full_name`,
        `client_first_name`, `business_name`, `my_first_name`.
      type: string
      example: |-
        hello @[](client_full_name),
        Thanks from the team at @[](business_name).
        @[](my_first_name)
    TemplateNegative:
      type: boolean
      description: Template is made for negative reviews (ex from 1 to 2 stars on gmb)
    TemplateNeutral:
      type: boolean
      description: Template is made for neutral reviews (ex 3 stars on gmb)
    TemplatePositive:
      type: boolean
      description: Template is made for positive reviews (ex from 4 to 5 stars on gmb)
    Template:
      description: Review's reply tempate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TemplateId'
        org_id:
          $ref: '#/components/schemas/OrgId'
        update_date:
          $ref: '#/components/schemas/TemplateUpdateDate'
        creation_date:
          $ref: '#/components/schemas/TemplateCreationDate'
        language:
          $ref: '#/components/schemas/Lang'
        title:
          $ref: '#/components/schemas/TemplateTitle'
        text:
          $ref: '#/components/schemas/TemplateText'
        negative:
          $ref: '#/components/schemas/TemplateNegative'
        neutral:
          $ref: '#/components/schemas/TemplateNeutral'
        positive:
          $ref: '#/components/schemas/TemplatePositive'
    TemplatePlaceholder:
      description: >
        Reply tempates available placeholders.

        A template placeholder is a dynamically updated word depending on the
        context.
      type: object
      properties:
        id:
          type: integer
          description: Placeholder id
          example: 2
        value:
          type: string
          description: >
            Placeholder value


            This value must be used within the placeholder markup
            `@[](placeholder_value)` in a template `text` in order to work
            properly.
          example: my_first_name
    BusinessID:
      description: Business id
      type: string
      example: 5409c35a97bbc544d8e26737
    TotalItemsCount:
      description: >
        Total number of results available for the filters and dimensions
        requested.
      type: integer
      example: 1
    BusinessImpressionsDesktopMaps:
      type: integer
      description: |
        Business impressions on Google Maps on Desktop devices.
         Multiple impressions by a unique user within a single day are
         counted as a single impression.
      example: 123
    BusinessImpressionsMobileMaps:
      type: integer
      description: |
        Business impressions on Google Maps on Mobile devices.
         Multiple impressions by a unique user within a single
          day are counted as a single impression.
      example: 123
    BusinessImpressionsDesktopSearch:
      type: integer
      description: |
        Business impressions on Google Search on Desktop devices.
         Multiple impressions by a unique user within a single day
         are counted as a single impression.
      example: 123
    BusinessImpressionsMobileSearch:
      type: integer
      description: |
        Business impressions on Google Search on Mobile devices.
         Multiple impressions by a unique user within a single day
         are counted as a single impression.
      example: 123
    BusinessDirectionRequests:
      type: integer
      description: |
        The number of times a direction request was requested to the
         business location.
      example: 123
    ActionsPhone:
      type: integer
      description: Customers who call your business
      example: 123
    ActionsWebsite:
      type: integer
      description: Customers who click on your website link
      example: 123
    AnalyticsDate:
      type: string
      description: First day of the aggregation
      example: '2019-11-05'
    AnalyticsBucket:
      type: string
      description: Time aggregation requested
      example: day
    PresenceAnalyticsMetricsResults:
      type: array
      items:
        type: object
        properties:
          business_impressions_desktop_maps:
            $ref: '#/components/schemas/BusinessImpressionsDesktopMaps'
          business_impressions_mobile_maps:
            $ref: '#/components/schemas/BusinessImpressionsMobileMaps'
          business_impressions_desktop_search:
            $ref: '#/components/schemas/BusinessImpressionsDesktopSearch'
          business_impressions_mobile_search:
            $ref: '#/components/schemas/BusinessImpressionsMobileSearch'
          business_direction_requests:
            $ref: '#/components/schemas/BusinessDirectionRequests'
          call_clicks:
            $ref: '#/components/schemas/ActionsPhone'
          website_clicks:
            $ref: '#/components/schemas/ActionsWebsite'
          date:
            $ref: '#/components/schemas/AnalyticsDate'
          bucket:
            $ref: '#/components/schemas/AnalyticsBucket'
          business_id:
            $ref: '#/components/schemas/BusinessID'
    PresenceAnalyticsMetricsResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/Page'
        count:
          $ref: '#/components/schemas/TotalItemsCount'
        max_page:
          $ref: '#/components/schemas/MaxPage'
        metrics:
          $ref: '#/components/schemas/PresenceAnalyticsMetricsResults'
    Keyword:
      type: string
      description: |
        The lower-cased string that the user entered.

        This is present only if the âkeywordâ dimension is in the request.
      example: 123
    types_Count:
      type: integer
      description: >
        An aggregation of mountly keyword search count values.


        The count values indicates the number of unique users that used the
        keyword in a month.
      example: 123
    Threshold:
      type: integer
      description: >
        An aggregation of monthly threshold values.


        The threshold value indicates that the real count of unique users that
        used the keyword is below this value.
      example: 123
    types_AnalyticsDate:
      type: string
      description: First day of the aggregation
      example: '2019-11-01'
    types_AnalyticsBucket:
      type: string
      description: Time aggregation requested
      example: month
    PresenceAnalyticsKeywordsResults:
      type: array
      items:
        type: object
        properties:
          keyword:
            $ref: '#/components/schemas/Keyword'
          count:
            $ref: '#/components/schemas/types_Count'
          threshold:
            $ref: '#/components/schemas/Threshold'
          date:
            $ref: '#/components/schemas/types_AnalyticsDate'
          bucket:
            $ref: '#/components/schemas/types_AnalyticsBucket'
          business_id:
            $ref: '#/components/schemas/BusinessID'
    PresenceAnalyticsKeywordsResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/Page'
        count:
          $ref: '#/components/schemas/TotalItemsCount'
        max_page:
          $ref: '#/components/schemas/MaxPage'
        keywords:
          $ref: '#/components/schemas/PresenceAnalyticsKeywordsResults'
    GroupID:
      description: Business id
      type: integer
      example: 12312
    TagID:
      description: Tag id
      type: integer
      example: 10,12,44
    ReviewMetricsResponse:
      type: object
      required:
        - dimension
        - metrics
      properties:
        dimension:
          oneOf:
            - type: string
            - type: number
            - type: 'null'
          description: >
            Unique identifier of the dimension:

            - <small>string</small> when `dimensions` is `business`, `user`,
            `day`, `week`, `month`, `year`.

            - <small>number</small> when `dimensions` is `group` or `tag`.

            - <small>null</small> when `dimensions` is not set.


            When `dimensions` is `day` or `week`, the format is `YYYY-MM-DD`<br>

            When `dimensions` is `month`, the format is `YYYY-MM`<br>

            When `dimensions` is `year`, the format is `YYYY`
          example: 59b2645db12ff60643ef832c
        metrics:
          type: object
          properties:
            average_rating:
              type: number
              format: float
              description: Average rating.
            average_rating_distribution:
              type: object
              description: |
                Number of businesses within each pre-defined ratings.
              properties:
                'NULL':
                  type: number
                  format: integer
                  description: Number of businesses without any average rating.
                0-3:
                  type: number
                  format: integer
                  description: >-
                    Number of businesses whose rating is between 0 and 3
                    (excluded).
                3-3.8:
                  type: number
                  format: integer
                  description: >-
                    Number of businesses whose rating is between 3 (included)
                    and 3.8 (excluded).
                3.8-4.3:
                  type: number
                  format: integer
                  description: >-
                    Number of businesses whose rating is between 3.8 (included)
                    and 4.3 (excluded).
                4.3-5:
                  type: number
                  format: integer
                  description: >-
                    Number of businesses whose rating is between 4.3 (included)
                    and 5.
            rank:
              type: number
              format: integer
              description: >
                Rank of the dimension compared to the others, based on the
                specified `order_by` parameter.


                **Note:** Two results with the same metrics value will have the
                same rank.
            rating_distribution:
              type: object
              properties:
                '1':
                  type: number
                  format: integer
                  description: Number of 1 star reviews.
                '2':
                  type: number
                  format: integer
                  description: Number of 2 star reviews.
                '3':
                  type: number
                  format: integer
                  description: Number of 3 star reviews.
                '4':
                  type: number
                  format: integer
                  description: Number of 4 star reviews.
                '5':
                  type: number
                  format: integer
                  description: Number of 5 star reviews.
            reply_means:
              type: object
              properties:
                ai_suggestion:
                  type: number
                  format: integer
                  description: Number of reviews replied using an AI suggestion.
                auto_reply:
                  type: number
                  format: integer
                  description: Number of reviews replied using the auto reply.
                manual:
                  type: number
                  format: integer
                  description: >-
                    Number of reviews replied manually (without an AI suggestion
                    nor a reply template).
                reply_template:
                  type: number
                  format: integer
                  description: >-
                    Number of reviews replied using a reply template (excluding
                    auto replies).
                total:
                  type: number
                  format: integer
                  description: >-
                    Total (ai_suggestion + auto_reply + manual +
                    reply_template).
            reply_time:
              type: object
              properties:
                fast:
                  type: number
                  format: integer
                  description: Number of reviews replied in less than 2 days
                slow:
                  type: number
                  format: integer
                  description: Number of reviews replied in more than 2 days
                not_replied:
                  type: number
                  format: integer
                  description: Number of reviews not replied
                total:
                  type: number
                  format: integer
                  description: Total (fast + slow + not_replied)
            reviews_count:
              type: number
              format: integer
              description: Number of reviews
        dimension_name:
          type: string
          description: |
            Name of the dimension:
            - Business name when `dimensions` is `business`
            - Group name when `dimensions` is `group`
            - Tag name when `dimensions` is `tag`
            - User full name when `dimensions` is `user`
            - Not present in the response otherwise
        dimension_info:
          type: object
          description: |
            Additional info about the dimension.

            Only returned when `dimensions` is `business`.
          properties:
            address_full:
              $ref: '#/components/schemas/AddressFull'
            city:
              $ref: '#/components/schemas/BusinessCity'
            code:
              $ref: '#/components/schemas/BusinessCode'
            zipcode:
              $ref: '#/components/schemas/BusinessZipcode'
    ReviewsStatisticsResponse:
      type: object
      properties:
        answer_time:
          type: number
          format: float
          description: >
            Average reviews answer time in seconds. Only measured for reviews
            with a comment from Google

            partner.

            It returns the time between the update date of a review and the
            creation date of its comments.
          example: 10493.90997409
        average:
          type: number
          format: float
          description: |
            Average reviews rating.
          maximum: 5
          minimum: 0
          example: 3.0394
        treated:
          type: number
          format: integer
          description: |
            Total number of treated reviews.
          example: 9
        not_treated:
          type: number
          format: integer
          description: |
            Total number of non treated reviews.
          example: 10
        answered:
          type: number
          format: integer
          description: |
            Total number of answered reviews (reviews with a comment).
          example: 8
        satisfied:
          type: number
          format: integer
          description: >
            Total number of reviews of type *satisfied*.


            *Satisfied* reviews are defined by a rating of 4 or more for
            google_my_business and tripadvisor or recommended

            for facebook.
          example: 10
        neutral:
          type: number
          format: integer
          description: >
            Total number of reviews of type *neutral*.


            *Neutral* reviews are defined by a rating of 3 for
            google_my_business and tripadvisor.
          example: 6
        dissatisfied:
          type: number
          format: integer
          description: >
            Total number of reviews of type *dissatisfied*.


            *Dissatisfied* reviews are defined by a rating of 2 or less for
            google_my_business and tripadvisor

            or not recommended for facebook.
          example: 3
        total:
          type: number
          format: integer
          description: |
            Total number of reviews.
          example: 19
    InvitationId:
      description: invitation id
      type: string
      example: d3d8c966-0356-4ec0-baae-13ec3622ebc2
    TargetPhone:
      type: string
      description: the exact phone number we would have sent the invitation(s) to
      example: '0701020304'
    UserStatus:
      description: User status in the application
      type: string
      enum:
        - active
        - invited
      example: active
    UserOrgId:
      description: User organization id
      type: integer
      example: 42
    UserFirstName:
      description: User first name
      type: string
      example: Perceval
    UserLastName:
      description: User last name
      type: string
      example: de Galles
    UserEmail:
      description: User email
      type: string
      format: email
      example: perceval@kaamelott.com
    UserPhone:
      description: User phone number
      type: string
    accesses:
      description: >
        List of (list of Group ID).


        Accesses of the users for the new groups system, only for
        <code>GROUP_MANAGER</code> users.


        See <a href="#tag/Groups-and-Sections-NEW">the Groups and Sections
        description</a>
      type: array
      items:
        type: array
        items:
          type: integer
      example:
        - - 1
          - 2
        - - 1
          - 3
    UserProvider:
      description: User provider label
      type: string
      example: partoo
    Keywords:
      description: Array of keywords
      type: array
      maxItems: 12
      items:
        type: string
    SsoOnly:
      description: >
        <p>Prevent the user from connecting directly from Partoo connexion page.

        <p>This field is available for users which organization has defined an
        SSO configuration.

        <p>This field can be edited by a user with role <code>ORG_ADMIN</code>
        or <code>PROVIDER</code>.
      type: boolean
      default: false
    User:
      description: Partoo App User
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        org_id:
          $ref: '#/components/schemas/UserOrgId'
        first_name:
          $ref: '#/components/schemas/UserFirstName'
        last_name:
          $ref: '#/components/schemas/UserLastName'
        email:
          $ref: '#/components/schemas/UserEmail'
        lang:
          $ref: '#/components/schemas/Lang'
        phone:
          $ref: '#/components/schemas/UserPhone'
        sidebar_products:
          deprecated: true
          description: >
            The products the user has access to.

            Deprecated, please use <code>available_features</code> instead (not
            returned for this endpoint, but can be found in
            [operation/getUser](https://developers.partoo.co/rest_api/v2/#operation/getUser)
            and
            [operation/getMyUser](https://developers.partoo.co/rest_api/v2/#operation/getMyUser)).
          type: array
          items:
            $ref: '#/components/schemas/Product'
        business_ids:
          description: >
            Populated only for BUSINESS_MANAGER role.


            List of businesses ids the user can access.


            Note: For a reliable way of getting all the businesses the user can
            access, use
            [operation/searchBusinesses](https://developers.partoo.co/rest_api/v2/#operation/searchBusinesses).
          type: array
          items:
            $ref: '#/components/schemas/BusinessId'
        group_id:
          description: >-
            Group id of the user (it affects only the group manager), for the
            old group system
          type: integer
          example: 42
          deprecated: true
        accesses:
          $ref: '#/components/schemas/accesses'
        role:
          $ref: '#/components/schemas/Role'
        provider:
          $ref: '#/components/schemas/UserProvider'
        status:
          $ref: '#/components/schemas/UserStatus'
        keywords:
          $ref: '#/components/schemas/Keywords'
        created_at:
          description: Timestamp representing the date the user was created
          type: number
          example: 1615299414
        shadow_user_id:
          description: Used internally at Partoo
          type: string
          example: ''
        sso_only:
          $ref: '#/components/schemas/SsoOnly'
    SidebarPagesFeatureEnum:
      enum:
        - bulk_modification
        - diffusion
        - feedback_management
        - messages
        - posts
        - presence_analytics
        - review_analytics
        - review_invite
        - review_management
    SidebarPages:
      type: array
      description: |
        List of features the user can access from the sidebar.
      items:
        allOf:
          - $ref: '#/components/schemas/SidebarPagesFeatureEnum'
        type: string
        description: Sidebar page feature name
    UserWithFeatures:
      description: Partoo App User
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        org_id:
          $ref: '#/components/schemas/UserOrgId'
        first_name:
          $ref: '#/components/schemas/UserFirstName'
        last_name:
          $ref: '#/components/schemas/UserLastName'
        email:
          $ref: '#/components/schemas/UserEmail'
        lang:
          $ref: '#/components/schemas/Lang'
        phone:
          $ref: '#/components/schemas/UserPhone'
        sidebar_products:
          deprecated: true
          description: >-
            The products the user has access to. Deprecated, please use
            <code>available_features</code> instead.
          type: array
          items:
            $ref: '#/components/schemas/Product'
        sidebar_pages:
          $ref: '#/components/schemas/SidebarPages'
        available_features:
          description: The features the user has access to.
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        business_ids:
          description: >
            Populated only for BUSINESS_MANAGER role.


            List of businesses ids the user can access.


            Note: For a reliable way of getting all the businesses the user can
            access, use
            [operation/searchBusinesses](https://developers.partoo.co/rest_api/v2/#operation/searchBusinesses).
          type: array
          items:
            $ref: '#/components/schemas/BusinessId'
        group_id:
          description: >-
            Group id of the user (it affects only the group manager), for the
            old group system
          type: integer
          example: 42
          deprecated: true
        accesses:
          $ref: '#/components/schemas/accesses'
        role:
          $ref: '#/components/schemas/Role'
        provider:
          $ref: '#/components/schemas/UserProvider'
        status:
          $ref: '#/components/schemas/UserStatus'
        keywords:
          $ref: '#/components/schemas/Keywords'
        created_at:
          description: Timestamp representing the date the user was created
          type: number
          example: 1615299414
        shadow_user_id:
          description: Used internally at Partoo
          type: string
          example: ''
        sso_only:
          $ref: '#/components/schemas/SsoOnly'
    RoleWithoutProvider:
      description: User role in the application
      type: string
      enum:
        - ORG_ADMIN
        - GROUP_MANAGER
        - BUSINESS_MANAGER
        - PUBLISHER
      example: BUSINESS_MANAGER
    Password:
      description: |
        The User password. It should comply with the following rules:
        - should be at least 8 characters long
        - should have one upper case letter and one lower case letter
        - should have one special character
      type: string
      format: password
      minLength: 8
    DailyReviewPreferences:
      description: Daily report preferences
      type: object
      properties:
        partners:
          description: list of partners to receive daily reviews notifications from.
          type: array
          items:
            description: >-
              The partner to receive daily reviews notification from.
              "facebook", "google_my_business" or "tripadvisor"
            type: string
            enum:
              - facebook
              - google_my_business
              - tripadvisor
          example:
            - facebook
            - google_my_business
            - tripadvisor
        review_type:
          description: >-
            Review type. 1 to receive negative reviews, 2 for negative and
            neutral reviews, 3 for all reviews.
          type: integer
          enum:
            - 1
            - 2
            - 3
          example: 2
    UserReports:
      description: Daily, weekly and monthly reports preferences
      type: object
      properties:
        review_management_daily:
          description: The user's preference on receiving a daily review management email.
          type: boolean
        review_management_weekly:
          description: The user's preference on receiving a weekly review management email.
          type: boolean
        review_management_monthly:
          description: >-
            The user's preference on receiving a monthly review management
            email.
          type: boolean
        daily_review_preferences:
          $ref: '#/components/schemas/DailyReviewPreferences'
    ReceiveNegativeReviewsEmailNotifications:
      description: Receive a notification when there is a negative review.
      type: boolean
    BusinessVideos:
      description: Business videos URLs
      deprecated: true
      type: array
      items:
        type: string
        format: uri
    News:
      deprecated: true
      type: object
      required:
        - title
        - description
      properties:
        description:
          type: string
          description: News description
    BusinessNews:
      deprecated: true
      type: array
      items:
        $ref: '#/components/schemas/News'
    Business:
      description: Partoo App Business
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BusinessId'
        created:
          description: Timestamp (in seconds) of the business creation
          type: number
          format: float
          example: 1409925979.5
        modified:
          description: >-
            Timestamp (in seconds) of the business last modification. It doesnât
            take into account changes to the Custom Fields or related objects.
          type: number
          format: float
          example: 1561335111.681374
        code:
          $ref: '#/components/schemas/BusinessCode'
        status:
          $ref: '#/components/schemas/BusinessStatus'
        org_id:
          $ref: '#/components/schemas/BusinessOrgId'
        group_id:
          $ref: '#/components/schemas/GroupId'
        name:
          $ref: '#/components/schemas/BusinessName'
        address:
          description: >-
            Business address. This fields returns the same value as the field
            `address_full` for historical reasons. You should prefer the use
            `address_full`.
          type: string
        address_full:
          $ref: '#/components/schemas/AddressFull'
        address2:
          $ref: '#/components/schemas/Address2'
        city:
          $ref: '#/components/schemas/BusinessCity'
        zipcode:
          $ref: '#/components/schemas/BusinessZipcode'
        region:
          $ref: '#/components/schemas/BusinessRegion'
        country:
          $ref: '#/components/schemas/BusinessCountry'
        default_lang:
          $ref: '#/components/schemas/BusinessDefaultLang'
        open_hours:
          $ref: '#/components/schemas/OpenHours'
        specific_hours:
          $ref: '#/components/schemas/SpecificHours'
        description_short:
          $ref: '#/components/schemas/BusinessShortDescription'
        description_long:
          $ref: '#/components/schemas/BusinessLongDescription'
        website_url:
          $ref: '#/components/schemas/BusinessWebsite'
        facebook_url:
          $ref: '#/components/schemas/BusinessFacebookPage'
        twitter_url:
          $ref: '#/components/schemas/BusinessTwitter'
        google_location_id:
          description: Id of Google Location to which the business is linked
          type: string
        facebook_page_id:
          description: Id of Facebook Location to which the business is linked
          type: string
        national_identification_number:
          $ref: '#/components/schemas/BusinessNationalIdentificationNumber'
        logo_url:
          description: Business LOGO URL
          type: string
          format: uri
        contacts:
          $ref: '#/components/schemas/BusinessContacts'
        photos:
          $ref: '#/components/schemas/Photos'
        lat:
          $ref: '#/components/schemas/Latitude'
        long:
          $ref: '#/components/schemas/Longitude'
        subscriptions:
          $ref: '#/components/schemas/Subscriptions'
        features:
          $ref: '#/components/schemas/Features'
        videos:
          $ref: '#/components/schemas/BusinessVideos'
        siret:
          deprecated: true
          description: Business SIRET (for french businesses)
          type: string
        completion_rate:
          $ref: '#/components/schemas/BusinessCompletionRate'
        news:
          $ref: '#/components/schemas/BusinessNews'
        promos:
          $ref: '#/components/schemas/BusinessPromos'
    feedback_form:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the form
          example: 674d791c13c9d976e20001b1
        org_id:
          type: integer
          description: The organization ID that the form is for
          example: 42
        email_reply_source:
          type:
            - string
            - 'null'
          description: The source email to use when replying to a feedback
          example: noreply@example.com
        email_reply_subject:
          type:
            - string
            - 'null'
          description: The subject of the email used when replying to a feedback
          example: About your feedback
        email_reply_to_business:
          type: boolean
          default: false
          description: >
            Whether to use the business email address when the feedback

            respondent wants to reply to your reply


            Defaults to false, which means the respondent reply will be sent to
            the email_reply_source
        email_reply_expeditor_name:
          type:
            - string
            - 'null'
          description: >
            Name to use as the expeditor when replying to a feedback


            This is the name the user sees in his email inbox (which is by
            default the email_reply_source)
          example: MyCompany
        expiration_interval_seconds:
          type: integer
          default: 1209600
          description: >
            When a date parameter is set on the link sent to the customer,

            this will be used to disable answers to the feedback form after that
            many seconds


            Does nothing when the date parameter is not used on the link sent to
            the customer


            Defaults to 2 weeks


            Example: In the link you sent the customer, you set the date
            parameter to 2025-01-01T00:00:00Z.

            By default, the customer will no longer be able to answer the survey
            after 2025-01-15T00:00:00Z.
        display_name:
          type: string
          description: Name of your form
          example: Global Satisfaction
    display_name:
      type: string
      description: Name of your form
      example: Global Satisfaction
    feedback_result-state:
      type: string
      enum:
        - treated
        - not_treated
      description: State of the feedback result
    nps:
      type: integer
      minimum: 0
      maximum: 10
      description: NPS of the feedback result
      example: 9
    feedback_form-id:
      type: string
      description: The unique identifier of the form
      example: 674d791c13c9d976e20001b1
    properties-id:
      type: string
      description: Unique identifier of the form
      example: 674d791c13c9d976e20001b1
    feedback_form_field:
      type: object
      properties:
        id:
          type: string
          description: |
            Unique identifier of the field
          example: 674d7aaa13e599deae0001b2
        field_type:
          type: string
          enum:
            - NPS
            - FREE_FORM
            - CSAT
            - MULTIPLE_CHOICE
          example: CSAT
        field_label:
          type: string
          description: |
            The label of the field (i.e. the question that was answered)
          example: How would you rate our service?
        field_choices:
          type:
            - array
            - 'null'
          items:
            type: object
            properties:
              id:
                type: string
              text:
                type: string
              isOtherOption:
                type: boolean
                description: Whether this is the "Other" option
                example: false
          description: |
            All choices that were ever available for this field

            Only set for MULTIPLE_CHOICE fields
          example: null
    feedback_result_field:
      type: object
      properties:
        rating:
          type:
            - integer
            - 'null'
          description: |
            Rating assigned by the respondent, if any

            Is set for CSAT and NPS fields
          example: 4
        content:
          type:
            - string
            - 'null'
          description: |
            Text content written by the respondent, if any

            Is set for FREE_FORM fields
          example: null
        choices:
          type:
            - array
            - 'null'
          items:
            type: string
          description: |
            Choices selected by the respondent

            Is set for MULTIPLE_CHOICE fields
          example: null
        feedback_form_field:
          $ref: '#/components/schemas/feedback_form_field'
    feedback_result_reply:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the reply
          example: 1
        created:
          type: string
          format: datetime
          description: Date the reply was created
          example: '2024-11-15T10:00:15+00:00'
        author_name:
          type: string
          description: Author of the reply
          example: Jane Doe
        content:
          type: string
          description: Content of the reply
          example: Thank you for your feedback
        feedback_result_id:
          type: integer
          description: Identifier of the feedback result
          example: 1
        user_id:
          allOf:
            - $ref: '#/components/schemas/UserId'
        is_reply_suggestion:
          type: boolean
          description: Whether the reply was created using an AI suggestion
          example: false
    feedback_result:
      type: object
      properties:
        id:
          type: integer
          example: 1
        business_id:
          allOf:
            - $ref: '#/components/schemas/BusinessId'
        firstname:
          type: string
          description: Firstname of the respondent
          example: John
        lastname:
          type: string
          description: Lastname of the respondent
          example: Doe
        nps:
          allOf:
            - $ref: '#/components/schemas/nps'
        content:
          type: string
          description: Content of the FREE_FORM field
          example: >-
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse
            vulputate efficitur augue, ac auctor nibh scelerisque at. Nulla
            facilisi. Maecenas luctus efficitur sem sit amet ullamcorper. Donec
            tempor augue lorem, vitae convallis sapien aliquam id. Maecenas eu
            odio non est pretium eleifend. Nullam at odio eu ligula ultrices
            tincidunt. Nulla euismod aliquet ex eget efficitur.
        state:
          allOf:
            - $ref: '#/components/schemas/feedback_result-state'
        optin:
          type: boolean
          description: Whether the respondent accepts to be contacted
          enum:
            - true
            - false
        created:
          type: string
          format: datetime
          description: Date the feedback result was created on
          example: '2024-10-25T15:12:11+00:00'
        feedback_form:
          type: object
          properties:
            id:
              allOf:
                - $ref: '#/components/schemas/properties-id'
            display_name:
              allOf:
                - $ref: '#/components/schemas/display_name'
          description: Information about the corresponding feedback form
        feedback_result_fields:
          type: array
          items:
            $ref: '#/components/schemas/feedback_result_field'
          description: The various fields of the feedback result
        comments:
          type: array
          items:
            $ref: '#/components/schemas/feedback_result_reply'
          description: The replies of the feedback result
        extra:
          type: object
          description: >-
            The additional hidden fields (other than `firstname`, `lastname`,
            `store_code`, `email` and `date`)
          example:
            extra_field: value
            extra_field_2: value_2
    url:
      type: string
      description: The URL receiving the webhook's data.
      example: https://example.com/webhook
    event_type:
      type: string
      description: The webhook event type.
      enum:
        - business_created
        - business_updated
        - business_deleted
        - message_updated
        - message_created
        - lead_received
      example: business_created
    WebhookItem:
      type: object
      required:
        - id
        - url
        - event_type
        - created_at
        - updated_at
        - org_id
      properties:
        id:
          type: integer
          description: The identifier for the webhook configuration.
          example: 1
        url:
          $ref: '#/components/schemas/url'
        event_type:
          $ref: '#/components/schemas/event_type'
        created_at:
          type: string
          description: An ISO 8601 date-time string representing the webhook creation date.
          example: '2024-11-27T16:10:44.929678Z'
        updated_at:
          type: string
          description: >-
            An ISO 8601 date-time string representing the webhook last update
            date.
          example: '2024-11-27T16:10:44.929678Z'
        org_id:
          type: integer
          description: The organization identifier for the webhook configuration.
          example: 1
    webhook_url:
      type: string
      description: The URL receiving the webhook's data. Only HTTPS URLs are supported.
      example: https://example.com/webhook
    webhook_event_type:
      type: string
      description: The webhook event type.
      example: business_created
    CreateWebhookPayloadItem:
      type: object
      required:
        - url
        - event_type
      properties:
        url:
          $ref: '#/components/schemas/webhook_url'
        event_type:
          $ref: '#/components/schemas/webhook_event_type'
    CreateWebhooksPayload:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateWebhookPayloadItem'
          description: The list of webhook configurations to create.
    WebhookDeleteSuccess:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: The status of the webhook deletion.
          example: success
    UpdateWebhookPayload:
      type: object
      required:
        - url
      properties:
        url:
          $ref: '#/components/schemas/webhook_url'
    tryout_result_status:
      type: string
      description: Result status of the webhook tryout.
      enum:
        - success
        - error
      example: success
    WebhookTryoutResult:
      type: object
      properties:
        payload:
          type: object
          description: The webhook sent payload. Varies depending on the event type.
        event_type:
          $ref: '#/components/schemas/event_type'
        url:
          $ref: '#/components/schemas/url'
        status:
          $ref: '#/components/schemas/tryout_result_status'
    WebhookEventTypes:
      type: array
      items:
        $ref: '#/components/schemas/event_type'
      example:
        - business_created
        - business_updated
        - business_deleted
        - message_updated
        - message_created
        - lead_received
    WebhookConversation:
      type: object
      title: Conversation
      properties:
        id:
          type: integer
        consumer_img:
          type:
            - string
            - 'null'
          format: url
          description: The url of the consumer's profile picture
          example: https://www.example.com/profile-picture.jpg
        consumer_name:
          type:
            - string
            - 'null'
          description: >
            The name of the consumer, can be empty. The format may differ
            depending

            on the platform of contact (ex: "John Doe", "John Doe (@johndoe)",

            "@johndoe", "", ...).
          example: John Doe
        business:
          type: object
          properties:
            id:
              description: The id of the business
              type: integer
        messaging_partner:
          $ref: '#/components/schemas/MessagingPartner'
    MessageCreatedEvent:
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/Message'
            - type: object
        conversation:
          allOf:
            - $ref: '#/components/schemas/WebhookConversation'
            - type: object
        org_id:
          type: integer
          description: The id of the organization
    MessageReceivedEvent:
      allOf:
        - $ref: '#/components/schemas/Message'
        - type: object
          properties:
            message_id:
              type: integer
              deprecated: true
              description: |
                The id of the message.

                Deprecated, use `id` instead.
            org_id:
              type: integer
              description: The id of the organization
            business_id:
              type: string
              description: The id of the business
            received_at:
              deprecated: true
              type: string
              description: |
                The date at which the message was received
                format (ex: "2023-01-31T16:22:17.327878+00:00").

                Deprecated, use `date` instead.
              example: '2023-01-31T16:22:17.327878+00:00'
            consumer_img:
              type:
                - string
                - 'null'
              format: url
              description: The url of the consumer's profile picture
              example: https://www.example.com/profile-picture.jpg
            consumer_name:
              type:
                - string
                - 'null'
              description: >
                The name of the consumer, can be empty. The format may differ
                depending

                on the platform of contact (ex: "John Doe", "John Doe
                (@johndoe)",

                "@johndoe", "", ...).
              example: John Doe
            messaging_partner:
              $ref: '#/components/schemas/MessagingPartner'
            event_type:
              type: string
              enum:
                - message_received
    LeadFieldType:
      type: string
      description: The lead field type. `OPT-IN` type is a `BOOLEAN` type
      enum:
        - TEXT
        - NUMBER
        - EMAIL
        - PHONE_NUMBER
        - BOOLEAN
        - OPT_IN
      example: TEXT
    LeadItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          $ref: '#/components/schemas/LeadFieldType'
        name:
          type: string
          description: name of the field collected
          example: Your firstname
        value:
          type: string
          description: value of the field corresponding to the lead
          example: John
    LeadWebhook:
      type: object
      properties:
        id:
          type: integer
          description: The identifier for the webhook configuration.
          example: 1
        source:
          type: string
          description: The source of the lead, how we retrieved it.
          example: chatbot
        created_at:
          type: string
          description: An ISO 8601 date-time string representing the webhook creation date.
          example: '2024-11-27T16:10:44.929678Z'
        chatbot_id:
          type: integer
          description: The identifier of the chatbot that collected the lead
          example: 1
        chatbot_name:
          type: string
          description: Name of the chatbot that collected the lead
          example: Jim
        business_name:
          type: string
          description: Name of the business related to the lead
          example: Partoo
        store_code:
          type: string
          description: Store code of the business related to the lead
          example: Partoo123
        values:
          type: array
          items:
            $ref: '#/components/schemas/LeadItem'
  responses:
    '400':
      description: Your request is incorrect
      content:
        application/json:
          schema:
            description: |
              Error that occcurs when your request is incorrect
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  json:
                    type: object
    '401':
      description: You are not authenticated
      content:
        application/json:
          schema:
            description: Error that occurs when you are not authenticated
            type: object
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  authentication:
                    type: string
                    default: User not authenticated
    '403':
      description: |
        You are not allowed to perform this action
      content:
        application/json:
          schema:
            description: >
              Error that occurs when you are authenticated but you are trying to
              perform an action you are not allowed to perform
            type: object
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  authorization:
                    type: string
                    default: Operation not allowed
    '404':
      description: Resource does not exist
      content:
        application/json:
          schema:
            description: >-
              Error that occcurs when you are trying to reach a resource that
              does not exist
            type: object
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  json:
                    type: string
                    default: Resource not found
  parameters:
    query_filter_by_fuzzy_query_on_business:
      in: query
      name: query
      schema:
        type: string
      required: false
      description: Parameter to fuzzy search businesses on city, zipcode and name
    query_business__in:
      in: query
      name: business__in
      description: Filter by business ids
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BusinessId'
    query_filter_by_org_id:
      in: query
      name: org_id
      schema:
        type: integer
      required: false
      description: Filter by organization id
    query_filter_by_group_id:
      in: query
      name: group_id
      schema:
        type: integer
      required: false
      description: Filter by group id
      deprecated: true
    query_filter_by_groups:
      in: query
      name: groups
      schema:
        type: array
        items:
          type: integer
      required: false
      description: >
        Filter by groups (new system), using the access logic with the and/or
        depending on the groups sections


        See <a href="#tag/Groups-and-Sections-NEW">the Groups and Sections
        description</a>
      example: 1,2,3
    query_filter_by_country:
      in: query
      name: country
      schema:
        type: string
      required: false
      description: Filter by country - ISO 3166 alpha2 code (i.e. âFRâ for France)
    query_filter_by_business_name:
      in: query
      name: name
      schema:
        type: string
      required: false
      description: Filter by name
    query_filter_by_business_status:
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/BusinessStatusFilter'
    query_filter_by_zipcode:
      in: query
      name: zipcode
      schema:
        type: string
      required: false
      description: Filter by zipcode
    query_filter_by_city:
      in: query
      name: city
      schema:
        type: string
      required: false
      description: Filter by city
    query_filter_by_business_code:
      in: query
      name: code
      schema:
        type: string
      required: false
      description: Filter by code
    query_filter_by_business_modification_timestamp:
      in: query
      name: modified__gte
      deprecated: false
      schema:
        type: number
      required: false
      description: Filter by modified attribute (modified >= modified_gte)
    query_filter_by_business_features__in:
      in: query
      name: features__in
      schema:
        allOf:
          - $ref: '#/components/schemas/FeatureEnum'
        description: >
          Filter businesses that have all the features provided, separated by
          commas.
        type: string
        example: diffusion,review_management
    query_filter_by_business_features__notin:
      in: query
      name: features__notin
      schema:
        allOf:
          - $ref: '#/components/schemas/FeatureEnum'
        description: >
          Filter businesses that *do not* have all the features provided,
          separated by commas.
        type: string
        example: diffusion,review_management
    query_filter_by_business_subscription_to_review_management:
      in: query
      deprecated: false
      name: subscribed_to_rm
      schema:
        type: string
        enum:
          - 'True'
          - 'False'
      required: false
      description: |
        Filter by current subscription to `review_management`.
        Equivalent to using `features__in=review_management`.
    query_filter_by_business_subscription_to_presence_management:
      in: query
      deprecated: false
      name: subscribed_to_pm
      schema:
        type: string
        enum:
          - 'True'
          - 'False'
      required: false
      description: |
        Filter by current subscription to `presence_management`.
        Equivalent to using `features__in=diffusion`.
    query_filter_by_business_subscription_to_review_booster:
      in: query
      deprecated: false
      name: subscribed_to_rb
      schema:
        type: string
        enum:
          - 'True'
          - 'False'
      required: false
      description: |
        Filter by current subscription to `review_booster`.
        Equivalent to using `features__in=review_invite`.
    query_filter_by_business_subscription_to_messages:
      in: query
      deprecated: false
      name: subscribed_to_bm
      schema:
        type: string
        enum:
          - 'True'
          - 'False'
      required: false
      description: |
        Filter by current subscription to `messages`
        Equivalent to using `features__in=messages`
    query_filter_by_business_completion_rate__gte:
      in: query
      name: completion_rate__gte
      deprecated: false
      schema:
        type: number
      required: false
      description: >-
        Filter by completion_rate attribute (completion_rate >=
        completion_rate__gte)
    query_filter_by_business_completion_rate__lte:
      in: query
      name: completion_rate__lte
      deprecated: false
      schema:
        type: number
      required: false
      description: >-
        Filter by completion_rate attribute (completion_rate <=
        completion_rate__lte)
    query_filter_by_business_completion_rate:
      in: query
      name: completion_rate
      deprecated: false
      schema:
        type: string
        enum:
          - low
          - mid
          - high
        example: low,mid
      required: false
      description: >-
        Filter by completion_rate attribute. You can separate the values by a
        comma, as done in the example.
    query_filter_by_business_promo:
      in: query
      name: has_promo
      deprecated: true
      schema:
        type: string
        enum:
          - 'True'
          - 'False'
      required: false
      description: Retrieve only businesses having promotional offers
    query_page_up_to_100:
      in: query
      name: page
      schema:
        type: integer
        default: 1
      description: >-
        Page number, Starts at 1. From 1 to 100 results per page (see
        `per_page`)
    query_per_page_1_100:
      in: query
      name: per_page
      schema:
        type: integer
        default: 30
        minimum: 1
        maximum: 100
      description: Number of items to return per page. Currently limited to 100.
    business_id:
      in: path
      name: business_id
      required: true
      schema:
        type: string
      description: >
        Business id.<br/>

        It may be replaced by `c-{code}` where code is the store code, which
        should be unique per organization. This can be used only for
        `ORG_ADMIN`, `GROUP_MANAGER` and `BUSINESS_MANAGER` users.
    category_name_optional:
      in: query
      name: category_name
      required: false
      schema:
        type: string
        example: gcid:restaurant
      description: Category for which availabe attributes will be fetched.
    country:
      in: query
      name: country
      required: true
      schema:
        type: string
      description: >
        <p>Country for which available attributes will be fetched - use ISO 3166
        alpha2 code ("FR", "EN", "IT").
      example: FR
    category_more_hours_business:
      in: query
      name: category
      required: false
      schema:
        type: string
        example: gcid:restaurant
      description: >-
        If supplied, will only return more hours that are available for the
        specified business category. If not supplied, the business' main
        category will be used.
    country_more_hours_business:
      in: query
      name: country
      required: false
      schema:
        type: string
      description: >
        If supplied, will only return more hours that are available in the
        specified country. - use ISO 3166 alpha2 code ("FR", "EN", "IT"). If not
        supplied, the country from the business' address will be used.
      example: FR
    path_service_id:
      in: path
      name: service_id
      required: true
      schema:
        type: string
      description: >-
        <p> Id of the service (For creation you can get this id by calling <a
        href="#operation/getServicesSuggestions">get services suggestions
        endpoint</a>)</p>
    path_org_id:
      in: path
      name: org_id
      required: true
      schema:
        type: integer
      description: Organization id
    query_category_country:
      in: query
      name: country
      required: false
      description: >
        Filters categories available for businesses in given country.


        If no country is given, then the endpoint returns the list of all
        existing available categories.


        Use country ISO 3166 alpha2 code.
      schema:
        type: string
      example: FR
    query_category_lang:
      in: query
      name: lang
      required: false
      schema:
        $ref: '#/components/schemas/Lang'
      description: >
        Language to get the category name. If not given, the user's language is
        used.
    query_category_state:
      in: query
      name: state
      required: false
      schema:
        type: string
        enum:
          - OK
          - DEPRECATED
    query_category_block_push_long:
      in: query
      name: block_push_long_description_on_gmb
      description: >-
        Filter on `block_push_long_description_on_gmb` param (boolean indicating
        if the business long description can be pushed to Google when the
        business belongs to this category)
      required: false
      schema:
        type: boolean
    query_category_search_query:
      in: query
      name: search_query
      description: Fuzzy search on gmb_id and names translations
      required: false
      schema:
        type: string
    query_category_order_by:
      in: query
      name: order_by
      description: |
        Order results by colum. Add "-" before for ordering by descending order.
      required: false
      schema:
        type: string
        enum:
          - gmb_id
          - '-gmb_id'
    query_category_live__isnull:
      in: query
      name: live__isnull
      description: |
        Filter on `live_id` parameter value

        True: Recover categories which `live_id` is null

        False: Recover categories which `live_id` is not null

        Null: Do not filter on `live_id`
      schema:
        type: boolean
    query_page:
      in: query
      name: page
      schema:
        type: integer
        default: 0
      description: Page number. 30 results per page
    query_category_with_names_categories:
      in: query
      name: with_names
      description: >
        Returns an object representing the list of translations in the available
        languages for the requested category. See example on the right.


        If `with_names` is true, the translations will appear in the field
        __names__
      required: false
      schema:
        type: boolean
        default: false
    query_category_with_countries:
      in: query
      name: with_countries
      description: >
        Returns an array of strings representing the list of country codes in
        which the requested category is available.


        If `with_countries` is true, the country list will appear in the field
        __countries__
      required: false
      schema:
        type: boolean
        default: false
    query_category_return_live:
      in: query
      name: return_live
      description: Return the corresponding live category instead of the requested category
      required: false
      schema:
        type: boolean
        default: false
    query_category_with_names:
      in: query
      name: with_names
      description: >
        Returns an object representing the list of translations in the available
        languages for the requested category. See example on the right.


        If `with_names` is true, the translations will appear in the field
        __names__
      required: false
      schema:
        type: boolean
        default: false
    PerPage:
      in: query
      name: per_page
      schema:
        type: integer
        default: 30
        minimum: 1
        maximum: 100
      description: Number of items to return per page.
    Cursor:
      in: query
      name: cursor
      schema:
        type: string
      description: |
        The cursor identifiying the page of data to fetch.
        If no cursor is provided, the query will return the first page of data.
        A cursor for the next page of data is provided in the response of this
        request.
    path_template_id:
      in: path
      name: template_id
      required: true
      schema:
        type: number
      description: Template id
    Page:
      in: query
      name: page
      schema:
        type: integer
        default: 1
        minimum: 1
      description: Current page number.
    custom_field_id:
      in: path
      name: custom_field_id
      required: true
      schema:
        $ref: '#/components/schemas/CustomFieldId'
    custom_field_force_update:
      in: query
      name: force
      required: false
      schema:
        $ref: '#/components/schemas/CustomFieldForceUpdate'
    query_org_id:
      in: query
      name: org_id
      schema:
        type: integer
      description: Organization id
    section_id:
      in: path
      name: section_id
      required: true
      schema:
        $ref: '#/components/schemas/CustomFieldSectionId'
    category_name:
      in: query
      name: category_name
      required: true
      schema:
        type: string
        example: gcid:restaurant
      description: Category for which availabe attributes will be fetched.
    lang:
      in: query
      name: lang
      required: false
      schema:
        type: string
        enum:
          - fr
          - es
          - it
          - en
          - de
          - pt
          - pt-BR
      description: >
        <p> Language in which the attributes name and groups name will be
        translated. <p> If language is not specified, by default we take the
        language of the user.
    category_more_hours_list:
      in: query
      name: category
      required: true
      schema:
        type: string
        example: gcid:restaurant
      description: Category for which availabe More Hour IDs will be fetched.
    country_more_hours_list:
      in: query
      name: country
      required: true
      schema:
        type: string
      description: >
        <p>Country for which available More Hour IDs will be fetched - use ISO
        3166 alpha2 code ("FR", "EN", "IT").
      example: FR
    lang_more_hours:
      in: query
      name: lang
      required: false
      schema:
        type: string
        enum:
          - fr
          - es
          - it
          - en
          - de
          - pt
          - pt-BR
      description: >
        <p> Language in which the More Hours names will be translated. <p> If
        language is not specified, by default we take the language of the user.
    google_location_id:
      in: path
      name: google_location_id
      required: true
      schema:
        type: string
      description: Google location unique id on Partoo
    query_page_100:
      in: query
      name: page
      schema:
        type: integer
        default: 1
      description: Page number. Starts at 1. 100 results per page.
    path_group_id:
      in: path
      name: group_id
      required: true
      schema:
        type: integer
      description: Group id
    path_section_id:
      in: path
      name: section_id
      required: true
      schema:
        type: string
      description: Section id
    organization_force_delete:
      in: query
      name: force
      required: false
      schema:
        $ref: '#/components/schemas/OrganizationForceDeletion'
    query_post_start_datetime:
      in: query
      name: start_datetime
      schema:
        type: string
        example: '2020-11-06T23:59:59'
      required: false
      description: >
        Filters Posts based on their start datetime.


        The start datetime represents the moment on which a Post of type
        <b>event/offer</b>

        will become available. In case of Posts of type <b>news</b>, the
        `start_datetime`

        it will be compare to the creation date of the Post, as the field is not

        present in this context.
    query_post_end_datetime:
      in: query
      name: end_datetime
      schema:
        type: string
        example: '2020-11-06T23:59:59'
      required: false
      description: >
        Filter Posts based on their end datetime.


        The end datetime represents the date on which the Post of type
        <b>event/offer</b>

        will expire. In case of Posts of type <b>news</b>, the `end_datetime`

        it will be compare to exactly one week after the creation date of the
        Post,

        as the field is not present in this context.
    query_post_summary:
      in: query
      name: summary
      schema:
        type: string
      required: false
      description: |
        Filter Posts based on their description.

        It returns Posts that contain in their description the given string.
        The text does not have to match perfectly.
    query_post_state_in:
      in: query
      name: state__in
      schema:
        type: string
        enum:
          - live
          - to_configure
          - pending
          - scheduled
          - error
          - expired
      required: false
      description: Filter Posts based on its state.
    query_post_topic_type:
      in: query
      name: topic_type
      schema:
        type: string
        enum:
          - standard
          - event
          - offer
          - alert
      required: false
      description: Filter Posts based on its type.
    query_post_topic_type_in:
      in: query
      name: topic_type__in
      schema:
        type: string
        enum:
          - standard
          - event
          - offer
          - alert
      required: false
      description: Filter Posts based on a list of different types.
    path_post_id:
      in: path
      name: post_id
      required: true
      schema:
        type: number
      description: Post id
    query_place_action_link_lang:
      in: query
      name: lang
      required: false
      schema:
        $ref: '#/components/schemas/Lang'
      description: >-
        Preferred language for place action links. If no language is provided,
        the user's default language will be used. If the user's default language
        is unavailable, the country's primary language will be used.
    query_business__notin:
      in: query
      name: business__notin
      description: Excludes from the request all businesses provided
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BusinessId'
    query_content__isnull:
      in: query
      name: content__isnull
      description: >
        Filter by review's content


        If set to `true`, the endpoint will return all the reviews without
        content.


        **Note:** This is the content of the review and not the content of the
        reply.
      schema:
        type: string
        enum:
          - 'true'
          - 'false'
        example: false
    query_partner__in:
      in: query
      name: partner__in
      description: Filter by publisher
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ReviewPublisherLabel'
        example: google_my_business,facebook
    query_gmb_rating__in:
      in: query
      name: gmb_rating__in
      description: |
        Filter only by Google ratings
      schema:
        type: array
        items:
          type: number
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        example: 4,5
    query_tripadvisor_rating__in:
      in: query
      name: tripadvisor_rating__in
      description: |
        Filter only by Tripadvisor ratings
      schema:
        type: array
        items:
          type: number
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        example: 1,2
    query_recommended__in:
      in: query
      name: recommended__in
      description: |
        Filter only by Facebook recommendation
      schema:
        type: array
        items:
          type: boolean
          enum:
            - true
            - false
        example: false
    query_review_update_date__gte:
      in: query
      name: update_date__gte
      description: >
        Filter by `update_date`


        Return all the reviews whose `update_date` >= `given_date`.


        For example : `update_date__gte=2019-01-01T00:00:00` will return all
        reviews from the first January of 2019

        until today.


        **Note** : The update dates are stored in UTC.
      schema:
        type: string
        format: datetime
        example: '2017-08-01T00:00:00'
    query_review_update_date__lte:
      in: query
      name: update_date__lte
      description: >
        Filter by `update_date`


        Return all the reviews whose `update_date` <= `given_date`.


        For example : `update_date__lte=2020-01-01T00:00:00` will return all
        reviews from the date of the first review

        until the first january of 2020.


        **Note** : The update dates are stored in UTC.
      schema:
        type: string
        format: datetime
        example: '2017-08-02T00:00:00'
    query_review_state:
      in: query
      name: state__in
      description: Filter by state
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ReviewState'
        example: treated,not_treated
    query_tag_label_in:
      in: query
      name: tag_label__in
      description: >
        Filter by Tag label


        Will partially match given labels (ie `foo` will match reviews with tag
        `food`)
      schema:
        type: array
        items:
          $ref: '#/components/schemas/TagLabel'
        example: food,drink
    query_review_without_tag:
      in: query
      name: without_tag
      description: |
        Filter only reviews without tags
      schema:
        type: boolean
        example: true
    query_keywords:
      in: query
      name: keywords
      description: >
        Filter by keywords


        Return all the reviews with not-nullable content, that contain the
        provided list of keywords.


        **Note:** This is the content of the review and not the content of the
        reply.


        The filter accepts both simple and composed words.

        To indicate it's a composed keyword, add the `+` as separator.

        For example:

         `keywords=bonjour` returns all reviews containing the keyword `bonjour`

         `keywords=good+service` returns all reviews containing the
         combined keyword **good service**, without splitting the keyword.
         No reviews containing just **good** or just **service** will be returned.

         `keywords=bonjour,good+service`: returns all reviews that contain either just **bonjour**,
         either just **good service** or both keywords at the same time.
      schema:
        type: array
        items:
          type: string
        example: bonjour,good+service
    query_order_by:
      in: query
      name: order_by
      schema:
        type: string
        enum:
          - update_date
          - '-update_date'
        example: update_date
      description: |
        A `-` sign in front of the value indicates a descending order.
    query_positive_template:
      in: query
      name: positive
      description: >-
        Filter on templates made to answer positive reviews (ex from 4 to 5
        stars on gmb).
      required: false
      schema:
        type: boolean
    query_neutral_template:
      in: query
      name: neutral
      description: Filter on templates made to answer neutral reviews (ex 3 stars on gmb).
      required: false
      schema:
        type: boolean
    query_negative_template:
      in: query
      name: negative
      description: >-
        Filter on templates made to answer negative reviews (ex from 1 to 2
        stars on gmb).
      required: false
      schema:
        type: boolean
    query_language__in:
      in: query
      name: language__in
      description: Filter on templates in the specified languages.
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Lang'
        example: fr,it
    query_title_query:
      in: query
      name: title_query
      schema:
        type: string
      required: false
      description: Filter on templates based on their title
    query_text_query:
      in: query
      name: text_query
      schema:
        type: string
      required: false
      description: Filter on templates based on their text
    query_metrics:
      in: query
      name: metrics
      required: true
      description: |
        List of analytics to return.
         At least one in that list.
      schema:
        type: string
        enum:
          - business_impressions_desktop_maps
          - business_impressions_desktop_search
          - business_impressions_mobile_maps
          - business_impressions_mobile_search
          - business_direction_requests
          - call_clicks
          - website_clicks
    query_dimensions:
      in: query
      name: dimensions
      required: false
      description: >
        How the returned data will be aggregated.

        At most 'business' and one time dimensions of the list.

        If no dimension is given, the request will return the sum of each metric
        for all requested days and businesses.
      schema:
        type: string
        enum:
          - business
          - day
          - week
          - month
          - year
    parameters_query_order_by:
      in: query
      name: order_by
      required: false
      description: |
        Where the object is either a dimension or a metric
         and is used in the request. At most one in the list.
         - before a field to order_by DESC, nothing for ASC
      schema:
        type: string
        enum:
          - <object>
          - '-<object>'
        example: order_by=-call_clicks
    parameters_query_business__in:
      in: query
      name: business__in
      description: Filter by business ids
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BusinessID'
    parameters_query_business__notin:
      in: query
      name: business__notin
      required: false
      description: |
        Filter by all allowed businesses except
         the ones given in `business__notin`
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BusinessID'
    query_city:
      in: query
      name: city
      required: false
      description: Filter by city
      schema:
        type: string
    query_query:
      in: query
      name: query
      required: false
      description: |
        Parameter to fuzzy search businesses on city,
         zipcode and name
      schema:
        type: string
    query_filter_date__gte:
      in: query
      name: filter_date__gte
      required: false
      description: |
        Filter by `date`

        Return all the analytics whose `date` >= `given_date`.
      schema:
        type: string
        format: datetime
    query_filter_date__lte:
      in: query
      name: filter_date__lte
      description: |
        Filter by `date`.

        Return all the analytics whose `filter_date` <= `given_date`.
      schema:
        type: string
        format: datetime
    parameters_query_page:
      in: query
      name: page
      required: false
      description: |
        The page number you want to request.

        The value defaults to 1, when it is not included.
      schema:
        type: integer
        minimum: 1
    query_per_page:
      in: query
      name: per_page
      required: false
      description: |
        The maximum number of result items to return in a page.

        The value defaults to 500, when it is not included.
      schema:
        type: integer
        maximum: 500
    parameters_query_metrics:
      in: query
      name: metrics
      required: true
      description: |
        List of analytics to return.
         At least one in that list.
      schema:
        type: string
        enum:
          - count
          - threshold
        example: metrics=count,threshold
    parameters_query_dimensions:
      in: query
      name: dimensions
      required: false
      description: >
        How the returned data will be aggregated.

        At most 'business' and one time dimensions of the list.

        If no dimension is given, the request will return the sum of each metric
        for all requested days and businesses.
      schema:
        type: string
        enum:
          - business
          - keyword
          - month
          - year
        example: dimensions=keyword,month
    parameters_query_order_by-2:
      in: query
      name: order_by
      required: false
      description: |
        Where the object is either a dimension or a metric
         and is used in the request. At most one in the list.
         - before a field to order_by DESC, nothing for ASC
      schema:
        type: string
        enum:
          - <object>
          - '-<object>'
        example: order_by=-count
    parameters_query_filter_date__gte:
      in: query
      name: filter_date__gte
      required: false
      description: |
        Filter by date.

        Return all the analytics whose `date >= given_date`.
      schema:
        type: string
        format: datetime
    parameters_query_filter_date__lte:
      in: query
      name: filter_date__lte
      required: false
      description: |
        Filter by date.

        Return all the analytics whose `date <= give_date`.
      schema:
        type: string
        format: datetime
    parameters_query_metrics-2:
      in: query
      name: metrics
      required: true
      description: |
        List of analytics to return.
         At least one in that list.
      schema:
        type: string
        enum:
          - average_rating
          - rating_distribution
          - reviews_count
          - reply_time
          - reply_means
          - average_rating_distribution
          - rank
    parameters_query_dimensions-2:
      in: query
      name: dimensions
      required: false
      description: >
        How the returned data will be aggregated.

        If no dimension is given, the request will return the sum of each metric
        for all requested days and businesses.
      schema:
        type: string
        enum:
          - day
          - week
          - month
          - year
          - business
          - group
          - user
          - tag
    parameters_query_order_by-3:
      in: query
      name: order_by
      required: false
      description: |
        See above for the list of all orders available. At most one in the list.
         - `-` before a field to order_by DESC, nothing for ASC
      schema:
        type: string
        example: '-average_rating'
    query_groups:
      in: query
      name: groups
      description: Filter by groups ids
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupID'
    query_tags:
      in: query
      name: tags
      description: >
        Restrict the data returned on reviews that have been assigned the
        specified tags.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/TagID'
    query_update_date__gte:
      in: query
      name: update_date__gte
      required: false
      description: >
        Restrict the data returned on reviews which `update_date` are after the
        given date.
      schema:
        type: string
        format: datetime
    query_update_date__lte:
      in: query
      name: update_date__lte
      description: >
        Restrict the data returned on reviews which `update_date` are before the
        given date.
      schema:
        type: string
        format: datetime
    parameters_query_page-2:
      in: query
      name: page
      required: false
      description: |
        The page number you want to request.
      schema:
        type: integer
        minimum: 1
        default: 1
    parameters_query_per_page:
      in: query
      name: per_page
      required: false
      description: |
        The maximum number of result items to return in a page.
      schema:
        type: integer
        default: 30
    query_review_business__in:
      in: query
      name: business__in
      description: |
        Filter by business ids

        Return the reviews of the businesses given in list.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BusinessId'
    query_review_bucket:
      in: query
      name: bucket
      schema:
        type: string
        default: week
        enum:
          - day
          - week
          - month
          - year
      description: >
        Defining the time range of a data bucket.


        This will determine the precision of the returned data. For example, if
        you choose `day`, you will receive the

        number of reviews for each day.
    query_review_cumulative:
      in: query
      name: cumulative
      schema:
        type: string
        default: 'true'
        enum:
          - 'true'
          - 'false'
      description: >
        If `cumulative` = `false`, return the average rating of reviews from the
        current bucket only.


        If `cumulative` = `true`, return the average rating of reviews from all
        the buckets until the current one

        (included). The cumulative representation show the evolution of the
        average rating over time.
    path_user_id:
      in: path
      required: true
      name: user_id
      schema:
        type: string
      description: User id
    query_filter_by_email:
      in: query
      name: email
      schema:
        type: string
        format: email
      description: Filter by email
    query_filter_by_user_status:
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/UserStatus'
      description: Filter by status
    state__in:
      in: query
      name: state__in
      schema:
        type: array
        items:
          allOf:
            - $ref: '#/components/schemas/feedback_result-state'
        example: treated,not_treated
      description: State of the feedback result
    created__lte:
      in: query
      name: created__lte
      schema:
        type: string
        format: datetime
        example: '2024-10-01T00:00:00Z'
      description: Max date the feedback result was created on
    created__gte:
      in: query
      name: created__gte
      schema:
        type: string
        format: datetime
        example: '2024-11-01T00:00:00Z'
      description: Min date the feedback result was created on
    nps__lte:
      in: query
      name: nps__lte
      schema:
        allOf:
          - $ref: '#/components/schemas/nps'
      description: Max NPS of the feedback result
    nps__gte:
      in: query
      name: nps__gte
      schema:
        allOf:
          - $ref: '#/components/schemas/nps'
      description: Min NPS of the feedback result
    nps__in:
      in: query
      name: nps__in
      schema:
        type: array
        items:
          allOf:
            - $ref: '#/components/schemas/nps'
        example: 0,1,2,8,9,10
      description: The possible NPS values of the feedback result
    search:
      in: query
      name: search
      schema:
        type: array
        maxItems: 6
        items:
          type: string
      description: The possible words contained in the text field of the feedback result
    optin:
      in: query
      name: optin
      schema:
        type: boolean
        enum:
          - true
          - false
      description: Whether the respondent accepts to be contacted
    feedback_form_ids:
      in: query
      name: feedback_form_ids
      schema:
        type: array
        items:
          allOf:
            - $ref: '#/components/schemas/feedback_form-id'
      description: The forms for which the feedback result is for
    org_id:
      name: org_id
      in: query
      schema:
        type: integer
      description: Organization identifier, only required for `PROVIDER` users.
      example: 1
      required: false
    webhook_id:
      name: webhook_id
      in: path
      required: true
      schema:
        type: integer
      description: The webhook object identifier.
  securitySchemes:
    ApiKeyAuth:
      description: >
        The authentication system on Partoo API is using API Key that should be
        put in the header of the request (the name of the header is `x-APIKey`).
        An api_key is linked to a user. This user's role will give you different
        access level to the API features.
      type: apiKey
      in: header
      name: x-APIKey
webhooks:
  businessCreated:
    post:
      operationId: business_created
      tags:
        - Webhooks
      summary: New Business Created
      description: |
        This event is triggered when a Business is created in Partoo Database.

        The event payload contains the event type and the business contents.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - business_created
                payload:
                  type: object
                  properties:
                    business:
                      $ref: '#/components/schemas/Business'
      responses:
        '200':
          description: |
            Return a 200 status to indicate that the event was properly received
        '500':
          description: >
            An error in range 500-599 will trigger a retry from webhook delivery
            system, up to 5 times, with an exponential backout.


            > â ï¸ You may have to deal with events not received in order
      security: []
  businessUpdated:
    post:
      operationId: business_updated
      tags:
        - Webhooks
      summary: Business Updated
      description: >
        This event is triggered when a Business is updated in Partoo Database.


        The event payload contains the event type and the business contents.


        Attention, the hook may be triggered on internal changes that may not
        reflect on the contents sent.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - business_updated
                payload:
                  type: object
                  properties:
                    business:
                      $ref: '#/components/schemas/Business'
      responses:
        '200':
          description: |
            Return a 200 status to indicate that the event was properly received
        '500':
          description: >
            An error in range 500-599 will trigger a retry from webhook delivery
            system, up to 5 times, with an exponential backout.


            > â ï¸ You may have to deal with events not received in order
      security: []
  businessDeleted:
    post:
      operationId: business_deleted
      tags:
        - Webhooks
      summary: Business Deleted
      description: |
        This event is triggered when a Business is removed from Partoo Database.

        The event payload contains the event type and the business id.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - business_deleted
                payload:
                  type: object
                  properties:
                    business_id:
                      $ref: '#/components/schemas/BusinessId'
      responses:
        '200':
          description: |
            Return a 200 status to indicate that the event was properly received
        '500':
          description: >
            An error in range 500-599 will trigger a retry from webhook delivery
            system, up to 5 times, with an exponential backout.


            > â ï¸ You may have to deal with events not received in order
      security: []
  messageCreated:
    post:
      operationId: message_created
      tags:
        - Webhooks
      summary: New Message Created
      description: |
        This event is triggered when a conversation has a new message.

        The event payload contains the event type, the content of the message
        created, and additional information about the conversation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - message_created
                payload:
                  $ref: '#/components/schemas/MessageCreatedEvent'
      responses:
        '200':
          description: |
            Return a 200 status to indicate that the event was properly received
        '500':
          description: >
            An error in range 500-599 will trigger a retry from webhook delivery
            system, up to 5 times, with an exponential backout.


            > â ï¸ You may have to deal with events not received in order
      security: []
  messageReceived:
    post:
      operationId: message_received
      tags:
        - Webhooks
      summary: New message received
      deprecated: true
      description: >
        â ï¸ Deprecated, please use the [New Message
        Created](#operation/message_created) webhook instead, and filter on
         `sender_type=Consumer` and `status=Success` to reproduce this webhook comportement.

        This event is triggered when a business receives a new message sent by a

        Consumer.

        It is not triggered for messages sent as the business by a User.


        The event payload contains the event type, the content of the message

        received, and additional information about the conversation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  $ref: '#/components/schemas/MessageReceivedEvent'
      responses:
        '200':
          description: |
            Return a 200 status to indicate that the event was properly received
        '500':
          description: >
            An error in range 500-599 will trigger a retry from webhook delivery
            system, up to 5 times, with an exponential backout.


            > â ï¸ You may have to deal with events not received in order
      security: []
  messageUpdated:
    post:
      operationId: message_updated
      tags:
        - Webhooks
      summary: Message updated
      description: >
        This event is triggered if the field of a message is updated (example:
        `status`, `is_deleted`).


        Messages send via Partoo are created with the status `Sending`, and

        propagated to the messaging channel.

        If the message is sent successfully, the status is changed to `Success`.

        If the messaging channel fails to send the message, the status changed
        to

        `Failed`. A failed message can be retried using the [/retry
        endpoint](#operation/retrySendMessage).


        The event payload contains the event type, the content of the updated
        message and additional information about the conversation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - message_updated
                payload:
                  $ref: '#/components/schemas/MessageCreatedEvent'
      responses:
        '200':
          description: |
            Return a 200 status to indicate that the event was properly received
        '500':
          description: >
            An error in range 500-599 will trigger a retry from webhook delivery
            system, up to 5 times, with an exponential backout.


            > â ï¸ You may have to deal with events not received in order
      security: []
  leadReceived:
    post:
      operationId: lead_received
      tags:
        - Webhooks
      summary: Lead Received
      description: |
        This event is triggered when a Lead is added in Partoo Database.

        The event payload contains the event type and the lead contents.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - lead_received
                payload:
                  type: object
                  $ref: '#/components/schemas/LeadWebhook'
      responses:
        '200':
          description: |
            Return a 200 status to indicate that the event was properly received
        '500':
          description: >
            An error in range 500-599 will trigger a retry from webhook delivery
            system, up to 5 times, with an exponential backout.


            > â ï¸ You may have to deal with events not received in order
      security: []
security:
  - ApiKeyAuth: []
